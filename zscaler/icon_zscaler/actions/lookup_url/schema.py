# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Look up the categorization of a given set of URLs"


class Input:
    URLS = "urls"
    

class Output:
    URL_CATEGORIZATION = "url_categorization"
    

class LookupUrlInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "urls": {
      "type": "array",
      "title": "URLs",
      "description": "The given set of URLs or domains to be looked up",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "required": [
    "urls"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class LookupUrlOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "url_categorization": {
      "type": "array",
      "title": "URL Categorization",
      "description": "Information about given URLs",
      "items": {
        "$ref": "#/definitions/url_categorization"
      },
      "order": 1
    }
  },
  "required": [
    "url_categorization"
  ],
  "definitions": {
    "url_categorization": {
      "type": "object",
      "title": "url_categorization",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL",
          "description": "Checked URL",
          "order": 1
        },
        "urlClassifications": {
          "type": "array",
          "title": "URL Classifications",
          "description": "URL classifications",
          "items": {
            "type": "string"
          },
          "order": 2
        },
        "urlClassificationsWithSecurityAlert": {
          "type": "array",
          "title": "URL classifications with security alert",
          "description": "URL classifications with security alert",
          "items": {
            "type": "string"
          },
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
