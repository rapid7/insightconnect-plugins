# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Add data to reference_data lists"


class Input:
    ELEMENT_TYPE = "element_type"
    NAME = "name"
    TIME_TO_LIVE = "time_to_live"
    TIMEOUT_TYPE = "timeout_type"
    

class Output:
    CREATION_TIME = "creation_time"
    ELEMENT_TYPE = "element_type"
    NAME = "name"
    NUMBER_OF_ELEMENTS = "number_of_elements"
    TIME_TO_LIVE = "time_to_live"
    TIMEOUT_TYPE = "timeout_type"
    

class AddDataToReferenceDataListsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "element_type": {
      "type": "string",
      "title": "Element Type",
      "description": "The element type for the values allowed in the reference set. The allowed values are: ALN (alphanumeric), ALNIC (alphanumeric ignore case), IP (IP address), NUM (numeric), PORT (port number) or DATE. Note that date values need to be represented in milliseconds since the Unix Epoch January 1st 1970",
      "enum": [
        "ALN",
        "ALNIC",
        "IP",
        "NUM",
        "PORT",
        "DATE"
      ],
      "order": 1
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "The name of the reference set being created",
      "order": 2
    },
    "time_to_live": {
      "type": "string",
      "title": "Time to Live",
      "description": "Optional: The time to live interval, for example: '1 month' or '5 minutes'",
      "order": 3
    },
    "timeout_type": {
      "type": "string",
      "title": "Timeout Type",
      "description": "Indicates if the Time to Live interval is based on when the data was first seen or last seen",
      "default": "UNKNOWN",
      "enum": [
        "FIRST_SEEN",
        "LAST_SEEN",
        "UNKNOWN"
      ],
      "order": 4
    }
  },
  "required": [
    "element_type",
    "name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddDataToReferenceDataListsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "creation_time": {
      "type": "number",
      "title": "Creation Time",
      "description": "Creation time",
      "order": 1
    },
    "element_type": {
      "type": "string",
      "title": "Element Type",
      "description": "Element type",
      "order": 2
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "Name",
      "order": 3
    },
    "number_of_elements": {
      "type": "number",
      "title": "Number of Elements",
      "description": "Number of elements",
      "order": 4
    },
    "time_to_live": {
      "type": "string",
      "title": "Time to Live",
      "description": "Time to live",
      "order": 5
    },
    "timeout_type": {
      "type": "string",
      "title": "Timeout Type",
      "description": "Timeout type",
      "order": 6
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
