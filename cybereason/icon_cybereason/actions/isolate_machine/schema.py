# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Isolate a machine associated with the root cause of a Malop, or to remediate a process not involved in a Malop"


class Input:
    ACTIONS_BY_MACHINE = "actions_by_machine"
    INITIATOR_USER_NAME = "initiator_user_name"
    MALOP_ID = "malop_id"
    PYLUM_IDS = "pylum_ids"
    

class Output:
    RESPONSE = "response"
    

class IsolateMachineInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "actions_by_machine": {
      "type": "object",
      "title": "Actions by Machine",
      "description": "Actions by machine",
      "order": 4
    },
    "initiator_user_name": {
      "type": "string",
      "title": "Initiator User Name",
      "description": "Initiator user name",
      "order": 3
    },
    "malop_id": {
      "type": "string",
      "title": "Malop ID",
      "description": "Malop ID to isolate a machine or empty to remediate process not involved in a Malop",
      "order": 1
    },
    "pylum_ids": {
      "type": "array",
      "title": "Pylum IDS",
      "description": "The unique sensor ID the Cybereason platform uses for the machines to isolate",
      "items": {
        "type": "string"
      },
      "order": 2
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class IsolateMachineOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "type": "object",
      "title": "Malop Response",
      "description": "Malop response",
      "order": 1
    }
  },
  "required": [
    "response"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
