# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Compress bytes"


class Input:
    ALGORITHM = "algorithm"
    BYTES = "bytes"
    

class Output:
    COMPRESSED = "compressed"
    

class CompressBytesInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "algorithm": {
      "type": "string",
      "title": "Algorithm",
      "description": "Compression algorithm",
      "enum": [
        "gzip",
        "bzip",
        "lz",
        "xz",
        "zip"
      ],
      "order": 2
    },
    "bytes": {
      "type": "string",
      "title": "Bytes",
      "displayType": "bytes",
      "description": "Base64-encoded file/bytes",
      "format": "bytes",
      "order": 1
    }
  },
  "required": [
    "algorithm",
    "bytes"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CompressBytesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "compressed": {
      "type": "string",
      "title": "Compressed",
      "displayType": "bytes",
      "description": "Compressed",
      "format": "bytes",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
