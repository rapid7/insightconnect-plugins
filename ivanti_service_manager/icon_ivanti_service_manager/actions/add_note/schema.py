# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Adds a journal note to an incident"


class Input:
    CATEGORY = "category"
    INCIDENT_NUMBER = "incident_number"
    NOTES = "notes"
    SOURCE = "source"
    SUMMARY = "summary"
    

class Output:
    JOURNAL_NOTE = "journal_note"
    

class AddNoteInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "category": {
      "type": "string",
      "title": "Category",
      "description": "Category of the note",
      "enum": [
        "Called Customer",
        "Customer Complaint",
        "Customer Feedback",
        "Customer Follow-up",
        "Customer Notes",
        "E-mailed Customer",
        "Left Voice Mail",
        "Memo",
        "Resolution Communication",
        "Status Update"
      ],
      "order": 4
    },
    "incident_number": {
      "type": "integer",
      "title": "Incident Number",
      "description": "Number of the incident to which the note will be added",
      "order": 1
    },
    "notes": {
      "type": "string",
      "title": "Notes",
      "description": "Body of the note",
      "order": 3
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Source of the note",
      "enum": [
        "E-mail",
        "Other",
        "Phone/Fax",
        "Self Service",
        "Voice Mail"
      ],
      "order": 5
    },
    "summary": {
      "type": "string",
      "title": "Summary",
      "description": "Summary of the note",
      "order": 2
    }
  },
  "required": [
    "incident_number",
    "summary"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddNoteOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "journal_note": {
      "$ref": "#/definitions/journal_note",
      "title": "Journal Note",
      "description": "Journal note details",
      "order": 1
    }
  },
  "required": [
    "journal_note"
  ],
  "definitions": {
    "journal_note": {
      "type": "object",
      "title": "journal_note",
      "properties": {
        "AttachmentData": {
          "type": "string",
          "title": "Attachment Data",
          "description": "Notes body",
          "order": 27
        },
        "AttachmentExtension": {
          "type": "string",
          "title": "Attachment Extension",
          "description": "Attachment extension",
          "order": 26
        },
        "AttachmentName": {
          "type": "string",
          "title": "Attachment Name",
          "description": "Attachment name",
          "order": 25
        },
        "Category": {
          "type": "string",
          "title": "Category",
          "description": "Category",
          "order": 7
        },
        "Category_Valid": {
          "type": "string",
          "title": "Category Valid",
          "description": "Category valid",
          "order": 6
        },
        "CreatedBy": {
          "type": "string",
          "title": "Created By",
          "description": "Created by",
          "order": 8
        },
        "CreatedDateTime": {
          "type": "string",
          "title": "Created Date Time",
          "description": "Created date and time",
          "order": 9
        },
        "DisplayText": {
          "type": "string",
          "title": "Display Text",
          "description": "Display text",
          "order": 1
        },
        "IsNewRecord": {
          "type": "boolean",
          "title": "Is New Record",
          "description": "Is new record",
          "order": 29
        },
        "IsUnRead": {
          "type": "boolean",
          "title": "Is Unread",
          "description": "Is unread",
          "order": 30
        },
        "JournalType": {
          "type": "string",
          "title": "Journal Type",
          "description": "Journal type",
          "order": 10
        },
        "LastModBy": {
          "type": "string",
          "title": "Last Mod By",
          "description": "Last modified by",
          "order": 11
        },
        "LastModDateTime": {
          "type": "string",
          "title": "Last Mod Date Time",
          "description": "Last modified date and time",
          "order": 12
        },
        "NotesBody": {
          "type": "string",
          "title": "Notes Body",
          "description": "Notes body",
          "order": 2
        },
        "Owner": {
          "type": "string",
          "title": "Owner",
          "description": "Owner",
          "order": 14
        },
        "OwnerTeam": {
          "type": "string",
          "title": "Owner Team",
          "description": "Owner team",
          "order": 16
        },
        "OwnerTeam_Valid": {
          "type": "string",
          "title": "Owner Team Valid",
          "description": "Owner team valid",
          "order": 15
        },
        "OwnerType": {
          "type": "string",
          "title": "Owner Type",
          "description": "Owner type",
          "order": 17
        },
        "Owner_Valid": {
          "type": "string",
          "title": "Owner Valid",
          "description": "Owner valid",
          "order": 13
        },
        "ParentLink": {
          "type": "string",
          "title": "Parent Link",
          "description": "Parent link",
          "order": 20
        },
        "ParentLink_Category": {
          "type": "string",
          "title": "Parent Link Category",
          "description": "Parent link category",
          "order": 18
        },
        "ParentLink_RecID": {
          "type": "string",
          "title": "Parent Link Rec ID",
          "description": "Parent link rec ID",
          "order": 19
        },
        "ParentOwner": {
          "type": "string",
          "title": "Parent Owner",
          "description": "Parent owner",
          "order": 31
        },
        "PublishToWeb": {
          "type": "boolean",
          "title": "Publish To Web",
          "description": "Publish to web",
          "order": 24
        },
        "ReadOnly": {
          "type": "boolean",
          "title": "Read Only",
          "description": "Read only",
          "order": 28
        },
        "RecId": {
          "type": "string",
          "title": "Rec ID",
          "description": "Rec ID",
          "order": 21
        },
        "Source": {
          "type": "string",
          "title": "Source",
          "description": "Source",
          "order": 4
        },
        "Source_Valid": {
          "type": "string",
          "title": "Source Valid",
          "description": "Source valid",
          "order": 3
        },
        "Subject": {
          "type": "string",
          "title": "Subject",
          "description": "Subject",
          "order": 22
        },
        "TimeSpent": {
          "type": "string",
          "title": "Time Spent",
          "description": "Time spent",
          "order": 5
        },
        "TypeAlias": {
          "type": "string",
          "title": "Type Alias",
          "description": "Type alias",
          "order": 23
        },
        "UnreadTransition": {
          "type": "boolean",
          "title": "Unread Transition",
          "description": "Unread transition",
          "order": 32
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
