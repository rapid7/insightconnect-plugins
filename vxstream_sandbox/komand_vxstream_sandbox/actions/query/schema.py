# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Search the database using query syntax provided at https://www.hybrid-analysis.com/faq"


class Input:
    QUERY = "query"
    

class Output:
    COUNT = "count"
    QUERY = "query"
    RESPONSE_CODE = "response_code"
    RESULTS = "results"
    

class QueryInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "query": {
      "type": "string",
      "title": "Query",
      "description": "Search parameters; syntax available at https://www.hybrid-analysis.com/faq",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class QueryOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "count": {
      "type": "integer",
      "title": "Count",
      "description": "Number of results returned",
      "order": 2
    },
    "query": {
      "type": "string",
      "title": "Query",
      "description": "Query",
      "order": 3
    },
    "response_code": {
      "type": "integer",
      "title": "Response Code",
      "description": "Response code",
      "order": 1
    },
    "results": {
      "type": "array",
      "title": "Results List",
      "description": "List of results",
      "items": {
        "$ref": "#/definitions/result"
      },
      "order": 4
    }
  },
  "required": [
    "response_code"
  ],
  "definitions": {
    "result": {
      "type": "object",
      "title": "result",
      "properties": {
        "avdetect": {
          "type": "integer",
          "title": "Avdetect",
          "description": "AV MultiScan Detection Percentage",
          "order": 5
        },
        "environmentDescription": {
          "type": "string",
          "title": "Environment Description",
          "order": 9
        },
        "environmentId": {
          "type": "string",
          "title": "Environment ID",
          "order": 2
        },
        "sha256": {
          "type": "string",
          "title": "SHA256 Hash",
          "order": 1
        },
        "size": {
          "type": "integer",
          "title": "Filesize (Bytes)",
          "order": 3
        },
        "start_time": {
          "type": "string",
          "title": "Analysis StartTime",
          "displayType": "date",
          "format": "date-time",
          "order": 6
        },
        "submitname": {
          "type": "string",
          "title": "Filename",
          "description": "File name",
          "order": 10
        },
        "threatscore": {
          "type": "integer",
          "title": "Threatscore",
          "description": "Confidence value of VxStream Sandbox in the verdict; lies between 0 and 100",
          "order": 7
        },
        "type_short": {
          "type": "string",
          "title": "File Extension",
          "description": "File type e.g. exe",
          "order": 11
        },
        "verdict": {
          "type": "string",
          "title": "Verdict",
          "description": "File verdict e.g. malicious",
          "order": 8
        },
        "vxfamily": {
          "type": "string",
          "title": "Vxfamily",
          "description": "VxFamily e.g. Trojan.Generic",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
