# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Submit file for analysis"


class Input:
    CUSTOMCMDLINE = "customcmdline"
    ENV_ID = "env_id"
    EXPERIMENTALANTIEVASION = "experimentalantievasion"
    FILE = "file"
    FILENAME = "filename"
    HYBRIDANALYSIS = "hybridanalysis"
    PROMPTFILL_PASSWORD = "promptfill_password"
    SCRIPTLOGGING = "scriptlogging"
    

class Output:
    HASH = "hash"
    RESPONSE_CODE = "response_code"
    SUBMISSION_URL = "submission_url"
    

class SubmitInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "customcmdline": {
      "type": "string",
      "title": "Custom Command Line",
      "description": "Custom Command Line, e.g. /VX:promptfill mypassword",
      "order": 4
    },
    "env_id": {
      "type": "integer",
      "title": "Environment ID",
      "description": "Environment ID",
      "default": 100,
      "order": 5
    },
    "experimentalantievasion": {
      "type": "boolean",
      "title": "Enable Experimental Anti Evasion Techniques",
      "description": "Enable experimental anti-evasion features. This feature can have an impact application execution, but at the same time can improve performance for very evasive malware",
      "default": true,
      "order": 8
    },
    "file": {
      "type": "string",
      "title": "File",
      "displayType": "bytes",
      "description": "File to be analyzed. See https://vxstream-sandbox.com/faq for supported filetypes",
      "format": "bytes",
      "order": 1
    },
    "filename": {
      "type": "string",
      "title": "Filename",
      "description": "Optional filename of the malware",
      "order": 2
    },
    "hybridanalysis": {
      "type": "boolean",
      "title": "Enable Hybrid Analysis",
      "description": "Enable a unique process memory inspection. This feature may slow down the overall analysis, but improves behavior analysis through instruction level inspection regardless of execution",
      "default": true,
      "order": 7
    },
    "promptfill_password": {
      "type": "string",
      "title": "Password",
      "description": "Optional malware password to pass in to the analysis (shortcut for /VX:promptfill)",
      "order": 3
    },
    "scriptlogging": {
      "type": "boolean",
      "title": "Enable Script Logging",
      "description": "Enable the script logging feature. This feature can give deeper insights into the functionality of Javascripts, VBA macros and similar script languages (see 'Script calls' in the per process details)",
      "default": true,
      "order": 6
    }
  },
  "required": [
    "file"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SubmitOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "hash": {
      "type": "string",
      "title": "Hash",
      "description": "SHA256 Hash",
      "order": 3
    },
    "response_code": {
      "type": "integer",
      "title": "Response Code",
      "description": "Response code",
      "order": 2
    },
    "submission_url": {
      "type": "string",
      "title": "Submission Url",
      "description": "Submission URL",
      "order": 1
    }
  },
  "required": [
    "response_code"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
