# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Lists all global ACL rules with global ACL ID"


class Input:
    GLOBAL_ACL_ID = "global_acl_id"
    POLICY_ID = "policy_id"
    

class Output:
    ACTION = "action"
    COMMENTS = "comments"
    EXTENDED_MATCH = "extended_match"
    EXTENDED_MATCH_SEQUENCE = "extended_match_sequence"
    ID = "id"
    NAME = "name"
    REDIRECT_URL = "redirect_url"
    URL_MATCH = "url_match"
    

class RetrieveGlobalAclRulesInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "global_acl_id": {
      "type": "string",
      "title": "Global Acl Id",
      "description": "Global ACL ID",
      "order": 2
    },
    "policy_id": {
      "type": "string",
      "title": "Policy Id",
      "description": "ID of security policy",
      "order": 1
    }
  },
  "required": [
    "global_acl_id",
    "policy_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RetrieveGlobalAclRulesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "action": {
      "type": "string",
      "title": "Action",
      "description": "The action to be taken on the request matching this URL",
      "order": 6
    },
    "comments": {
      "type": "array",
      "title": "Comments",
      "description": "Description about the global ACL rule",
      "order": 3
    },
    "extended_match": {
      "type": "string",
      "title": "Extended Match",
      "description": "An expression that consists of a combination of HTTP headers and/or query string parameters",
      "order": 4
    },
    "extended_match_sequence": {
      "type": "integer",
      "title": "Extended Match Sequence",
      "description": "A number to indicate the order in which the extended match rule must be evaluated in the requests",
      "order": 1
    },
    "id": {
      "type": "string",
      "title": "Id",
      "description": "ID of global ACL",
      "order": 8
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "Global ACL name",
      "order": 2
    },
    "redirect_url": {
      "type": "string",
      "title": "Redirect Url",
      "description": "A URL to which a user should be redirected if action is temporary_redirect or permanent_redirect",
      "order": 7
    },
    "url_match": {
      "type": "string",
      "title": "Url Match",
      "description": "The URL to be matched to the URL in the request. The URL should start with a '/' and can have at most one ' * ' anywhere in the URL",
      "order": 5
    }
  },
  "required": [
    "action",
    "comments",
    "extended_match",
    "extended_match_sequence",
    "id",
    "name",
    "redirect_url",
    "url_match"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
