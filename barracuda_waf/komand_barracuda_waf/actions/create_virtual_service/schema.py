# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Creates a virtual service with the given values"


class Input:
    ADDRESS = "address"
    ADDRESS_VERSION = "address_version"
    CERTIFICATE = "certificate"
    GROUP = "group"
    NAME = "name"
    PORT = "port"
    SERVICE_HOSTNAME = "service_hostname"
    TYPE = "type"
    VSITE = "vsite"
    

class Output:
    ID = "id"
    

class CreateVirtualServiceInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address": {
      "type": "string",
      "title": "Address",
      "description": "The virtual IP address that will be used for accessing this application",
      "order": 2
    },
    "address_version": {
      "type": "string",
      "title": "Address Version",
      "description": "The internet protocol version of the service",
      "enum": [
        "ipv4",
        "ipv6"
      ],
      "order": 5
    },
    "certificate": {
      "type": "string",
      "title": "Certificate",
      "description": "The certificate that needs to be presented to the browser when accessing this Service",
      "order": 8
    },
    "group": {
      "type": "string",
      "title": "Group",
      "description": "The name of the service group under which the service needs to be created",
      "order": 7
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "The name of the new service",
      "order": 1
    },
    "port": {
      "type": "integer",
      "title": "Port",
      "description": "The port number on which your web server responds",
      "order": 3
    },
    "service_hostname": {
      "type": "string",
      "title": "Service Hostname",
      "description": "The domain name to identify and rewrite HTTP requests to HTTPS",
      "order": 9
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "The type of the service you want to create",
      "enum": [
        "http",
        "https",
        "ftp",
        "ftpssl",
        "custom",
        "customssl",
        "instantssl",
        "redirect"
      ],
      "order": 4
    },
    "vsite": {
      "type": "string",
      "title": "Vsite",
      "description": "The name of the vsite under which the service needs to be created",
      "order": 6
    }
  },
  "required": [
    "address",
    "address_version",
    "group",
    "name",
    "port",
    "type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateVirtualServiceOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "string",
      "title": "ID",
      "description": "The name of the service that got created",
      "order": 1
    }
  },
  "required": [
    "id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
