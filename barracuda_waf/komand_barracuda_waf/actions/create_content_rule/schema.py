# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Creates a content rule for the given service"


class Input:
    EXTENDED_MATCH = "extended_match"
    EXTENDED_MATCH_SEQUENCE = "extended_match_sequence"
    HOST_MATCH = "host_match"
    NAME = "name"
    STATUS = "status"
    URL_MATCH = "url_match"
    VIRTUAL_SERVICE_ID = "virtual_service_id"
    WEB_FIREWALL_POLICY = "web_firewall_policy"
    

class Output:
    ID = "id"
    

class CreateContentRuleInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "extended_match": {
      "type": "string",
      "title": "Extended Match",
      "description": "An expression that consists of a combination of HTTP headers and/or query string parameters",
      "order": 7
    },
    "extended_match_sequence": {
      "type": "integer",
      "title": "Extended Match Sequence",
      "description": "A number to indicate the order in which the extended match rule must be evaluated in the requests",
      "order": 8
    },
    "host_match": {
      "type": "string",
      "title": "Host Match",
      "description": "A host name to be matched against the host in the request header",
      "order": 5
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "A name for the content rule",
      "order": 2
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "The status of the content rule",
      "enum": [
        "on",
        "off"
      ],
      "order": 3
    },
    "url_match": {
      "type": "string",
      "title": "URL Match",
      "description": "A URL to be matched to the URL in the request header",
      "order": 6
    },
    "virtual_service_id": {
      "type": "string",
      "title": "Virtual Service ID",
      "description": "Virtual Service ID",
      "order": 1
    },
    "web_firewall_policy": {
      "type": "string",
      "title": "Web Firewall Policy",
      "description": "A web firewall policy to be associated with the content rule",
      "order": 4
    }
  },
  "required": [
    "extended_match",
    "extended_match_sequence",
    "host_match",
    "name",
    "status",
    "url_match",
    "virtual_service_id",
    "web_firewall_policy"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateContentRuleOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "string",
      "title": "ID",
      "description": "ID of content rule",
      "order": 1
    }
  },
  "required": [
    "id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
