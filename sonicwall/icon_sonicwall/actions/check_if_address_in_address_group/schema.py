# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Check that HOST is in address group"


class Input:
    ADDRESS = "address"
    ENABLE_SEARCH = "enable_search"
    GROUP = "group"
    

class Output:
    FOUND = "found"
    OBJECTS = "objects"
    

class CheckIfAddressInAddressGroupInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address": {
      "type": "string",
      "title": "Address",
      "description": "Address Object name, or IP, CIDR, or domain name when Enable Search is on",
      "order": 2
    },
    "enable_search": {
      "type": "boolean",
      "title": "Enable Search",
      "description": "Search for contents of Address Objects for IP, CIDR or domain",
      "default": false,
      "order": 3
    },
    "group": {
      "type": "string",
      "title": "Group",
      "description": "Name of address group to check",
      "order": 1
    }
  },
  "required": [
    "address",
    "group"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CheckIfAddressInAddressGroupOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "found": {
      "type": "boolean",
      "title": "Found",
      "description": "Return true if found, return false if not found",
      "order": 1
    },
    "objects": {
      "type": "array",
      "title": "Objects",
      "description": "List of object names that the address was found in",
      "items": {
        "type": "string"
      },
      "order": 2
    }
  },
  "required": [
    "found",
    "objects"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
