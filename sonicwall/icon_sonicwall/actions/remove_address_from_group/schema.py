# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Deletes an address object from an address group"


class Input:
    ADDRESS_OBJECT = "address_object"
    GROUP = "group"
    

class Output:
    STATUS = "status"
    

class RemoveAddressFromGroupInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address_object": {
      "type": "string",
      "title": "Address Object",
      "description": "Name of the address object",
      "order": 1
    },
    "group": {
      "type": "string",
      "title": "Group",
      "description": "Name of the address group",
      "order": 2
    }
  },
  "required": [
    "address_object",
    "group"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RemoveAddressFromGroupOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "status": {
      "$ref": "#/definitions/status",
      "title": "Status",
      "description": "Returns information about removing the address object from the address group",
      "order": 1
    }
  },
  "definitions": {
    "cli": {
      "type": "object",
      "title": "cli",
      "properties": {
        "configuring": {
          "type": "boolean",
          "title": "Configuring",
          "description": "Configuring",
          "order": 1
        },
        "depth": {
          "type": "integer",
          "title": "Depth",
          "description": "Depth",
          "order": 2
        },
        "mode": {
          "type": "string",
          "title": "Mode",
          "description": "Mode",
          "order": 3
        },
        "pending_config": {
          "type": "boolean",
          "title": "Pending Config",
          "description": "Pending config",
          "order": 4
        },
        "restart_required": {
          "type": "string",
          "title": "Restart Required",
          "description": "Restart required",
          "order": 5
        }
      }
    },
    "info": {
      "type": "object",
      "title": "info",
      "properties": {
        "code": {
          "type": "string",
          "title": "Code",
          "description": "Code",
          "order": 1
        },
        "level": {
          "type": "string",
          "title": "Level",
          "description": "Level",
          "order": 2
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description": "Message",
          "order": 3
        }
      }
    },
    "status": {
      "type": "object",
      "title": "status",
      "properties": {
        "cli": {
          "$ref": "#/definitions/cli",
          "title": "CLI",
          "description": "CLI",
          "order": 1
        },
        "info": {
          "type": "array",
          "title": "Info",
          "description": "Info",
          "items": {
            "$ref": "#/definitions/info"
          },
          "order": 2
        },
        "success": {
          "type": "boolean",
          "title": "Success",
          "description": "Success",
          "order": 3
        }
      },
      "definitions": {
        "cli": {
          "type": "object",
          "title": "cli",
          "properties": {
            "configuring": {
              "type": "boolean",
              "title": "Configuring",
              "description": "Configuring",
              "order": 1
            },
            "depth": {
              "type": "integer",
              "title": "Depth",
              "description": "Depth",
              "order": 2
            },
            "mode": {
              "type": "string",
              "title": "Mode",
              "description": "Mode",
              "order": 3
            },
            "pending_config": {
              "type": "boolean",
              "title": "Pending Config",
              "description": "Pending config",
              "order": 4
            },
            "restart_required": {
              "type": "string",
              "title": "Restart Required",
              "description": "Restart required",
              "order": 5
            }
          }
        },
        "info": {
          "type": "object",
          "title": "info",
          "properties": {
            "code": {
              "type": "string",
              "title": "Code",
              "description": "Code",
              "order": 1
            },
            "level": {
              "type": "string",
              "title": "Level",
              "description": "Level",
              "order": 2
            },
            "message": {
              "type": "string",
              "title": "Message",
              "description": "Message",
              "order": 3
            }
          }
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
