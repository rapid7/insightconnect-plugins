# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Parses a TAP alert"


class Input:
    TAP_ALERT = "tap_alert"
    

class Output:
    RESULTS = "results"
    

class ParseTapAlertInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "tap_alert": {
      "type": "string",
      "title": "Proofpoint TAP Alert",
      "description": "A Proofpoint TAP alert",
      "order": 1
    }
  },
  "required": [
    "tap_alert"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ParseTapAlertOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "results": {
      "$ref": "#/definitions/tap_results",
      "title": "Results",
      "description": "Proofpoint TAP results",
      "order": 1
    }
  },
  "definitions": {
    "browser": {
      "type": "object",
      "title": "browser",
      "properties": {
        "source_ip": {
          "type": "string",
          "title": "Source IP",
          "description": "Source IP",
          "order": 2
        },
        "time": {
          "type": "string",
          "title": "Time",
          "description": "Time",
          "order": 1
        },
        "user_agent": {
          "type": "string",
          "title": "User Agent",
          "description": "User agent string",
          "order": 3
        }
      }
    },
    "message": {
      "type": "object",
      "title": "message",
      "properties": {
        "header_from": {
          "type": "string",
          "title": "Header From",
          "description": "Header from",
          "order": 5
        },
        "header_replyto": {
          "type": "string",
          "title": "Header Reply To",
          "description": "Header reply to",
          "order": 6
        },
        "message_id": {
          "type": "string",
          "title": "Message ID",
          "description": "Message ID",
          "order": 7
        },
        "message_size": {
          "type": "string",
          "title": "Message Size",
          "description": "Message size",
          "order": 9
        },
        "recipients": {
          "type": "string",
          "title": "Recipients",
          "description": "Recipients",
          "order": 2
        },
        "sender": {
          "type": "string",
          "title": "Sender",
          "description": "Sender",
          "order": 4
        },
        "sender_ip": {
          "type": "string",
          "title": "Sender IP",
          "description": "Sender IP",
          "order": 8
        },
        "subject": {
          "type": "string",
          "title": "Subject",
          "description": "Subject",
          "order": 3
        },
        "time_delivered": {
          "type": "string",
          "title": "Time Delivered",
          "description": "Time Delivered",
          "order": 1
        }
      }
    },
    "tap_results": {
      "type": "object",
      "title": "tap_results",
      "properties": {
        "browser": {
          "$ref": "#/definitions/browser",
          "title": "Browser",
          "description": "Browser information",
          "order": 3
        },
        "message": {
          "$ref": "#/definitions/message",
          "title": "Message",
          "description": "TAP alert meta data",
          "order": 2
        },
        "threat": {
          "$ref": "#/definitions/threat",
          "title": "Threat",
          "description": "Threat information",
          "order": 1
        }
      },
      "definitions": {
        "browser": {
          "type": "object",
          "title": "browser",
          "properties": {
            "source_ip": {
              "type": "string",
              "title": "Source IP",
              "description": "Source IP",
              "order": 2
            },
            "time": {
              "type": "string",
              "title": "Time",
              "description": "Time",
              "order": 1
            },
            "user_agent": {
              "type": "string",
              "title": "User Agent",
              "description": "User agent string",
              "order": 3
            }
          }
        },
        "message": {
          "type": "object",
          "title": "message",
          "properties": {
            "header_from": {
              "type": "string",
              "title": "Header From",
              "description": "Header from",
              "order": 5
            },
            "header_replyto": {
              "type": "string",
              "title": "Header Reply To",
              "description": "Header reply to",
              "order": 6
            },
            "message_id": {
              "type": "string",
              "title": "Message ID",
              "description": "Message ID",
              "order": 7
            },
            "message_size": {
              "type": "string",
              "title": "Message Size",
              "description": "Message size",
              "order": 9
            },
            "recipients": {
              "type": "string",
              "title": "Recipients",
              "description": "Recipients",
              "order": 2
            },
            "sender": {
              "type": "string",
              "title": "Sender",
              "description": "Sender",
              "order": 4
            },
            "sender_ip": {
              "type": "string",
              "title": "Sender IP",
              "description": "Sender IP",
              "order": 8
            },
            "subject": {
              "type": "string",
              "title": "Subject",
              "description": "Subject",
              "order": 3
            },
            "time_delivered": {
              "type": "string",
              "title": "Time Delivered",
              "description": "Time Delivered",
              "order": 1
            }
          }
        },
        "threat": {
          "type": "object",
          "title": "threat",
          "properties": {
            "attachment_sha256": {
              "type": "string",
              "title": "Attachment SHA256 Hash",
              "description": "Attachment SHA256 hash",
              "order": 1
            },
            "category": {
              "type": "string",
              "title": "Category",
              "description": "Category",
              "order": 3
            },
            "condemnation_time": {
              "type": "string",
              "title": "Condemnation Time",
              "description": "Condemnation Time",
              "order": 4
            },
            "threat_details_url": {
              "type": "string",
              "title": "Threat Details URL",
              "description": "URL for Details of the Threat",
              "order": 5
            },
            "url": {
              "type": "string",
              "title": "URL",
              "description": "URL",
              "order": 2
            }
          }
        }
      }
    },
    "threat": {
      "type": "object",
      "title": "threat",
      "properties": {
        "attachment_sha256": {
          "type": "string",
          "title": "Attachment SHA256 Hash",
          "description": "Attachment SHA256 hash",
          "order": 1
        },
        "category": {
          "type": "string",
          "title": "Category",
          "description": "Category",
          "order": 3
        },
        "condemnation_time": {
          "type": "string",
          "title": "Condemnation Time",
          "description": "Condemnation Time",
          "order": 4
        },
        "threat_details_url": {
          "type": "string",
          "title": "Threat Details URL",
          "description": "URL for Details of the Threat",
          "order": 5
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "URL",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
