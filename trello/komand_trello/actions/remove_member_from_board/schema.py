# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Remove member from board"


class Input:
    BOARD_ID = "board_id"
    ID_MEMBER = "id_member"
    

class Output:
    CLOSED = "closed"
    DESC = "desc"
    ID = "id"
    IDORGANIZATION = "idOrganization"
    LABELNAMES = "labelNames"
    MEMBERS = "members"
    NAME = "name"
    PINNED = "pinned"
    PREFS = "prefs"
    SHORTURL = "shortUrl"
    URL = "url"
    

class RemoveMemberFromBoardInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "board_id": {
      "type": "string",
      "title": "Board ID",
      "description": "The id of board",
      "order": 1
    },
    "id_member": {
      "type": "string",
      "title": "Member ID",
      "description": "The id of the member to remove from the board",
      "order": 2
    }
  },
  "required": [
    "id_member"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RemoveMemberFromBoardOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "closed": {
      "type": "boolean",
      "title": "Closed",
      "description": "Closed",
      "order": 8
    },
    "desc": {
      "type": "string",
      "title": "Description",
      "description": "Description about board",
      "order": 3
    },
    "id": {
      "type": "string",
      "title": "Board ID",
      "description": "The id of board",
      "order": 1
    },
    "idOrganization": {
      "type": "string",
      "title": "Organization ID",
      "description": "The id of organization",
      "order": 5
    },
    "labelNames": {
      "type": "object",
      "title": "Label Names",
      "description": "Label names",
      "order": 10
    },
    "members": {
      "type": "array",
      "title": "Members",
      "description": "List all members on board",
      "items": {
        "type": "object"
      },
      "order": 11
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "Name of board",
      "order": 2
    },
    "pinned": {
      "type": "boolean",
      "title": "Pinned",
      "description": "Pinned",
      "order": 6
    },
    "prefs": {
      "type": "object",
      "title": "Prefs",
      "description": "Prefs",
      "order": 9
    },
    "shortUrl": {
      "type": "string",
      "title": "Short URL",
      "description": "Short url",
      "order": 4
    },
    "url": {
      "type": "string",
      "title": "URL",
      "description": "URL",
      "order": 7
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
