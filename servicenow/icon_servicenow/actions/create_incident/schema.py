# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Create a new ServiceNow Incident record"


class Input:
    ASSIGNED_TO = "assigned_to"
    ASSIGNMENT_GROUP = "assignment_group"
    BUSINESS_SERVICE = "business_service"
    CALLER = "caller"
    CATEGORY = "category"
    CONFIGURATION_ITEM = "configuration_item"
    CONTACT_TYPE = "contact_type"
    DESCRIPTION = "description"
    IMPACT = "impact"
    PRIORITY = "priority"
    SHORT_DESCRIPTION = "short_description"
    STATE = "state"
    SUBCATEGORY = "subcategory"
    URGENCY = "urgency"
    

class Output:
    NUMBER = "number"
    SYSTEM_ID = "system_id"
    

class CreateIncidentInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assigned_to": {
      "type": "string",
      "title": "Assigned To",
      "description": "User ID of person assigned to the incident",
      "order": 12
    },
    "assignment_group": {
      "type": "string",
      "title": "Assignment Group",
      "description": "Assignment group name of the incident",
      "order": 11
    },
    "business_service": {
      "type": "string",
      "title": "Business Service",
      "description": "Name of business service",
      "order": 4
    },
    "caller": {
      "type": "string",
      "title": "Caller/User ID",
      "description": "User ID of incident caller",
      "order": 1
    },
    "category": {
      "type": "string",
      "title": "Category",
      "description": "Category code of incident",
      "order": 2
    },
    "configuration_item": {
      "type": "string",
      "title": "Configuration Item",
      "description": "Configuration item code of the incident",
      "order": 5
    },
    "contact_type": {
      "type": "string",
      "title": "Contact Type",
      "description": "Contact type of the incident",
      "order": 6
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Full description of incident",
      "order": 14
    },
    "impact": {
      "type": "string",
      "title": "Impact",
      "description": "Impact of the indicent",
      "order": 8
    },
    "priority": {
      "type": "string",
      "title": "Priority",
      "description": "Priority of the incident",
      "order": 10
    },
    "short_description": {
      "type": "string",
      "title": "Short Description",
      "description": "Short description of incident",
      "order": 13
    },
    "state": {
      "type": "string",
      "title": "State",
      "description": "State name of the incident",
      "order": 7
    },
    "subcategory": {
      "type": "string",
      "title": "Subcategory",
      "description": "Subcategory code of incident (available values depends on the `Category` field)",
      "order": 3
    },
    "urgency": {
      "type": "string",
      "title": "Urgency",
      "description": "Urgency of the incident",
      "order": 9
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateIncidentOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "number": {
      "type": "string",
      "title": "Incident Number",
      "description": "Incident ticket number",
      "order": 2
    },
    "system_id": {
      "type": "string",
      "title": "System ID",
      "description": "System ID of the new Incident created",
      "order": 1
    }
  },
  "required": [
    "number",
    "system_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
