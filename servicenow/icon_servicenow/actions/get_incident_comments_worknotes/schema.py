# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Get comments and work notes for an incident"


class Input:
    SYSTEM_ID = "system_id"
    TYPE = "type"
    

class Output:
    INCIDENT_COMMENTS_WORKNOTES = "incident_comments_worknotes"
    

class GetIncidentCommentsWorknotesInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "system_id": {
      "type": "string",
      "title": "System ID",
      "description": "System ID of Incident record for which comments and work notes will be retrieved",
      "order": 1
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "Type of output to be retrieved",
      "enum": [
        "all",
        "comments",
        "work notes"
      ],
      "order": 2
    }
  },
  "required": [
    "system_id",
    "type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetIncidentCommentsWorknotesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "incident_comments_worknotes": {
      "type": "array",
      "title": "Comments and Work Notes",
      "description": "List of comments and work notes for an incident",
      "items": {
        "$ref": "#/definitions/comments_worknotes"
      },
      "order": 1
    }
  },
  "required": [
    "incident_comments_worknotes"
  ],
  "definitions": {
    "comments_worknotes": {
      "type": "object",
      "title": "comments_worknotes",
      "properties": {
        "element": {
          "type": "string",
          "title": "Element",
          "description": "Either 'comments' or 'work_notes'",
          "order": 8
        },
        "element_id": {
          "type": "string",
          "title": "Element ID",
          "description": "System ID of an incident",
          "order": 4
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Type of record",
          "order": 3
        },
        "sys_created_by": {
          "type": "string",
          "title": "Created By",
          "description": "User who added the comment",
          "order": 7
        },
        "sys_created_on": {
          "type": "string",
          "title": "Creation date",
          "description": "Comment or work notes creation date",
          "order": 2
        },
        "sys_id": {
          "type": "string",
          "title": "System ID",
          "description": "System ID of comment or worknotes",
          "order": 1
        },
        "sys_tags": {
          "type": "string",
          "title": "System Tags",
          "description": "System tags",
          "order": 5
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Value of comment or worknotes",
          "order": 6
        }
      },
      "required": [
        "element",
        "element_id",
        "name",
        "sys_created_by",
        "sys_created_on",
        "sys_id",
        "sys_tags",
        "value"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
