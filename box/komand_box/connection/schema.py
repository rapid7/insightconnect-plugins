# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Input:
    CLIENT_ID = "client_id"
    CLIENT_SECRET = "client_secret"
    ENTERPRISE_ID = "enterprise_id"
    JWT_KEY_ID = "jwt_key_id"
    PRIVATE_KEY = "private_key"
    RSA_PASSWORD = "rsa_password"
    

class ConnectionSchema(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "client_id": {
      "type": "string",
      "title": "Client ID",
      "description": "Box client ID",
      "order": 1
    },
    "client_secret": {
      "$ref": "#/definitions/credential_secret_key",
      "title": "Client Secret",
      "description": "Box client secret",
      "order": 2
    },
    "enterprise_id": {
      "type": "string",
      "title": "Enterprise ID",
      "description": "Box enterprise ID",
      "order": 3
    },
    "jwt_key_id": {
      "type": "string",
      "title": "JWT Key ID",
      "description": "Box generated JWT key ID",
      "order": 6
    },
    "private_key": {
      "$ref": "#/definitions/credential_secret_key",
      "title": "Private Key",
      "description": "User generated private key",
      "order": 4
    },
    "rsa_password": {
      "$ref": "#/definitions/credential_secret_key",
      "title": "RSA Password",
      "description": "Private key password",
      "order": 5
    }
  },
  "required": [
    "client_id",
    "client_secret",
    "enterprise_id",
    "jwt_key_id",
    "private_key"
  ],
  "definitions": {
    "credential_secret_key": {
      "id": "credential_secret_key",
      "type": "object",
      "title": "Credential: Secret Key",
      "description": "A shared secret key",
      "properties": {
        "secretKey": {
          "type": "string",
          "title": "Secret Key",
          "displayType": "password",
          "description": "The shared secret key",
          "format": "password"
        }
      },
      "required": [
        "secretKey"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
