# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Monitor new issues"


class Input:
    
    IIDS = "iids"
    INTERVAL = "interval"
    LABELS = "labels"
    MILESTONE = "milestone"
    SEARCH = "search"
    STATE = "state"
    

class Output:
    
    ISSUE = "issue"
    

class IssueInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "iids": {
      "type": "integer",
      "title": "Iids",
      "description": "Return only the issues having the given iid",
      "order": 4
    },
    "interval": {
      "type": "integer",
      "title": "Interval",
      "description": "How often recieve new issues",
      "order": 6
    },
    "labels": {
      "type": "string",
      "title": "Labels",
      "description": "Comma-separated list of label names, issues must have all labels to be returned",
      "order": 2
    },
    "milestone": {
      "type": "string",
      "title": "Milestone",
      "description": "The milestone title",
      "order": 3
    },
    "search": {
      "type": "string",
      "title": "Search",
      "description": "Search issues against their title and description",
      "order": 5
    },
    "state": {
      "type": "string",
      "title": "State",
      "description": "Return all issues or just those that are opened or closed",
      "enum": [
        "Opened",
        "Closed"
      ],
      "order": 1
    }
  },
  "required": [
    "labels"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class IssueOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "issue": {
      "type": "object",
      "title": "Issue",
      "description": "Issue",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
