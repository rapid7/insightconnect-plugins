# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Retrieves the current hot threads for Logstash"


class Input:
    HUMAN = "human"
    IGNORE_IDLE_THREADS = "ignore_idle_threads"
    THREADS = "threads"
    

class Output:
    RESPONSE = "response"
    

class HotThreadsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "human": {
      "type": "boolean",
      "title": "Human",
      "description": "If true, returns plain text instead of JSON format",
      "default": false,
      "order": 2
    },
    "ignore_idle_threads": {
      "type": "boolean",
      "title": "Ignore Idle Threads",
      "description": "If true, does not return idle threads",
      "default": true,
      "order": 3
    },
    "threads": {
      "type": "integer",
      "title": "Threads",
      "description": "The number of hot threads to return. The default is 3",
      "default": 3,
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class HotThreadsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "$ref": "#/definitions/response",
      "title": "Response",
      "description": "Response",
      "order": 1
    }
  },
  "definitions": {
    "response": {
      "type": "object",
      "title": "response",
      "properties": {
        "host": {
          "type": "string",
          "title": "Host",
          "order": 1
        },
        "http_address": {
          "type": "string",
          "title": "Http Address",
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "Id",
          "order": 4
        },
        "name": {
          "type": "string",
          "title": "Name",
          "order": 5
        },
        "result": {
          "type": "object",
          "title": "Result",
          "order": 6
        },
        "version": {
          "type": "string",
          "title": "Version",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
