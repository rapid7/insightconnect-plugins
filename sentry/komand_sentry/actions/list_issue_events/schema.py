# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "List an issue's events"


class Input:
    ISSUE_ID = "issue_id"
    

class Output:
    EVENTS = "events"
    

class ListIssueEventsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "issue_id": {
      "type": "string",
      "title": "Issue ID",
      "description": "The ID of the issue to retrieve",
      "order": 1
    }
  },
  "required": [
    "issue_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListIssueEventsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "events": {
      "type": "array",
      "title": "Events",
      "description": "Issue's events",
      "items": {
        "$ref": "#/definitions/Event"
      },
      "order": 1
    }
  },
  "required": [
    "events"
  ],
  "definitions": {
    "Entry": {
      "type": "object",
      "title": "Entry",
      "properties": {
        "data": {
          "type": "object",
          "title": "Data",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "order": 1
        }
      }
    },
    "Event": {
      "type": "object",
      "title": "Event",
      "properties": {
        "context": {
          "type": "object",
          "title": "Context",
          "order": 19
        },
        "contexts": {
          "type": "object",
          "title": "Contexts",
          "order": 6
        },
        "dateCreated": {
          "type": "string",
          "title": "DateCreated",
          "displayType": "date",
          "format": "date-time",
          "order": 8
        },
        "dateReceived": {
          "type": "string",
          "title": "DateReceived",
          "displayType": "date",
          "format": "date-time",
          "order": 9
        },
        "dist": {
          "type": "string",
          "title": "Dist",
          "order": 4
        },
        "entries": {
          "type": "array",
          "title": "Entries",
          "items": {
            "$ref": "#/definitions/Entry"
          },
          "order": 20
        },
        "errors": {
          "type": "array",
          "title": "Errors",
          "items": {
            "type": "object"
          },
          "order": 3
        },
        "eventID": {
          "type": "string",
          "title": "EventID",
          "order": 1
        },
        "fingerprint": {
          "type": "array",
          "title": "Fingerprint",
          "items": {
            "type": "string"
          },
          "order": 7
        },
        "groupId": {
          "type": "string",
          "title": "GroupId",
          "order": 13
        },
        "id": {
          "type": "string",
          "title": "Id",
          "order": 15
        },
        "message": {
          "type": "string",
          "title": "Message",
          "order": 16
        },
        "metadata": {
          "type": "object",
          "title": "Metadata",
          "order": 11
        },
        "packages": {
          "type": "object",
          "title": "Packages",
          "order": 17
        },
        "platform": {
          "type": "string",
          "title": "Platform",
          "order": 5
        },
        "sdk": {
          "type": "object",
          "title": "Sdk",
          "order": 2
        },
        "size": {
          "type": "integer",
          "title": "Size",
          "order": 10
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "order": 12
        },
        "type": {
          "type": "string",
          "title": "Type",
          "order": 14
        },
        "user": {
          "$ref": "#/definitions/User",
          "title": "User",
          "order": 18
        }
      },
      "definitions": {
        "Entry": {
          "type": "object",
          "title": "Entry",
          "properties": {
            "data": {
              "type": "object",
              "title": "Data",
              "order": 2
            },
            "type": {
              "type": "string",
              "title": "Type",
              "order": 1
            }
          }
        },
        "Tag": {
          "type": "object",
          "title": "Tag",
          "properties": {
            "key": {
              "type": "string",
              "title": "Key",
              "order": 2
            },
            "value": {
              "type": "string",
              "title": "Value",
              "order": 1
            }
          }
        },
        "User": {
          "type": "object",
          "title": "User",
          "properties": {
            "email": {
              "type": "string",
              "title": "Email",
              "order": 3
            },
            "id": {
              "type": "string",
              "title": "Id",
              "order": 5
            },
            "ip_address": {
              "type": "string",
              "title": "Ip Address",
              "order": 2
            },
            "name": {
              "type": "string",
              "title": "Name",
              "order": 4
            },
            "username": {
              "type": "string",
              "title": "Username",
              "order": 1
            }
          }
        }
      }
    },
    "Tag": {
      "type": "object",
      "title": "Tag",
      "properties": {
        "key": {
          "type": "string",
          "title": "Key",
          "order": 2
        },
        "value": {
          "type": "string",
          "title": "Value",
          "order": 1
        }
      }
    },
    "User": {
      "type": "object",
      "title": "User",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email",
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "Id",
          "order": 5
        },
        "ip_address": {
          "type": "string",
          "title": "Ip Address",
          "order": 2
        },
        "name": {
          "type": "string",
          "title": "Name",
          "order": 4
        },
        "username": {
          "type": "string",
          "title": "Username",
          "order": 1
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
