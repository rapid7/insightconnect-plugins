# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Scans a file using Yara"


class Input:
    FILE = "file"
    RULES = "rules"
    

class Output:
    RESULTS = "results"
    

class ScanFileInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "file": {
      "type": "string",
      "title": "File",
      "displayType": "bytes",
      "description": "File to be scanned",
      "format": "bytes",
      "order": 1
    },
    "rules": {
      "type": "string",
      "title": "Yara Rules",
      "displayType": "bytes",
      "description": "File containing Yara rules",
      "format": "bytes",
      "order": 2
    }
  },
  "required": [
    "file",
    "rules"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ScanFileOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "results": {
      "type": "array",
      "title": "Results",
      "description": "Results returned form Yara's analysis. Note: byte information has been encoded to UTF-8",
      "items": {
        "$ref": "#/definitions/results"
      },
      "order": 1
    }
  },
  "required": [
    "results"
  ],
  "definitions": {
    "results": {
      "type": "object",
      "title": "results",
      "properties": {
        "meta": {
          "type": "object",
          "title": "Meta",
          "description": "Metadata",
          "order": 1
        },
        "namespace": {
          "type": "string",
          "title": "Namespace",
          "description": "Namespace",
          "order": 2
        },
        "rule": {
          "type": "string",
          "title": "Rule",
          "description": "Rule that was used",
          "order": 3
        },
        "string": {
          "type": "array",
          "title": "String",
          "description": "String that the rule triggered on",
          "items": {
            "type": "string"
          },
          "order": 4
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "description": "A collection of tags",
          "items": {
            "type": "string"
          },
          "order": 5
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
