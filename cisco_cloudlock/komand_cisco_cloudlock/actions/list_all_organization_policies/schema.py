# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Lists all of an organizations configured policies"


class Input:
    LIMIT = "limit"
    OFFSET = "offset"
    STATE = "state"
    

class Output:
    POLICIES = "policies"
    

class ListAllOrganizationPoliciesInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "limit": {
      "type": "number",
      "title": "Limit",
      "description": "Number of paginated results to return. Max: 100",
      "default": 20,
      "order": 3
    },
    "offset": {
      "type": "number",
      "title": "Offset",
      "description": "Pagination offset",
      "default": 0,
      "order": 2
    },
    "state": {
      "type": "string",
      "title": "State",
      "description": "State of the policy",
      "enum": [
        "Active",
        "Inactive"
      ],
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListAllOrganizationPoliciesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "policies": {
      "type": "array",
      "title": "Policies",
      "description": "Policies",
      "items": {
        "$ref": "#/definitions/policy"
      },
      "order": 1
    }
  },
  "definitions": {
    "policy": {
      "type": "object",
      "title": "policy",
      "properties": {
        "created_at": {
          "type": "string",
          "title": "Created At",
          "displayType": "date",
          "description": "Policy creation time",
          "format": "date-time",
          "order": 5
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Policy description",
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "This is CloudLock Internal Identifier for a policy",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name of the policy",
          "order": 2
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "The severity assigned to incidents of this policy",
          "order": 7
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "Indicates if the policy is active or inactive",
          "order": 4
        },
        "updated_at": {
          "type": "string",
          "title": "Updated At",
          "displayType": "date",
          "description": "Policy updated time",
          "format": "date-time",
          "order": 6
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
