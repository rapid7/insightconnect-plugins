# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Return all new alerts"


class Input:
    
    FREQUENCY = "frequency"
    

class Output:
    
    RESULTS = "results"
    

class GetAlertsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "frequency": {
      "type": "integer",
      "title": "Frequency",
      "description": "Poll frequency in seconds",
      "default": 10,
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAlertsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "results": {
      "$ref": "#/definitions/alert",
      "title": "Alerts",
      "description": "All new alerts are returned",
      "order": 1
    }
  },
  "required": [
    "results"
  ],
  "definitions": {
    "alert": {
      "type": "object",
      "title": "alert",
      "properties": {
        "aadTenantId": {
          "type": "string",
          "title": "Aadtenantid",
          "description": "Aadtenantid",
          "order": 23
        },
        "alertCreationTime": {
          "type": "string",
          "title": "Alertcreationtime",
          "description": "Alertcreationtime",
          "order": 15
        },
        "assignedTo": {
          "type": "string",
          "title": "Assignedto",
          "description": "Assignedto",
          "order": 4
        },
        "category": {
          "type": "string",
          "title": "Category",
          "description": "Category",
          "order": 11
        },
        "classification": {
          "type": "string",
          "title": "Classification",
          "description": "Classification",
          "order": 7
        },
        "comments": {
          "type": "array",
          "title": "Comments",
          "description": "Comments",
          "items": {
            "type": "string"
          },
          "order": 25
        },
        "computerDnsName": {
          "type": "string",
          "title": "Computerdnsname",
          "description": "Computerdnsname",
          "order": 21
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description",
          "order": 14
        },
        "detectionSource": {
          "type": "string",
          "title": "Detectionsource",
          "description": "Detectionsource",
          "order": 10
        },
        "determination": {
          "type": "string",
          "title": "Determination",
          "description": "Determination",
          "order": 8
        },
        "evidence": {
          "type": "array",
          "title": "Evidence",
          "description": "Evidence",
          "items": {
            "type": "string"
          },
          "order": 26
        },
        "firstEventTime": {
          "type": "string",
          "title": "Firsteventtime",
          "description": "Firsteventtime",
          "order": 16
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Id",
          "order": 1
        },
        "incidentId": {
          "type": "integer",
          "title": "Incidentid",
          "description": "Incidentid",
          "order": 2
        },
        "investigationId": {
          "type": "integer",
          "title": "Investigationid",
          "description": "Investigationid",
          "order": 3
        },
        "investigationState": {
          "type": "string",
          "title": "Investigationstate",
          "description": "Investigationstate",
          "order": 9
        },
        "lastEventTime": {
          "type": "string",
          "title": "Lasteventtime",
          "description": "Lasteventtime",
          "order": 17
        },
        "lastUpdateTime": {
          "type": "string",
          "title": "Lastupdatetime",
          "description": "Lastupdatetime",
          "order": 18
        },
        "machineId": {
          "type": "string",
          "title": "Machineid",
          "description": "Machineid",
          "order": 20
        },
        "rbacGroupName": {
          "type": "string",
          "title": "Rbacgroupname",
          "description": "Rbacgroupname",
          "order": 22
        },
        "relatedUser": {
          "$ref": "#/definitions/related_user_object",
          "title": "Relateduser",
          "description": "Relateduser",
          "order": 24
        },
        "resolvedTime": {
          "type": "string",
          "title": "Resolvedtime",
          "description": "Resolvedtime",
          "order": 19
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "Severity",
          "order": 5
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status",
          "order": 6
        },
        "threatFamilyName": {
          "type": "string",
          "title": "Threatfamilyname",
          "description": "Threatfamilyname",
          "order": 12
        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Title",
          "order": 13
        }
      },
      "definitions": {
        "related_user_object": {
          "type": "object",
          "title": "related_user_object",
          "properties": {
            "domainName": {
              "type": "string",
              "title": "Domain Name",
              "description": "Domain name",
              "order": 1
            },
            "userName": {
              "type": "string",
              "title": "User Name",
              "description": "User name",
              "order": 2
            }
          }
        }
      }
    },
    "related_user_object": {
      "type": "object",
      "title": "related_user_object",
      "properties": {
        "domainName": {
          "type": "string",
          "title": "Domain Name",
          "description": "Domain name",
          "order": 1
        },
        "userName": {
          "type": "string",
          "title": "User Name",
          "description": "User name",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
