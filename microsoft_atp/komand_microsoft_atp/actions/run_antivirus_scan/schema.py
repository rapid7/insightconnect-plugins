# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Initiate a Windows Defender Antivirus scan on a machine"


class Input:
    COMMENT = "comment"
    MACHINE_ID = "machine_id"
    SCAN_TYPE = "scan_type"
    

class Output:
    MACHINE_ACTION_RESPONSE = "machine_action_response"
    

class RunAntivirusScanInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "comment": {
      "type": "string",
      "title": "Comment",
      "description": "Comment to associate with the antivirus scan action",
      "order": 2
    },
    "machine_id": {
      "type": "string",
      "title": "Machine ID",
      "description": "Machine ID",
      "order": 1
    },
    "scan_type": {
      "type": "string",
      "title": "Scan Type",
      "description": "The type of antivirus scan to run",
      "enum": [
        "Full",
        "Quick"
      ],
      "order": 3
    }
  },
  "required": [
    "comment",
    "machine_id",
    "scan_type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RunAntivirusScanOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "machine_action_response": {
      "$ref": "#/definitions/machine_action_response",
      "title": "Machine Action Response",
      "description": "A response that includes the result of the action, and supplemental information about the action taken",
      "order": 1
    }
  },
  "required": [
    "machine_action_response"
  ],
  "definitions": {
    "machine_action_response": {
      "type": "object",
      "title": "machine_action_response",
      "properties": {
        "@odata.context": {
          "type": "string",
          "title": "OData Context",
          "description": "OData Context",
          "order": 5
        },
        "creationDateTimeUtc": {
          "type": "string",
          "title": "Creation Date Time UTC",
          "description": "Date and time this request was created",
          "order": 2
        },
        "error": {
          "type": "string",
          "title": "Error",
          "description": "Error associated with this action",
          "order": 7
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 9
        },
        "lastUpdateTimeUtc": {
          "type": "string",
          "title": "Last Update Time UTC",
          "description": "Last Update for this requested action",
          "order": 4
        },
        "machineId": {
          "type": "string",
          "title": "Machine ID",
          "description": "Machine ID this request was taken on",
          "order": 3
        },
        "requestor": {
          "type": "string",
          "title": "Requestor",
          "description": "User associated with this action",
          "order": 6
        },
        "requestorComment": {
          "type": "string",
          "title": "Requestor Comment",
          "description": "Comment associated with this action",
          "order": 10
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Isolation action status",
          "order": 1
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type of action",
          "order": 8
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
