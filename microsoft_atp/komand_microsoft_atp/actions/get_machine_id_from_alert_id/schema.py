# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Retrieve the machine ID related to an alert"


class Input:
    ALERT_ID = "alert_id"
    

class Output:
    MACHINE_INFORMATION = "machine_information"
    

class GetMachineIdFromAlertIdInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alert_id": {
      "type": "string",
      "title": "Alert ID",
      "description": "Alert ID to get a machine ID from",
      "order": 1
    }
  },
  "required": [
    "alert_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetMachineIdFromAlertIdOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "machine_information": {
      "$ref": "#/definitions/machine_information_type",
      "title": "Machine Information",
      "description": "The machine ID related to the given Alert ID",
      "order": 1
    }
  },
  "required": [
    "machine_information"
  ],
  "definitions": {
    "machine_information_type": {
      "type": "object",
      "title": "machine_information_type",
      "properties": {
        "@odata.context": {
          "type": "string",
          "title": "OData Context",
          "description": "OData context",
          "order": 11
        },
        "aadDeviceId": {
          "type": "string",
          "title": "AAD Device ID",
          "description": "AAD device ID",
          "order": 7
        },
        "agentVersion": {
          "type": "string",
          "title": "Agent Version",
          "description": "Agent version",
          "order": 1
        },
        "computerDnsName": {
          "type": "string",
          "title": "Computer DNS Name",
          "description": "Computer DNS name",
          "order": 8
        },
        "firstSeen": {
          "type": "string",
          "title": "First Seen",
          "description": "First seen",
          "order": 17
        },
        "healthStatus": {
          "type": "string",
          "title": "Health Status",
          "description": "Health status",
          "order": 10
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 16
        },
        "isAadJoined": {
          "type": "boolean",
          "title": "Is Aad Joined",
          "description": "Is AAD joined",
          "order": 3
        },
        "lastExternalIpAddress": {
          "type": "string",
          "title": "Last External IP Address",
          "description": "Last external IP address",
          "order": 12
        },
        "lastIpAddress": {
          "type": "string",
          "title": "Last IP Address",
          "description": "Last IP address",
          "order": 13
        },
        "lastSeen": {
          "type": "string",
          "title": "Last Seen",
          "description": "Last seen",
          "order": 18
        },
        "machineTags": {
          "type": "array",
          "title": "Machine Tags",
          "description": "Machine tags",
          "items": {
            "type": "object"
          },
          "order": 6
        },
        "osBuild": {
          "type": "integer",
          "title": "OS Build",
          "description": "OS build",
          "order": 4
        },
        "osPlatform": {
          "type": "string",
          "title": "OS Platform",
          "description": "OS platform",
          "order": 2
        },
        "osVersion": {
          "type": "string",
          "title": "OS Version",
          "description": "OS version",
          "order": 14
        },
        "rbacGroupId": {
          "type": "integer",
          "title": "RBAC Group ID",
          "description": "RBAC group ID",
          "order": 9
        },
        "rbacGroupName": {
          "type": "string",
          "title": "RBAC Group Name",
          "description": "RBAC group name",
          "order": 5
        },
        "riskScore": {
          "type": "string",
          "title": "Risk Score",
          "description": "Risk score",
          "order": 15
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
