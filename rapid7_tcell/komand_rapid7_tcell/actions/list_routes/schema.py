# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Fetch details for all seen routes (matching the provided criteria)"


class Input:
    APP_ID = "app_id"
    FROM = "from"
    PAGE = "page"
    PER_PAGE = "per_page"
    TO = "to"
    

class Output:
    ROUTES = "routes"
    TOTAL = "total"
    

class ListRoutesInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "app_id": {
      "type": "string",
      "title": "App ID",
      "description": "App ID",
      "order": 1
    },
    "from": {
      "type": "integer",
      "title": "From",
      "description": "The beginning (earliest endpoint) of a time window for known routes. Routes reported by agents outside this window will not be returned. Value in milliseconds from Unix epoch e.g. 15465292953. Data older than 30 days is not available",
      "order": 2
    },
    "page": {
      "type": "integer",
      "title": "Page",
      "description": "Select which page is returned, default/first page is 1",
      "default": 1,
      "order": 5
    },
    "per_page": {
      "type": "integer",
      "title": "Per Page",
      "description": "The number of results to be returned per page, defaults to 10",
      "default": 10,
      "order": 4
    },
    "to": {
      "type": "integer",
      "title": "To",
      "description": "The end (most recent endpoint) of a time window for known routes. Routes reported by agents outside this window will not be returned. Value in milliseconds from Unix epoch e.g. 15465292953",
      "order": 3
    }
  },
  "required": [
    "app_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListRoutesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "routes": {
      "type": "array",
      "title": "Routes",
      "description": "A list of routes",
      "items": {
        "$ref": "#/definitions/route"
      },
      "order": 1
    },
    "total": {
      "type": "integer",
      "title": "Total",
      "description": "The number of items returned",
      "order": 2
    }
  },
  "definitions": {
    "route": {
      "type": "object",
      "title": "route",
      "properties": {
        "controller": {
          "type": "string",
          "title": "Controller",
          "description": "The name of the controller associated with the route (when applicable)",
          "order": 4
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The ID of the route",
          "order": 1
        },
        "method": {
          "type": "string",
          "title": "Method",
          "description": "The HTTP method (GET, POST, ...) for the route",
          "order": 2
        },
        "pattern": {
          "type": "string",
          "title": "Pattern",
          "description": "The path pattern for the route",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
