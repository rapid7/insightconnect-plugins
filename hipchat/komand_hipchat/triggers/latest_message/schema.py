# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Trigger on chat latest message"


class Input:
    
    INCLUDE_DELETED = "include_deleted"
    INTERVAL = "interval"
    MAXRESULTS = "max-results"
    NOTBEFORE = "not-before"
    ROOM_ID_OR_NAME = "room_id_or_name"
    TIMEZONE = "timezone"
    

class Output:
    
    ITEMS = "items"
    LINKS = "links"
    MAXRESULTS = "maxResults"
    STARTINDEX = "startIndex"
    

class LatestMessageInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "include_deleted": {
      "type": "boolean",
      "title": "Include Deleted",
      "description": "Include records about deleted messages into results (body of a message isn't returned). Set to 'true'",
      "default": true,
      "order": 3
    },
    "interval": {
      "type": "number",
      "title": "Interval",
      "description": "Interval to wait before checking for another message",
      "default": 30,
      "order": 6
    },
    "max-results": {
      "type": "integer",
      "title": "Max Results",
      "description": "The maximum number of messages to return. Valid length range: 0 - 1000",
      "default": 75,
      "order": 2
    },
    "not-before": {
      "type": "string",
      "title": "Not Before",
      "description": "The id of the message that is oldest in the set of messages to be returned. The server will not return any messages that chronologically precede this message",
      "order": 5
    },
    "room_id_or_name": {
      "type": "string",
      "title": "Room Id Or Name",
      "description": "Room id or name",
      "order": 1
    },
    "timezone": {
      "type": "string",
      "title": "Timezone",
      "description": "Your timezone. Must be a supported timezone name",
      "default": "UTC",
      "order": 4
    }
  },
  "required": [
    "room_id_or_name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class LatestMessageOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "items": {
      "type": "array",
      "title": "Items",
      "description": "An array of items",
      "items": {
        "type": "object"
      },
      "order": 1
    },
    "links": {
      "type": "object",
      "title": "Links",
      "description": "Links",
      "order": 4
    },
    "maxResults": {
      "type": "integer",
      "title": "MaxResults",
      "description": "The maximum number of results returned",
      "order": 3
    },
    "startIndex": {
      "type": "integer",
      "title": "StartIndex",
      "description": "The start index for this set of results",
      "order": 2
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
