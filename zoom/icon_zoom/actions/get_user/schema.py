# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get user in Zoom account"


class Input:
    USER_ID = "user_id"
    

class Output:
    USER = "user"
    

class GetUserInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "user_id": {
      "type": "string",
      "title": "User ID",
      "description": "The user identifier or email address",
      "order": 1
    }
  },
  "required": [
    "user_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetUserOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "user": {
      "$ref": "#/definitions/user",
      "title": "User",
      "description": "User details",
      "order": 1
    }
  },
  "required": [
    "user"
  ],
  "definitions": {
    "user": {
      "type": "object",
      "title": "user",
      "properties": {
        "account_id": {
          "type": "string",
          "title": "Account ID",
          "description": "Account ID of user",
          "order": 19
        },
        "created_at": {
          "type": "string",
          "title": "Created At",
          "description": "Creation datetime of user",
          "order": 13
        },
        "dept": {
          "type": "string",
          "title": "Department",
          "description": "Department of user",
          "order": 12
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "Email address of user",
          "order": 4
        },
        "first_name": {
          "type": "string",
          "title": "First Name",
          "description": "First name of user",
          "order": 2
        },
        "group_ids": {
          "type": "array",
          "title": "Web Group IDs",
          "description": "IDs of the web groups user belongs to",
          "items": {
            "type": "string"
          },
          "order": 17
        },
        "host_key": {
          "type": "string",
          "title": "Host Key",
          "description": "User's host key",
          "order": 15
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "User identifier",
          "order": 1
        },
        "im_group_ids": {
          "type": "array",
          "title": "IM Group IDs",
          "description": "IM IDs of the groups user belongs to",
          "items": {
            "type": "string"
          },
          "order": 18
        },
        "jid": {
          "type": "string",
          "title": "JID",
          "description": "JID of user",
          "order": 16
        },
        "language": {
          "type": "string",
          "title": "Language",
          "description": "Language of user",
          "order": 20
        },
        "last_login_time": {
          "type": "string",
          "title": "Last Login Time",
          "description": "Last login datetime of user",
          "order": 14
        },
        "last_name": {
          "type": "string",
          "title": "Last Name",
          "description": "Last name of user",
          "order": 3
        },
        "personal_meeting_url": {
          "type": "string",
          "title": "Personal Meeting URL",
          "description": "Personal meeting URL of user",
          "order": 9
        },
        "phone_country": {
          "type": "string",
          "title": "Phone Country",
          "description": "Phone country of user",
          "order": 21
        },
        "phone_number": {
          "type": "string",
          "title": "Phone Number",
          "description": "Phone number of user",
          "order": 22
        },
        "pmi": {
          "type": "integer",
          "title": "Personal Meeting ID",
          "description": "Personal meeting ID",
          "order": 7
        },
        "role_name": {
          "type": "string",
          "title": "Role Name",
          "description": "Role name of user",
          "order": 6
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status of user",
          "order": 23
        },
        "timezone": {
          "type": "string",
          "title": "Timezone",
          "description": "Timezone of user",
          "order": 10
        },
        "type": {
          "type": "integer",
          "title": "Type",
          "description": "User type",
          "enum": [
            1,
            2,
            3
          ],
          "order": 5
        },
        "use_pmi": {
          "type": "boolean",
          "title": "Use Personal Meeting ID",
          "description": "Use Personal meeting ID for instant meetings",
          "order": 8
        },
        "verified": {
          "type": "integer",
          "title": "Verified",
          "description": "Whether the user is verified or not",
          "enum": [
            1,
            0
          ],
          "order": 11
        }
      },
      "required": [
        "id"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
