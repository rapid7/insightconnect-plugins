# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Create user associated to account"


class Input:
    ACTION = "action"
    EMAIL = "email"
    FIRST_NAME = "first_name"
    LAST_NAME = "last_name"
    TYPE = "type"
    

class Output:
    EMAIL = "email"
    FIRST_NAME = "first_name"
    ID = "id"
    LAST_NAME = "last_name"
    TYPE = "type"
    

class CreateUserInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "action": {
      "type": "string",
      "title": "Action",
      "description": "Specify how to create the new user",
      "default": "create",
      "enum": [
        "create",
        "autoCreate",
        "custCreate",
        "ssoCreate"
      ],
      "order": 1
    },
    "email": {
      "type": "string",
      "title": "Email",
      "description": "Email address of user",
      "order": 2
    },
    "first_name": {
      "type": "string",
      "title": "First Name",
      "description": "First name of user",
      "order": 4
    },
    "last_name": {
      "type": "string",
      "title": "Last Name",
      "description": "Last name of user",
      "order": 5
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "User type",
      "enum": [
        "Basic",
        "Licensed",
        "On-prem"
      ],
      "order": 3
    }
  },
  "required": [
    "action",
    "email",
    "last_name",
    "type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateUserOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "email": {
      "type": "string",
      "title": "Email",
      "description": "Email address of user",
      "order": 2
    },
    "first_name": {
      "type": "string",
      "title": "First Name",
      "description": "First name of user",
      "order": 4
    },
    "id": {
      "type": "string",
      "title": "ID",
      "description": "User identifier",
      "order": 1
    },
    "last_name": {
      "type": "string",
      "title": "Last Name",
      "description": "Last name of user",
      "order": 5
    },
    "type": {
      "type": "integer",
      "title": "Type",
      "description": "User type",
      "enum": [
        1,
        2,
        3
      ],
      "order": 3
    }
  },
  "required": [
    "email",
    "id",
    "last_name",
    "type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
