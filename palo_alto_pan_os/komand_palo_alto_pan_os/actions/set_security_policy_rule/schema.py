# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Creates a new Security Policy Rule"


class Input:
    ACTION = "action"
    APPLICATION = "application"
    DESCRIPTION = "description"
    DESTINATION = "destination"
    DISABLE_SERVER_RESPONSE_INSPECTION = "disable_server_response_inspection"
    DISABLED = "disabled"
    DST_ZONE = "dst_zone"
    LOG_END = "log_end"
    LOG_START = "log_start"
    NEGATE_DESTINATION = "negate_destination"
    NEGATE_SOURCE = "negate_source"
    RULE_NAME = "rule_name"
    SERVICE = "service"
    SOURCE = "source"
    SOURCE_USER = "source_user"
    SRC_ZONE = "src_zone"
    

class Output:
    RESPONSE = "response"
    

class SetSecurityPolicyRuleInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "action": {
      "type": "string",
      "title": "Action",
      "description": "Action that will occur if an event meets the rule definitions",
      "order": 6
    },
    "application": {
      "type": "string",
      "title": "Application",
      "description": "Applications for which this rule will be applied e.g. adobe-cloud, dropbox,  any",
      "order": 5
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Description of the rule and what it does",
      "order": 14
    },
    "destination": {
      "type": "string",
      "title": "Destination",
      "description": "Destinations for which this rule will be applied e.g. 10.0.0.1, computername, any",
      "order": 3
    },
    "disable_server_response_inspection": {
      "type": "boolean",
      "title": "Disable Server Response Inspection",
      "description": "If true, the firewall will not inspect this traffic",
      "order": 8
    },
    "disabled": {
      "type": "boolean",
      "title": "Disabled",
      "description": "If true, rule is disabled",
      "order": 11
    },
    "dst_zone": {
      "type": "string",
      "title": "DST Zone",
      "description": "Zone which the traffic is going to e.g. server zone, any",
      "order": 16
    },
    "log_end": {
      "type": "boolean",
      "title": "Log End",
      "description": "Generates a traffic log entry for the end of a session",
      "order": 13
    },
    "log_start": {
      "type": "boolean",
      "title": "Log Start",
      "description": "Generates a traffic log entry for the start of a session",
      "order": 12
    },
    "negate_destination": {
      "type": "boolean",
      "title": "Negate Destination",
      "description": "Negate destination",
      "order": 10
    },
    "negate_source": {
      "type": "boolean",
      "title": "Negate Source",
      "description": "Negate source",
      "order": 9
    },
    "rule_name": {
      "type": "string",
      "title": "Rule Name",
      "description": "Name of the rule",
      "order": 1
    },
    "service": {
      "type": "string",
      "title": "Service",
      "description": "Service type for which this rule will be applied e.g. HTTP, HTTPS, any",
      "order": 4
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Sources for which this rule will be applied e.g. 10.0.0.1, computername, any",
      "order": 2
    },
    "source_user": {
      "type": "string",
      "title": "Source User",
      "description": "User that the network traffic originated from e.g. Joe Smith, any",
      "order": 7
    },
    "src_zone": {
      "type": "string",
      "title": "SRC Zone",
      "description": "Zone in which the traffic originated e.g. server zone, any",
      "order": 15
    }
  },
  "required": [
    "action",
    "application",
    "description",
    "destination",
    "disable_server_response_inspection",
    "disabled",
    "dst_zone",
    "log_end",
    "log_start",
    "negate_destination",
    "negate_source",
    "rule_name",
    "service",
    "source",
    "source_user",
    "src_zone"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SetSecurityPolicyRuleOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "$ref": "#/definitions/config",
      "title": "Response",
      "description": "Response from the firewall",
      "order": 1
    }
  },
  "definitions": {
    "config": {
      "type": "object",
      "title": "config",
      "properties": {
        "data": {
          "type": "object",
          "title": "Data",
          "order": 1
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
