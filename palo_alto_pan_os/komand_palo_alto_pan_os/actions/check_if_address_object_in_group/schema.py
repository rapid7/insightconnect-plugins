# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Checks to see if an IP address, CIDR IP address, or domain is in an Address Group. Supports IPv6"


class Input:
    ADDRESS = "address"
    DEVICE_NAME = "device_name"
    ENABLE_SEARCH = "enable_search"
    GROUP = "group"
    VIRTUAL_SYSTEM = "virtual_system"
    

class Output:
    ADDRESS_OBJECTS = "address_objects"
    FOUND = "found"
    

class CheckIfAddressObjectInGroupInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address": {
      "type": "string",
      "title": "Address",
      "description": "The Address Object name to check. If Enable Search is set to true then we search the addresses (IP, CIDR, doman) within the address object instead of matching the name",
      "order": 2
    },
    "device_name": {
      "type": "string",
      "title": "Device Name",
      "description": "Device name",
      "default": "localhost.localdomain",
      "order": 4
    },
    "enable_search": {
      "type": "boolean",
      "title": "Enable Search",
      "description": "When enabled, the Address input will accept a IP, CIDR, or domain name to search across the available Address Objects in the system. This is useful when you donâ€™t know the Address Object by its name",
      "default": false,
      "order": 3
    },
    "group": {
      "type": "string",
      "title": "Group",
      "description": "Group name",
      "order": 1
    },
    "virtual_system": {
      "type": "string",
      "title": "Virtual System Name",
      "description": "Virtual system name",
      "default": "vsys1",
      "order": 5
    }
  },
  "required": [
    "address",
    "device_name",
    "enable_search",
    "group",
    "virtual_system"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CheckIfAddressObjectInGroupOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address_objects": {
      "type": "array",
      "title": "Address Objects",
      "description": "The names of the address objects that match or contain address",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "found": {
      "type": "boolean",
      "title": "Found",
      "description": "Was address found in group",
      "order": 1
    }
  },
  "required": [
    "found"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
