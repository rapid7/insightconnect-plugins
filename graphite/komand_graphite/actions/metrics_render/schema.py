# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Render metrics data as a graph"


class Input:
    FORMAT = "format"
    FROM = "from"
    GRAPH_PARAMS = "graph_params"
    TARGET = "target"
    TEMPLATES = "templates"
    UNTIL = "until"
    

class Output:
    GRAPH = "graph"
    

class MetricsRenderInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "format": {
      "type": "string",
      "title": "File Format",
      "description": "Rendered graph file format",
      "default": "png",
      "enum": [
        "png",
        "raw",
        "csv",
        "svg",
        "pdf"
      ],
      "order": 5
    },
    "from": {
      "type": "string",
      "title": "From",
      "description": "Beginning of required range (can be relative or absolute)",
      "order": 2
    },
    "graph_params": {
      "$ref": "#/definitions/graph_parameters",
      "title": "Graph Parameters",
      "description": "Parameters to control the rendered graph output",
      "order": 6
    },
    "target": {
      "type": "string",
      "title": "Target",
      "description": "A path identifying one or several metrics, optionally with functions acting on those metrics",
      "order": 1
    },
    "templates": {
      "type": "object",
      "title": "Template Variables",
      "description": "Values for template variables used in target",
      "order": 4
    },
    "until": {
      "type": "string",
      "title": "Until",
      "description": "End of required range (can be relative or absolute)",
      "order": 3
    }
  },
  "required": [
    "target"
  ],
  "definitions": {
    "graph_parameters": {
      "type": "object",
      "title": "graph_parameters",
      "properties": {
        "areaAlpha": {
          "type": "number",
          "title": "Area Alpha",
          "description": "Alpha (transparency) value (0.0-1.0) of filled areas when using an areaMode",
          "default": 1,
          "order": 1
        },
        "areaMode": {
          "type": "string",
          "title": "Area Mode",
          "description": "Type of filling of the area below the graphed lines",
          "default": "none",
          "enum": [
            "none",
            "first",
            "all",
            "stacked"
          ],
          "order": 2
        },
        "bgcolor": {
          "type": "string",
          "title": "Background Color",
          "description": "Background color of the graph (HTML color name or code)",
          "default": "white",
          "order": 3
        },
        "cacheTimeout": {
          "type": "integer",
          "title": "Cache Timeout",
          "description": "Cache timeout value in seconds",
          "default": 60,
          "order": 4
        },
        "colorList": {
          "type": "array",
          "title": "Color List",
          "description": "List of colors to use for graph lines (HTML color name or code)",
          "items": {
            "type": "string"
          },
          "order": 5
        },
        "drawNullAsZero": {
          "type": "boolean",
          "title": "Draw None as Zero",
          "description": "Convert None (null) values to zero",
          "default": false,
          "order": 6
        },
        "fgcolor": {
          "type": "string",
          "title": "Foreground Color",
          "description": "Foreground color of the graph - title, legend text, and axis labels (HTML color name or code)",
          "default": "black",
          "order": 7
        },
        "fontBold": {
          "type": "boolean",
          "title": "Bold Font",
          "description": "Make fonts bold",
          "default": false,
          "order": 8
        },
        "fontItalic": {
          "type": "boolean",
          "title": "Italic Font",
          "description": "Make fonts italic",
          "default": false,
          "order": 9
        },
        "fontName": {
          "type": "string",
          "title": "Font Name",
          "description": "Font used to render text on the graph",
          "default": "Sans",
          "order": 10
        },
        "fontSize": {
          "type": "number",
          "title": "Font Size",
          "description": "Change the font size",
          "default": 10,
          "order": 11
        },
        "graphOnly": {
          "type": "boolean",
          "title": "Graph Only",
          "description": "Display only the graph area with no grid lines, axes, or legend",
          "default": false,
          "order": 12
        },
        "graphType": {
          "type": "string",
          "title": "Graph Type",
          "description": "Type of graph to be rendered",
          "default": "line",
          "enum": [
            "line",
            "pie"
          ],
          "order": 13
        },
        "height": {
          "type": "integer",
          "title": "Graph Height",
          "description": "Height of the generated graph image (in pixels)",
          "default": 300,
          "order": 20
        },
        "hideAxes": {
          "type": "boolean",
          "title": "Hide Axes",
          "description": "X \\u0026 Y axes will not be rendered",
          "default": false,
          "order": 16
        },
        "hideGrid": {
          "type": "boolean",
          "title": "Hide Grid",
          "description": "Grid lines will not be rendered",
          "default": false,
          "order": 19
        },
        "hideLegend": {
          "type": "string",
          "title": "Hide Legend",
          "description": "Do not draw legend (if unset, the legend is displayed if there are less than 10 items)",
          "default": "unset",
          "enum": [
            "unset",
            "true",
            "false"
          ],
          "order": 14
        },
        "hideNullFromLegend": {
          "type": "boolean",
          "title": "Hide None from Legend",
          "description": "Series with all null values will not be reported in the legend",
          "default": false,
          "order": 15
        },
        "hideXAxis": {
          "type": "boolean",
          "title": "Hide X-axis",
          "description": "X-axis will not be rendered",
          "default": false,
          "order": 17
        },
        "hideYAxis": {
          "type": "boolean",
          "title": "Hide Y-axis",
          "description": "Y-axis will not be rendered",
          "default": false,
          "order": 18
        },
        "leftColor": {
          "type": "string",
          "title": "Left Y-axis Color",
          "description": "In dual Y-axis mode, the color of all metrics associated with the left Y-axis (HTML color name or code)",
          "order": 21
        },
        "leftDashed": {
          "type": "boolean",
          "title": "Left Y-axis Dashed",
          "description": "In dual Y-axis mode, draw all metrics associated with the left Y-axis using dashed lines",
          "default": false,
          "order": 22
        },
        "leftWidth": {
          "type": "number",
          "title": "Left Y-Axis Width",
          "description": "In dual Y-axis mode, the line width of all metrics associated with the left Y-axis (in pixels)",
          "order": 23
        },
        "lineMode": {
          "type": "string",
          "title": "Line Drawing Mode",
          "description": "Line drawing behavior",
          "default": "slope",
          "enum": [
            "slope",
            "staircase",
            "connected"
          ],
          "order": 24
        },
        "lineWidth": {
          "type": "number",
          "title": "Line Width",
          "description": "Line width of all metrics (in pixels)",
          "default": 1.2,
          "order": 25
        },
        "logBase": {
          "type": "integer",
          "title": "Logarithmic Scale Base",
          "description": "Draw the graph with a logarithmic scale of the specified base (10 for common logarithm)",
          "order": 26
        },
        "majorGridLineColor": {
          "type": "string",
          "title": "Major Grid Lines Color",
          "description": "Color of the major grid lines (HTML color name or code)",
          "default": "rose",
          "order": 27
        },
        "margin": {
          "type": "integer",
          "title": "Margin",
          "description": "Margin around the graph image on all sides (in pixels)",
          "default": 10,
          "order": 28
        },
        "minXStep": {
          "type": "integer",
          "title": "Minimum Step between Data Points",
          "description": "Minimum pixel-step to use between datapoints drawn (any value below this will trigger a point consolidation of the series at render time)",
          "default": 1,
          "order": 31
        },
        "minorGridLineColor": {
          "type": "string",
          "title": "Minor Grid Lines Color",
          "description": "Color of the minor grid lines (HTML color name or code)",
          "default": "grey",
          "order": 29
        },
        "minorY": {
          "type": "number",
          "title": "Ratio of Grid Lines",
          "description": "Number of minor grid lines per major line on the Y-axis",
          "default": 1,
          "order": 30
        },
        "noCache": {
          "type": "boolean",
          "title": "Disable Caching",
          "description": "Disable caching in rendered graphs",
          "default": false,
          "order": 32
        },
        "noNullPoints": {
          "type": "boolean",
          "title": "No None Points",
          "description": "Removes all null datapoints from the metrics used",
          "default": false,
          "order": 33
        },
        "pieLabels": {
          "type": "string",
          "title": "Pie Chart Label Orientation",
          "description": "Orientation for slice labels inside of a pie chart",
          "default": "horizontal",
          "enum": [
            "horizontal",
            "rotated"
          ],
          "order": 34
        },
        "pieMode": {
          "type": "string",
          "title": "Pie Chart Aggregation Mode",
          "description": "Type of aggregation to use to calculate slices of a pie chart",
          "default": "average",
          "enum": [
            "average",
            "maximum",
            "minimum"
          ],
          "order": 35
        },
        "rightColor": {
          "type": "string",
          "title": "Right Y-axis Color",
          "description": "In dual Y-axis mode, the color of all metrics associated with the right Y-axis (HTML color name or code)",
          "order": 36
        },
        "rightDashed": {
          "type": "boolean",
          "title": "Right Y-axis Dashed",
          "description": "In dual Y-axis mode, draw all metrics associated with the right Y-axis using dashed lines",
          "default": false,
          "order": 37
        },
        "rightWidth": {
          "type": "number",
          "title": "Right Y-axis Width",
          "description": "In dual Y-axis mode, the line width of all metrics associated with the right Y-axis (in pixels)",
          "order": 38
        },
        "template": {
          "type": "string",
          "title": "Graph Template",
          "description": "Template from `graphTemplates.conf` to use for default colors and graph styles",
          "order": 39
        },
        "title": {
          "type": "string",
          "title": "Graph Title",
          "description": "Title at the top of the graph (center aligned)",
          "order": 40
        },
        "tz": {
          "type": "string",
          "title": "TimeZone",
          "description": "Time zone to convert all times into",
          "order": 41
        },
        "uniqueLegend": {
          "type": "boolean",
          "title": "Only Unique Legend Items",
          "description": "Display only unique legend items, removing any duplicates",
          "default": false,
          "order": 42
        },
        "valueLabels": {
          "type": "string",
          "title": "Pie Chart Value Labels",
          "description": "Slice label value rendering within a pie chart",
          "default": "percent",
          "enum": [
            "percent",
            "numbers",
            "none"
          ],
          "order": 43
        },
        "valueLabelsColor": {
          "type": "string",
          "title": "Pie Chart Value Labels Color",
          "description": "Color used to draw slice labels within a pie chart (HTML color name or code)",
          "order": 44
        },
        "valueLabelsMin": {
          "type": "integer",
          "title": "Minimum Value Labels Value",
          "description": "Slice values below this minimum will not have their labels rendered",
          "order": 45
        },
        "vtitle": {
          "type": "string",
          "title": "Y-Axis Title",
          "description": "Vertical title for Y-axis",
          "order": 46
        },
        "vtitleRight": {
          "type": "string",
          "title": "Y-Axis Title",
          "description": "In dual Y-axis mode, the vertical title for the right Y-axis",
          "order": 47
        },
        "width": {
          "type": "integer",
          "title": "Graph Width",
          "description": "Width of the generated graph image (in pixels)",
          "default": 330,
          "order": 48
        },
        "xFormat": {
          "type": "string",
          "title": "Time Format for X-axis",
          "description": "Time format used when displaying the X-axis (in strftime format)",
          "order": 49
        },
        "yAxisSide": {
          "type": "string",
          "title": "Y-axis Side",
          "description": "Side of Graph on which to render the Y-axis",
          "default": "left",
          "enum": [
            "left",
            "right"
          ],
          "order": 50
        },
        "yDivisors": {
          "type": "array",
          "title": "Y-axis Intermediate Values",
          "description": "Preferred number of intermediate values to display on the Y-axis",
          "items": {
            "type": "integer"
          },
          "order": 51
        },
        "yMax": {
          "type": "number",
          "title": "Maximum Value of Y-axis",
          "description": "Upper bound of the Y-axis of the graph",
          "order": 53
        },
        "yMaxLeft": {
          "type": "number",
          "title": "Maximum Value of Left Y-axis",
          "description": "In dual Y-axis mode, sets the upper bound of the left Y-axis",
          "order": 54
        },
        "yMaxRight": {
          "type": "number",
          "title": "Maximum Value of Right Y-axis",
          "description": "In dual Y-axis mode, sets the upper bound of the right Y-axis",
          "order": 55
        },
        "yMin": {
          "type": "number",
          "title": "Minimum Value of Y-axis",
          "description": "Lower bound of the Y-axis of the graph",
          "order": 52
        },
        "yMinLeft": {
          "type": "number",
          "title": "Minimum Value of Left Y-axis",
          "description": "In dual Y-axis mode, sets the lower bound of the left Y-axis",
          "order": 56
        },
        "yMinRight": {
          "type": "number",
          "title": "Minimum Value of Right Y-axis",
          "description": "In dual Y-axis mode, sets the lower bound of the right Y-axis",
          "order": 57
        },
        "yStep": {
          "type": "number",
          "title": "Value Step for Y-axis",
          "description": "Value step between the Y-axis labels and grid lines",
          "order": 58
        },
        "yStepLeft": {
          "type": "number",
          "title": "Value Step for Left Y-axis",
          "description": "In dual Y-axis mode, value step between the left Y-axis labels and grid lines",
          "order": 59
        },
        "yStepRight": {
          "type": "number",
          "title": "Value Step for Right Y-axis",
          "description": "In dual Y-axis mode, value step between the right Y-axis labels and grid lines",
          "order": 60
        },
        "yUnitSystem": {
          "type": "string",
          "title": "Unit System for Y-axis values",
          "description": "Unit system for compacting Y-axis values",
          "default": "si",
          "enum": [
            "si",
            "binary",
            "sec",
            "msec",
            "none"
          ],
          "order": 61
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MetricsRenderOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "graph": {
      "type": "string",
      "title": "Rendered Graph",
      "displayType": "bytes",
      "description": "Rendered Graph in base64 format",
      "format": "bytes",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
