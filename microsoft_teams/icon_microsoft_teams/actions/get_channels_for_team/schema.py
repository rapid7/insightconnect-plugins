# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Returns all the channels associated with a team"


class Input:
    CHANNEL_NAME = "channel_name"
    TEAM_NAME = "team_name"
    

class Output:
    CHANNELS = "channels"
    

class GetChannelsForTeamInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "channel_name": {
      "type": "string",
      "title": "Channel Name",
      "description": "Optional regex-capable optional channel to look for",
      "order": 2
    },
    "team_name": {
      "type": "string",
      "title": "Team Name",
      "description": "Regex-capable team name to look for",
      "order": 1
    }
  },
  "required": [
    "team_name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetChannelsForTeamOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "channels": {
      "type": "array",
      "title": "Channels",
      "description": "Array of channels",
      "items": {
        "$ref": "#/definitions/channel"
      },
      "order": 1
    }
  },
  "definitions": {
    "channel": {
      "type": "object",
      "title": "channel",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description",
          "order": 3
        },
        "displayName": {
          "type": "string",
          "title": "Display Name",
          "description": "Display name",
          "order": 1
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
