# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Converts a string to an object containing key:value strings"


class Input:
    BLOCK_DELIMITER = "block_delimiter"
    STRING = "string"
    STRING_DELIMITER = "string_delimiter"
    

class Output:
    OBJECT = "object"
    

class SplitToObjectInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "block_delimiter": {
      "type": "string",
      "title": "Block Delimiter",
      "description": "The character delimiter for the initial string split, applied before the string delimiter input. This parameter is optional but allows for more complex handling",
      "order": 3
    },
    "string": {
      "type": "string",
      "title": "String Input",
      "description": "String to convert e.g. USER=Bob",
      "order": 1
    },
    "string_delimiter": {
      "type": "string",
      "title": "String Delimiter",
      "description": "The character used to split the string into slices for the list. The default is a space, if not provided by the user",
      "order": 2
    }
  },
  "required": [
    "string"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SplitToObjectOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "object": {
      "type": "object",
      "title": "Object",
      "description": "Object from string split",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
