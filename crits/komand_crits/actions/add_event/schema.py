# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Creates a new event"


class Input:
    DESCRIPTION = "description"
    PARAMS = "params"
    SOURCE = "source"
    TITLE = "title"
    TYPE = "type"
    

class Output:
    RESPONSE = "response"
    

class AddEventInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Description of what happened during this Event",
      "order": 3
    },
    "params": {
      "type": "object",
      "title": "Parameters",
      "description": "Object containing related data or metadata",
      "order": 5
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Name of the source which provided this information",
      "order": 4
    },
    "title": {
      "type": "string",
      "title": "Title",
      "description": "The title you wish to give this event",
      "order": 2
    },
    "type": {
      "type": "string",
      "title": "Event type",
      "description": "The STIX Event Type you wish to assign to this Event",
      "enum": [
        "Application Compromise",
        "Denial of Service",
        "Distributed Denial of Service",
        "Exploitation",
        "Intel Sharing",
        "Malicious Code",
        "Phishing",
        "Privileged Account Compromise",
        "Scanning",
        "Sensor Alert",
        "Sniffing",
        "Social Engineering",
        "Spam",
        "Strategic Web Compromise",
        "Unauthorized Information Access",
        "Unknown",
        "Website Defacement"
      ],
      "order": 1
    }
  },
  "required": [
    "description",
    "source",
    "title",
    "type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddEventOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "$ref": "#/definitions/post_response",
      "title": "Response",
      "description": "Response",
      "order": 1
    }
  },
  "definitions": {
    "post_response": {
      "type": "object",
      "title": "post_response",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "order": 1
        },
        "message": {
          "type": "string",
          "title": "Message",
          "order": 2
        },
        "return_code": {
          "type": "integer",
          "title": "Return Code",
          "description": "The return_code is usually 0 for success, 1 for failure",
          "order": 4
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The TLO type of the TLO that created or updated",
          "order": 3
        },
        "url": {
          "type": "string",
          "title": "URL",
          "order": 5
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
