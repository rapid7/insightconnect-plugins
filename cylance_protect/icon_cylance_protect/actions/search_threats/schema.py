# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Finds and displays detailed information about one or more threats"


class Input:
    SCORE = "score"
    THREAT_IDENTIFIER = "threat_identifier"
    

class Output:
    THREATS = "threats"
    

class SearchThreatsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "score": {
      "type": "integer",
      "title": "Score",
      "description": "Filter the search by the Cylance score assigned to the threat. Accepts an integer within the range [-1,1]",
      "order": 2
    },
    "threat_identifier": {
      "type": "array",
      "title": "Threat Identifier",
      "description": "The threat(s) to search for. The input should be an array of threat names, MD5, or SHA256 hashes",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "required": [
    "threat_identifier"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchThreatsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "threats": {
      "type": "array",
      "title": "Threats",
      "description": "Detailed information about threats found",
      "items": {
        "$ref": "#/definitions/threat"
      },
      "order": 1
    }
  },
  "required": [
    "threats"
  ],
  "definitions": {
    "threat": {
      "type": "object",
      "title": "threat",
      "properties": {
        "av_industry": {
          "type": "number",
          "title": "AV Industry",
          "description": "The score provided by the antivirus industry",
          "order": 5
        },
        "classification": {
          "type": "string",
          "title": "Classification",
          "description": "The threat classification for the threat",
          "order": 6
        },
        "cylance_score": {
          "type": "number",
          "title": "Cylance Score",
          "description": "The Cylance Score assigned to the threat",
          "order": 4
        },
        "file_size": {
          "type": "integer",
          "title": "File Size",
          "description": "The size of the file, in bytes",
          "order": 10
        },
        "global_quarantined": {
          "type": "boolean",
          "title": "Global Quarantined",
          "description": "Identifies if the threat is on the Global Quarantine list",
          "order": 8
        },
        "last_found": {
          "type": "string",
          "title": "Last Found",
          "description": "The date and time the threat was last found on any device in your organization",
          "order": 12
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "The MD5 hash for the threat",
          "order": 3
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name of the threat",
          "order": 1
        },
        "safelisted": {
          "type": "boolean",
          "title": "Safelisted",
          "description": "Identifies if the threat is on the Safe List",
          "order": 9
        },
        "sha256": {
          "type": "string",
          "title": "SHA256",
          "description": "The SHA256 hash for the threat",
          "order": 2
        },
        "sub_classification": {
          "type": "string",
          "title": "Sub Classification",
          "description": "The threat sub-classification for the threat",
          "order": 7
        },
        "unique_to_cylance": {
          "type": "boolean",
          "title": "Unique to Cylance",
          "description": "The threat was identifies by Cylance but not by other antivirus sources",
          "order": 11
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
