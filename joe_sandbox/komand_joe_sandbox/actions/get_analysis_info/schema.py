# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Show the status and most important attributes of an analysis"


class Input:
    WEBID = "webid"
    

class Output:
    ANALYSIS = "analysis"
    

class GetAnalysisInfoInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "webid": {
      "type": "string",
      "title": "WebID",
      "description": "The web ID of the analysis",
      "order": 1
    }
  },
  "required": [
    "webid"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAnalysisInfoOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "analysis": {
      "$ref": "#/definitions/analysis",
      "title": "Analysis",
      "description": "Analysis details",
      "order": 1
    }
  },
  "required": [
    "analysis"
  ],
  "definitions": {
    "analysis": {
      "type": "object",
      "title": "analysis",
      "properties": {
        "analysisid": {
          "type": "string",
          "title": "AnalysisID",
          "description": "Analysis ID. Will not be returned if the analysis is not finished",
          "order": 2
        },
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Comments",
          "order": 4
        },
        "duration": {
          "type": "integer",
          "title": "Duration",
          "description": "Duration of the analysis in seconds (only for finished analyses)",
          "order": 8
        },
        "filename": {
          "type": "string",
          "title": "Filename",
          "description": "File name",
          "order": 5
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5",
          "order": 9
        },
        "runs": {
          "type": "array",
          "title": "Runs",
          "description": "Runs",
          "items": {
            "$ref": "#/definitions/run"
          },
          "order": 13
        },
        "scriptname": {
          "type": "string",
          "title": "Scriptname",
          "description": "Script name",
          "order": 6
        },
        "sha1": {
          "type": "string",
          "title": "SHA1",
          "description": "SHA1",
          "order": 10
        },
        "sha256": {
          "type": "string",
          "title": "SHA256",
          "description": "SHA256",
          "order": 11
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status of the analysis, one of: submitted, running, finished",
          "order": 3
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "description": "Tags",
          "items": {
            "type": "string"
          },
          "order": 12
        },
        "time": {
          "type": "string",
          "title": "Time",
          "displayType": "date",
          "description": "Time",
          "format": "date-time",
          "order": 7
        },
        "webid": {
          "type": "string",
          "title": "WebID",
          "description": "Web ID",
          "order": 1
        }
      },
      "definitions": {
        "run": {
          "type": "object",
          "title": "run",
          "properties": {
            "detection": {
              "type": "string",
              "title": "Detection",
              "description": "Detection, one of: unknown, clean, suspicious, malicious",
              "order": 1
            },
            "error": {
              "type": "string",
              "title": "Error",
              "description": "Error description, will not be present if no error was detected",
              "order": 2
            },
            "system": {
              "type": "string",
              "title": "System",
              "description": "System",
              "order": 3
            },
            "yara": {
              "type": "boolean",
              "title": "Yara",
              "description": "Yara",
              "order": 4
            }
          }
        }
      }
    },
    "run": {
      "type": "object",
      "title": "run",
      "properties": {
        "detection": {
          "type": "string",
          "title": "Detection",
          "description": "Detection, one of: unknown, clean, suspicious, malicious",
          "order": 1
        },
        "error": {
          "type": "string",
          "title": "Error",
          "description": "Error description, will not be present if no error was detected",
          "order": 2
        },
        "system": {
          "type": "string",
          "title": "System",
          "description": "System",
          "order": 3
        },
        "yara": {
          "type": "boolean",
          "title": "Yara",
          "description": "Yara",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
