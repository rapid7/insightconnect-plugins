import komand
from .schema import UpdateVulnerabilityExceptionExpirationDateInput, UpdateVulnerabilityExceptionExpirationDateOutput, Input, Output, Component
# Custom imports below
from komand_rapid7_insightvm.util import endpoints
from komand.exceptions import PluginException


class UpdateVulnerabilityExceptionExpirationDate(komand.Action):

    def __init__(self):
        super(self.__class__, self).__init__(
                name='update_vulnerability_exception_expiration_date',
                description=Component.DESCRIPTION,
                input=UpdateVulnerabilityExceptionExpirationDateInput(),
                output=UpdateVulnerabilityExceptionExpirationDateOutput())

    def run(self, params={}):
        exception_id = params.get(Input.ID)
        exp_date = params.get(Input.DATE)

        endpoint = endpoints.VulnerabilityException.vulnerability_exception_expiration(self.connection.console_url,
                                                                                       exception_id)
        self.logger.info("Using %s ..." % endpoint)

        response = self.connection.session.put(endpoint, json=exp_date, verify=False)

        if response.status_code == 400:
            if "JSON" in response.text:
                raise PluginException(cause="Error from the InsightVM API\n",
                                      assistance=f"This may be an invalid date format, verify that the date {exp_date} is in ISO 8601 format, ex 2020-08-24T01:59:59.999Z\n",
                                      data=response.text)

        try:
            response.raise_for_status()
        except Exception:
            raise PluginException(cause="Error from the InsightVM API\n",
                                  assistance="Please see the following error text for more information.\n",
                                  data=response.text)

        return {Output.SUCCESS: True}

