#!/usr/bin/env python
# GENERATED BY KOMAND SDK - DO NOT EDIT
import os
import json
from sys import argv

Name = "Google Cloud Compute"
Vendor = "rapid7"
Version = "3.0.0"
Description = "Google Compute Engine delivers virtual machines running in Google innovative data centers and worldwide fiber network"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_google_cloud_compute import connection, actions, triggers

    class ICONGoogleCloudCompute(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.DeleteFirewall())

            self.add_action(actions.DeleteSnapshots())

            self.add_action(actions.DiskAttach())

            self.add_action(actions.DiskDetach())

            self.add_action(actions.DiskList())

            self.add_action(actions.DiskSnapshot())

            self.add_action(actions.GetFirewall())

            self.add_action(actions.InsertFirewall())

            self.add_action(actions.ListFirewalls())

            self.add_action(actions.ListInstances())

            self.add_action(actions.ListSnapshots())

            self.add_action(actions.StartInstance())

            self.add_action(actions.StopInstance())

            self.add_action(actions.UpdateFirewall())


    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONGoogleCloudCompute())
    cli.run()


if __name__ == "__main__":
    main()
