# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Retrieves a list of persistent disks contained within the specified zone"


class Input:
    FILTER = "filter"
    MAXRESULTS = "maxResults"
    ORDERBY = "orderBy"
    PAGETOKEN = "pageToken"
    ZONE = "zone"
    

class Output:
    ID = "id"
    ITEMS = "items"
    KIND = "kind"
    NEXTPAGETOKEN = "nextPageToken"
    SELFLINK = "selfLink"
    

class DiskListInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "filter": {
      "type": "string",
      "title": "Filter",
      "description": "Sets a filter expression for filtering listed resources",
      "order": 2
    },
    "maxResults": {
      "type": "integer",
      "title": "Max Results",
      "description": "The maximum number of results per page that should be returned. Acceptable values are 0 to 500. Default 500",
      "order": 3
    },
    "orderBy": {
      "type": "string",
      "title": "OrderBy",
      "description": "Sorts list results by a certain order",
      "order": 4
    },
    "pageToken": {
      "type": "string",
      "title": "Page Token",
      "description": "Set pageToken to the nextPageToken returned by a previous list request to get the next page of results",
      "order": 5
    },
    "zone": {
      "type": "string",
      "title": "Zone",
      "description": "The name of the zone for this request",
      "order": 1
    }
  },
  "required": [
    "zone"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class DiskListOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "string",
      "title": "ID",
      "description": "Unique identifier for the resource",
      "order": 3
    },
    "items": {
      "type": "array",
      "title": "Items",
      "description": "A list of disk resources",
      "items": {
        "$ref": "#/definitions/items"
      },
      "order": 1
    },
    "kind": {
      "type": "string",
      "title": "Kind",
      "description": "Type of resource",
      "order": 2
    },
    "nextPageToken": {
      "type": "string",
      "title": "Next Page Token",
      "description": "This token allows you to get the next page of results for list requests",
      "order": 5
    },
    "selfLink": {
      "type": "string",
      "title": "Self Link",
      "description": "Server-defined URL for this resource",
      "order": 4
    }
  },
  "definitions": {
    "items": {
      "type": "object",
      "title": "items",
      "properties": {
        "creationTimestamp": {
          "type": "string",
          "title": "CreationTimestamp",
          "order": 1
        },
        "description": {
          "type": "string",
          "title": "Description",
          "order": 2
        },
        "id": {
          "type": "string",
          "title": "Id",
          "order": 3
        },
        "kind": {
          "type": "string",
          "title": "Kind",
          "order": 4
        },
        "licenses": {
          "type": "array",
          "title": "Licenses",
          "items": {
            "type": "string"
          },
          "order": 5
        },
        "name": {
          "type": "string",
          "title": "Name",
          "order": 6
        },
        "selfLink": {
          "type": "string",
          "title": "SelfLink",
          "order": 7
        },
        "sizeGb": {
          "type": "string",
          "title": "SizeGb",
          "order": 8
        },
        "sourceImage": {
          "type": "string",
          "title": "SourceImage",
          "order": 9
        },
        "sourceImageId": {
          "type": "string",
          "title": "SourceImageId",
          "order": 10
        },
        "status": {
          "type": "string",
          "title": "Status",
          "order": 11
        },
        "type": {
          "type": "string",
          "title": "Type",
          "order": 12
        },
        "zone": {
          "type": "string",
          "title": "Zone",
          "order": 13
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
