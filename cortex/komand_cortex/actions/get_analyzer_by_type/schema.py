# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "List analyzers that can act upon a given datatype"


class Input:
    TYPE = "type"
    

class Output:
    LIST = "list"
    

class GetAnalyzerByTypeInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "type": {
      "type": "string",
      "title": "Type",
      "description": "Data type, e.g. IP address, hash, domain",
      "order": 1
    }
  },
  "required": [
    "type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAnalyzerByTypeOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "list": {
      "type": "array",
      "title": "List",
      "description": "List",
      "items": {
        "$ref": "#/definitions/analyzers"
      },
      "order": 1
    }
  },
  "required": [
    "list"
  ],
  "definitions": {
    "analyzers": {
      "type": "object",
      "title": "analyzers",
      "properties": {
        "author": {
          "type": "string",
          "title": "Author",
          "description": "The analyzer's author",
          "order": 7
        },
        "dataTypeList": {
          "type": "array",
          "title": "Data Type List",
          "description": "An array of the observable datatypes that the analyzer can act upon",
          "items": {
            "type": "string"
          },
          "order": 3
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "The analyzer's description",
          "order": 5
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The analyzer's identifier",
          "order": 1
        },
        "license": {
          "type": "string",
          "title": "License",
          "description": "The analyzer's license",
          "order": 6
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The analyzer's name",
          "order": 4
        },
        "url": {
          "type": "string",
          "title": "Url",
          "description": "The analyzer's url",
          "order": 8
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "The analyzer's version",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
