# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Search fixed addresses by MAC address"


class Input:
    MAC = "mac"
    

class Output:
    RESULT = "result"
    

class SearchByMacInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "mac": {
      "type": "string",
      "title": "MAC",
      "description": "MAC address",
      "order": 1
    }
  },
  "required": [
    "mac"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchByMacOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "result": {
      "type": "array",
      "title": "Result",
      "description": "Matched fixed addresses",
      "items": {
        "$ref": "#/definitions/IPv4Addr"
      },
      "order": 1
    }
  },
  "required": [
    "result"
  ],
  "definitions": {
    "IPv4Addr": {
      "type": "object",
      "title": "IPv4Addr",
      "properties": {
        "_ref": {
          "type": "string",
          "title": "Ref",
          "description": "Object Reference of the IP address",
          "order": 5
        },
        "configure_for_dhcp": {
          "type": "boolean",
          "title": "Configure for DHCP",
          "description": "Configure for DHCP flag",
          "order": 3
        },
        "host": {
          "type": "string",
          "title": "Host",
          "description": "The name of the host",
          "order": 4
        },
        "ipv4addr": {
          "type": "string",
          "title": "IPv4 Address",
          "description": "Either an IP address or a function (e.g. func:nextavailableip:10.1.1.0/24)",
          "order": 1
        },
        "mac": {
          "type": "string",
          "title": "MAC",
          "description": "MAC address",
          "order": 2
        }
      },
      "required": [
        "_ref",
        "ipv4addr"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
