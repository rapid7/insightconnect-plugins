# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get the status of a scan"


class Input:
    SCAN_ID = "scan_id"
    

class Output:
    ASSETS = "assets"
    DURATION = "duration"
    ENDTIME = "endTime"
    ENGINENAME = "engineName"
    ID = "id"
    LINKS = "links"
    SCANNAME = "scanName"
    SCANTYPE = "scanType"
    STARTTIME = "startTime"
    STATUS = "status"
    VULNERABILITIES = "vulnerabilities"
    

class GetScanInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "scan_id": {
      "type": "string",
      "title": "Scan ID",
      "description": "ID of the scan to obtain",
      "order": 1
    }
  },
  "required": [
    "scan_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetScanOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assets": {
      "type": "integer",
      "title": "Assets",
      "description": "Number of assets within the scan",
      "order": 3
    },
    "duration": {
      "type": "string",
      "title": "Duration",
      "description": "Duration of the scan in ISO8601 format",
      "order": 7
    },
    "endTime": {
      "type": "string",
      "title": "End Time",
      "description": "End time of the scan in ISO8601 format",
      "order": 9
    },
    "engineName": {
      "type": "string",
      "title": "Engine Name",
      "description": "Name of the engine used for the scan",
      "order": 8
    },
    "id": {
      "type": "integer",
      "title": "ID",
      "description": "ID of the scan",
      "order": 10
    },
    "links": {
      "type": "array",
      "title": "Links",
      "description": "Hypermedia links to corresponding or related resources",
      "items": {
        "$ref": "#/definitions/link"
      },
      "order": 4
    },
    "scanName": {
      "type": "string",
      "title": "Scan Name",
      "description": "User-driven scan name for the scan",
      "order": 11
    },
    "scanType": {
      "type": "string",
      "title": "Scan Type",
      "description": "Scan type (manual, automated, scheduled)",
      "order": 2
    },
    "startTime": {
      "type": "string",
      "title": "Start Time",
      "description": "Start time of the scan in ISO8601 format",
      "order": 6
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Scan status (aborted, unknown, running, finished, stopped, error, paused, dispatched or integrating)",
      "order": 1
    },
    "vulnerabilities": {
      "$ref": "#/definitions/vulnerabilities_count",
      "title": "Vulnerabilities",
      "description": "Counts of vulnerabilities found within the scan",
      "order": 5
    }
  },
  "definitions": {
    "link": {
      "type": "object",
      "title": "link",
      "properties": {
        "href": {
          "type": "string",
          "title": "URL",
          "description": "A hypertext reference, which is either a URI (see RFC 3986) or URI template (see RFC 6570)",
          "order": 1
        },
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "Link relation type following RFC 5988",
          "order": 2
        }
      }
    },
    "vulnerabilities_count": {
      "type": "object",
      "title": "vulnerabilities_count",
      "properties": {
        "critical": {
          "type": "integer",
          "title": "Critical",
          "description": "Number of critical vulnerabilities",
          "order": 1
        },
        "moderate": {
          "type": "integer",
          "title": "Moderate",
          "description": "Number of moderate vulnerabilities",
          "order": 2
        },
        "severe": {
          "type": "integer",
          "title": "Severe",
          "description": "Number of severe vulnerabilities",
          "order": 3
        },
        "total": {
          "type": "integer",
          "title": "Total number of vulnerabilities",
          "description": "Total",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
