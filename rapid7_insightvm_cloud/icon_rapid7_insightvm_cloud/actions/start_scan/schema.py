# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Start an InsightVM scan of previously scanned devices"


class Input:
    ASSET_IDS = "asset_ids"
    HOSTNAMES = "hostnames"
    IPS = "ips"
    NAME = "name"
    

class Output:
    ASSET_IDS = "asset_ids"
    DATA = "data"
    IDS = "ids"
    

class StartScanInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "asset_ids": {
      "type": "array",
      "title": "Asset IDs",
      "description": "IDs of the assets to scan",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "hostnames": {
      "type": "array",
      "title": "Hostnames",
      "description": "List of hostnames to scan",
      "items": {
        "type": "string"
      },
      "order": 4
    },
    "ips": {
      "type": "array",
      "title": "IPs",
      "description": "List of IPv4 or IPv6 addresses to scan",
      "items": {
        "type": "string"
      },
      "order": 3
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "The name of the scan",
      "order": 2
    }
  },
  "required": [
    "name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class StartScanOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "asset_ids": {
      "type": "array",
      "title": "Asset IDs",
      "description": "List of identifiers of the assets scanned",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "data": {
      "type": "object",
      "title": "Data",
      "description": "Information received about the scan",
      "order": 3
    },
    "ids": {
      "type": "array",
      "title": "Scan IDs",
      "description": "List of identifiers of the scans started",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
