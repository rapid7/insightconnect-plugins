# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Create a new event"


class Input:
    DATE = "date"
    DESCRIPTION = "description"
    SOURCE = "source"
    TITLE = "title"
    TYPE = "type"
    

class Output:
    ID = "id"
    

class CreateEventInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "date": {
      "type": "string",
      "title": "Date",
      "displayType": "date",
      "description": "Date on which the event occurred",
      "format": "date-time",
      "order": 5
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Description of the event",
      "order": 2
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Source of the event",
      "order": 4
    },
    "title": {
      "type": "string",
      "title": "Title",
      "description": "Title of the event",
      "order": 1
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "Type of the event",
      "enum": [
        "Watering Hole",
        "SQL Injection Attack",
        "DoS Attack",
        "Malware",
        "Watchlist",
        "Command and Control",
        "Anonymization",
        "Exfiltration",
        "Host Characteristics",
        "Compromised PKI Certificate",
        "Login Compromise",
        "Incident"
      ],
      "order": 3
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateEventOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "integer",
      "title": "Event ID",
      "description": "ID of the created event",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
