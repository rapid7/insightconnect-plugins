# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Determine capture files metadata"


class Input:
    CID = "cid"
    

class Output:
    AVG_PACKET_RATE = "avg_packet_rate"
    AVG_PACKET_SIZE = "avg_packet_size"
    CAP_FILE_ID = "cap_file_id"
    COMMENTS = "comments"
    CREATED_AT = "created_at"
    DATA_BIT_RATE = "data_bit_rate"
    DATA_BYTE_RATE = "data_byte_rate"
    DATA_SIZE = "data_size"
    DURATION = "duration"
    ENCAPSULATION = "encapsulation"
    END_TIME = "end_time"
    FILE = "file"
    FILE_SOURCE = "file_source"
    FILE_TYPE = "file_type"
    FILENAME = "filename"
    GROUP = "group"
    GROUP_WRITE = "group_write"
    ID = "id"
    LAST_ACCESSED = "last_accessed"
    NUM_PACKETS = "num_packets"
    PUBLIC = "public"
    SIZE = "size"
    START_TIME = "start_time"
    TAG_LIST = "tag_list"
    TRUNCATED = "truncated"
    USER = "user"
    VIEWCOUNT = "viewcount"
    

class InfoInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "cid": {
      "type": "string",
      "title": "Cid",
      "description": "Cloud Shark ID",
      "order": 1
    }
  },
  "required": [
    "cid"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class InfoOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "avg_packet_rate": {
      "type": "string",
      "title": "Average Packet Rate",
      "description": "Average packet rate",
      "order": 25
    },
    "avg_packet_size": {
      "type": "string",
      "title": "Average Packet Size",
      "description": "Average packet size",
      "order": 12
    },
    "cap_file_id": {
      "type": "integer",
      "title": "Capture File ID",
      "description": "Capture file ID",
      "order": 18
    },
    "comments": {
      "type": "string",
      "title": "Comments",
      "description": "Comments",
      "order": 11
    },
    "created_at": {
      "type": "string",
      "title": "Created At",
      "displayType": "date",
      "description": "Created at",
      "format": "date-time",
      "order": 8
    },
    "data_bit_rate": {
      "type": "string",
      "title": "Data Bit Rate",
      "description": "Data bit rate",
      "order": 22
    },
    "data_byte_rate": {
      "type": "string",
      "title": "Data Byte Rate",
      "description": "Data byte rate",
      "order": 14
    },
    "data_size": {
      "type": "integer",
      "title": "Data Size",
      "description": "Data size",
      "order": 1
    },
    "duration": {
      "type": "string",
      "title": "Duration",
      "description": "Duration",
      "order": 3
    },
    "encapsulation": {
      "type": "string",
      "title": "Encapsulation",
      "description": "Encapsulation",
      "order": 23
    },
    "end_time": {
      "type": "string",
      "title": "End Time",
      "displayType": "date",
      "description": "End time",
      "format": "date-time",
      "order": 9
    },
    "file": {
      "type": "string",
      "title": "File",
      "description": "File",
      "order": 19
    },
    "file_source": {
      "type": "string",
      "title": "File Source",
      "description": "File source",
      "order": 26
    },
    "file_type": {
      "type": "string",
      "title": "File Type",
      "description": "File type",
      "order": 24
    },
    "filename": {
      "type": "string",
      "title": "Filename",
      "description": "Filename",
      "order": 17
    },
    "group": {
      "type": "string",
      "title": "Group",
      "description": "Group",
      "order": 2
    },
    "group_write": {
      "type": "boolean",
      "title": "Group Write",
      "description": "Group write",
      "order": 4
    },
    "id": {
      "type": "string",
      "title": "Cloud Shark ID",
      "description": "Cloudshark ID",
      "order": 15
    },
    "last_accessed": {
      "type": "string",
      "title": "Last Accessed",
      "displayType": "date",
      "description": "Last accessed",
      "format": "date-time",
      "order": 6
    },
    "num_packets": {
      "type": "integer",
      "title": "Number of Packets",
      "description": "Number of packets",
      "order": 21
    },
    "public": {
      "type": "boolean",
      "title": "Public",
      "description": "Public",
      "order": 13
    },
    "size": {
      "type": "integer",
      "title": "Size",
      "description": "Size",
      "order": 5
    },
    "start_time": {
      "type": "string",
      "title": "Start Time",
      "description": "Start time",
      "order": 27
    },
    "tag_list": {
      "type": "string",
      "title": "Tag List",
      "description": "Tag list",
      "order": 16
    },
    "truncated": {
      "type": "string",
      "title": "Truncated",
      "description": "Truncated",
      "order": 10
    },
    "user": {
      "type": "string",
      "title": "User",
      "description": "User",
      "order": 20
    },
    "viewcount": {
      "type": "integer",
      "title": "View Count",
      "description": "View count",
      "order": 7
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
