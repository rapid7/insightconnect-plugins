# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get the list of all notes associated with the given request"


class Input:
    REQUEST_ID = "request_id"


class Output:
    NOTES = "notes"
    REQUEST_ID = "request_id"
    STATUS = "status"
    STATUS_CODE = "status_code"


class GetListRequestNotesInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "request_id": {
      "type": "integer",
      "title": "Request ID",
      "description": "The id of the request",
      "order": 1
    }
  },
  "required": [
    "request_id"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetListRequestNotesOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "notes": {
      "type": "array",
      "title": "Notes",
      "description": "Notes assigned to the request",
      "items": {
        "$ref": "#/definitions/note"
      },
      "order": 2
    },
    "request_id": {
      "type": "integer",
      "title": "Request ID",
      "description": "The id of the request",
      "order": 1
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Status of the request",
      "order": 3
    },
    "status_code": {
      "type": "integer",
      "title": "Status Code",
      "description": "Status code of the request",
      "order": 4
    }
  },
  "required": [
    "request_id",
    "status"
  ],
  "definitions": {
    "note": {
      "type": "object",
      "title": "note",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Note ID",
          "order": 1
        },
        "show_to_requester": {
          "type": "boolean",
          "title": "Show to Requester",
          "description": "Whether to show the note to requester or not",
          "order": 2
        },
        "last_updated_time": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Last Updated Time",
          "description": "The time the request note was updated",
          "order": 3
        },
        "added_time": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Added Time",
          "description": "The time the request note was added",
          "order": 4
        },
        "last_updated_by": {
          "$ref": "#/definitions/last_updated_by",
          "title": "Last Updated By",
          "description": "Last updated by details",
          "order": 5
        },
        "added_by": {
          "$ref": "#/definitions/added_by",
          "title": "Added By",
          "description": "Added by details",
          "order": 6
        }
      }
    },
    "last_updated_by": {
      "type": "object",
      "title": "last_updated_by",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Id of the last editor",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the last editor",
          "order": 2
        }
      }
    },
    "added_by": {
      "type": "object",
      "title": "added_by",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Id of the creator",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the creator",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
