# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Analyze a raw email message."


class Input:
    QUERIES = "queries"
    RAW_MESSAGE = "raw_message"
    RULES = "rules"
    RUN_ACTIVE_DETECTION_RULES = "run_active_detection_rules"
    RUN_ALL_DETECTION_RULES = "run_all_detection_rules"
    RUN_ALL_INSIGHTS = "run_all_insights"


class Output:
    QUERY_RESULTS = "query_results"
    RULE_RESULTS = "rule_results"


class AnalyzeRawMessageInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "queries": {
      "type": "array",
      "description": "Queries to analyze",
      "items": {
        "$ref": "#/definitions/queries"
      },
      "order": 1
    },
    "raw_message": {
      "type": "string",
      "format": "bytes",
      "displayType": "bytes",
      "description": "The full base64 encoded raw eml message",
      "order": 3
    },
    "rules": {
      "type": "array",
      "description": "Rules to analyze",
      "items": {
        "$ref": "#/definitions/rules"
      },
      "order": 2
    },
    "run_active_detection_rules": {
      "type": "boolean",
      "description": "Whether to analyze the message with all active detection rules in your organization",
      "order": 4
    },
    "run_all_detection_rules": {
      "type": "boolean",
      "description": "Whether to analyze with all detection rules from all Feeds, including uninstalled + inactive Feed rules, as well as any active detection rules you\u2019ve created that are not part of a Feed",
      "order": 5
    },
    "run_all_insights": {
      "type": "boolean",
      "description": "Whether to analyze with all insights",
      "order": 6
    }
  },
  "required": [
    "raw_message"
  ],
  "definitions": {
    "queries": {
      "type": "object",
      "title": "queries",
      "properties": {
        "name": {
          "type": "string",
          "order": 1
        },
        "severity": {
          "type": "string",
          "order": 2
        },
        "source": {
          "type": "string",
          "order": 3
        }
      }
    },
    "rules": {
      "type": "object",
      "title": "rules",
      "properties": {
        "active": {
          "type": "boolean",
          "order": 1
        },
        "feed_id": {
          "type": "string",
          "order": 2
        },
        "name": {
          "type": "string",
          "order": 3
        },
        "severity": {
          "type": "string",
          "order": 4
        },
        "source": {
          "type": "string",
          "order": 5
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AnalyzeRawMessageOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "query_results": {
      "type": "array",
      "title": "Query Results",
      "description": "Query result details",
      "items": {
        "$ref": "#/definitions/query_results"
      },
      "order": 1
    },
    "rule_results": {
      "type": "array",
      "title": "Rule Results",
      "description": "Analyze result details",
      "items": {
        "$ref": "#/definitions/rule_results"
      },
      "order": 2
    }
  },
  "definitions": {
    "query_results": {
      "type": "object",
      "title": "query_results",
      "properties": {
        "error": {
          "type": "string",
          "order": 1
        },
        "execution_time": {
          "type": "integer",
          "order": 2
        },
        "external_errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "order": 3
        },
        "query": {
          "$ref": "#/definitions/query",
          "order": 4
        },
        "success": {
          "type": "boolean",
          "order": 5
        }
      }
    },
    "query": {
      "type": "object",
      "title": "query",
      "properties": {
        "name": {
          "type": "string",
          "order": 1
        },
        "severity": {
          "type": "string",
          "order": 2
        },
        "source": {
          "type": "string",
          "order": 3
        }
      }
    },
    "rule_results": {
      "type": "object",
      "title": "rule_results",
      "properties": {
        "error": {
          "type": "string",
          "order": 1
        },
        "execution_time": {
          "type": "integer",
          "order": 2
        },
        "external_errors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "order": 3
        },
        "matched": {
          "type": "boolean",
          "order": 4
        },
        "rule": {
          "$ref": "#/definitions/rule",
          "order": 5
        },
        "success": {
          "type": "boolean",
          "order": 6
        }
      }
    },
    "rule": {
      "type": "object",
      "title": "rule",
      "properties": {
        "id": {
          "type": "string",
          "order": 1
        },
        "name": {
          "type": "string",
          "order": 2
        },
        "severity": {
          "type": "string",
          "order": 3
        },
        "sources": {
          "type": "string",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
