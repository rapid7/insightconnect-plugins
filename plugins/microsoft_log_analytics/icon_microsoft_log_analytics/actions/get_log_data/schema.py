# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieves log data from Log Analytics workspace in Azure Monitor by a specific query"


class Input:
    QUERY = "query"
    RESOURCE_GROUP_NAME = "resource_group_name"
    SUBSCRIPTION_ID = "subscription_id"
    WORKSPACE_NAME = "workspace_name"
    

class Output:
    TABLES = "tables"
    

class GetLogDataInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "query": {
      "type": "string",
      "title": "Query",
      "description": "Microsoft Log Analytics query",
      "order": 4
    },
    "resource_group_name": {
      "type": "string",
      "title": "Resource Group Name",
      "description": "Name of the resource group",
      "order": 2
    },
    "subscription_id": {
      "type": "string",
      "title": "Subscription ID",
      "description": "Current subscription identifier assigned within the Azure application portal",
      "order": 1
    },
    "workspace_name": {
      "type": "string",
      "title": "Workspace Name",
      "description": "Customer's workspace name assigned to the application registration portal",
      "order": 3
    }
  },
  "required": [
    "query",
    "resource_group_name",
    "subscription_id",
    "workspace_name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetLogDataOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "tables": {
      "type": "array",
      "title": "Tables",
      "description": "Array of tables representing the query result, with each table containing a name, columns and rows keys",
      "items": {
        "$ref": "#/definitions/table"
      },
      "order": 1
    }
  },
  "required": [
    "tables"
  ],
  "definitions": {
    "column": {
      "type": "object",
      "title": "column",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Column's name",
          "order": 1
        },
        "type": {
          "type": "string",
          "title": "Data Type",
          "description": "Column's data type",
          "order": 2
        }
      }
    },
    "table": {
      "type": "object",
      "title": "table",
      "properties": {
        "columns": {
          "type": "array",
          "title": "Columns",
          "description": "Table's columns",
          "items": {
            "$ref": "#/definitions/column"
          },
          "order": 2
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Table's name",
          "order": 1
        },
        "rows": {
          "type": "array",
          "title": "Rows",
          "description": "Table's rows",
          "items": {
            "type": "object"
          },
          "order": 3
        }
      },
      "definitions": {
        "column": {
          "type": "object",
          "title": "column",
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Column's name",
              "order": 1
            },
            "type": {
              "type": "string",
              "title": "Data Type",
              "description": "Column's data type",
              "order": 2
            }
          }
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
