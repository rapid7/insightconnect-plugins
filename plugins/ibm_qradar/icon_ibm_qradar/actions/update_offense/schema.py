# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Update Offenses"


class Input:
    ASSIGNED_TO = "assigned_to"
    CLOSING_REASON_ID = "closing_reason_id"
    FIELDS = "fields"
    FOLLOW_UP = "follow_up"
    OFFENSE_ID = "offense_id"
    PROTECTED = "protected"
    STATUS = "status"
    

class Output:
    DATA = "data"
    

class UpdateOffenseInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assigned_to": {
      "type": "string",
      "title": "Assigned To",
      "description": "A user to assign the offense to",
      "order": 2
    },
    "closing_reason_id": {
      "type": "string",
      "title": "Closing Reason ID",
      "description": "The ID of a closing reason. A valid Closing Reason ID must be provided when closing an offense",
      "order": 3
    },
    "fields": {
      "type": "string",
      "title": "Fields",
      "description": "Specify the list of fields to be returned in the response. Specify the subfields in parentheses. Multiple fields in the same object must be comma separated. Sample fields to filter are id, assigned_to, inactive, offense_source,  offense_type, rules(id), protected, follow_up, status, domain_id, rules, log_sources. More information about the fields can be found in plugin documentation",
      "order": 4
    },
    "follow_up": {
      "type": "boolean",
      "title": "Follow Up",
      "description": "Set to true to set the follow up flag on the offense",
      "order": 5
    },
    "offense_id": {
      "type": "integer",
      "title": "Offense ID",
      "description": "The ID of the offense to update",
      "order": 1
    },
    "protected": {
      "type": "boolean",
      "title": "Protected",
      "description": "The ID of a closing reason. A valid Closing Reason ID must be provided when closing an offense",
      "order": 6
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "The new status for the offense. Set to either open, hidden, or closed. When the status of an offense is being set to closed, a valid Closing Reason ID must be provided. To hide an offense, use the hidden status. To show a previously hidden offense, use the open status",
      "enum": [
        "Open",
        "Hidden",
        "Closed",
        ""
      ],
      "order": 7
    }
  },
  "required": [
    "offense_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class UpdateOffenseOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "$ref": "#/definitions/offense",
      "title": "Update Offense",
      "description": "JSON data of the Offense",
      "order": 1
    }
  },
  "definitions": {
    "log_sources": {
      "type": "object",
      "title": "log_sources",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name",
          "order": 2
        },
        "type_id": {
          "type": "integer",
          "title": "Type ID",
          "description": "Type ID",
          "order": 3
        },
        "type_name": {
          "type": "string",
          "title": "Type Name",
          "description": "Type name",
          "order": 4
        }
      }
    },
    "offense": {
      "type": "object",
      "title": "offense",
      "properties": {
        "assigned_to": {
          "type": "string",
          "title": "Assigned To",
          "description": "Assigned to",
          "order": 1
        },
        "categories": {
          "type": "array",
          "title": "Categories",
          "description": "Categories",
          "items": {
            "type": "string"
          },
          "order": 2
        },
        "category_count": {
          "type": "integer",
          "title": "Category Count",
          "description": "Category count",
          "order": 3
        },
        "close_time": {
          "type": "integer",
          "title": "Close Time",
          "description": "Close time",
          "order": 4
        },
        "closing_reason_id": {
          "type": "integer",
          "title": "Closing Reason ID",
          "description": "Closing reason ID",
          "order": 5
        },
        "closing_user": {
          "type": "string",
          "title": "Closing User",
          "description": "Closing user",
          "order": 6
        },
        "credibility": {
          "type": "integer",
          "title": "Credibility",
          "description": "Credibility",
          "order": 7
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description",
          "order": 8
        },
        "destination_networks": {
          "type": "array",
          "title": "Destination Networks",
          "description": "Destination networks",
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "device_count": {
          "type": "integer",
          "title": "Device Count",
          "description": "Device count",
          "order": 10
        },
        "domain_id": {
          "type": "integer",
          "title": "Domain ID",
          "description": "Domain ID",
          "order": 11
        },
        "event_count": {
          "type": "integer",
          "title": "Event Count",
          "description": "Event count",
          "order": 12
        },
        "first_persisted_time": {
          "type": "integer",
          "title": "First Persisted Time",
          "description": "First persisted time",
          "order": 13
        },
        "flow_count": {
          "type": "integer",
          "title": "Flow Count",
          "description": "Flow count",
          "order": 14
        },
        "follow_up": {
          "type": "boolean",
          "title": "Follow Up",
          "description": "Follow up",
          "order": 15
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID",
          "order": 16
        },
        "inactive": {
          "type": "boolean",
          "title": "Inactive",
          "description": "Inactive",
          "order": 17
        },
        "last_persisted_time": {
          "type": "integer",
          "title": "Last Persisted Time",
          "description": "Last persisted time",
          "order": 18
        },
        "last_updated_time": {
          "type": "integer",
          "title": "Last Updated Time",
          "description": "Last updated time",
          "order": 19
        },
        "local_destination_address_ids": {
          "type": "array",
          "title": "Local Destination Address IDs",
          "description": "Local destination address IDs",
          "items": {
            "type": "integer"
          },
          "order": 20
        },
        "local_destination_count": {
          "type": "integer",
          "title": "Local Destination Count",
          "description": "Local destination count",
          "order": 21
        },
        "log_sources": {
          "type": "array",
          "title": "Log Sources",
          "description": "Log sources",
          "items": {
            "$ref": "#/definitions/log_sources"
          },
          "order": 22
        },
        "magnitude": {
          "type": "integer",
          "title": "Magnitude",
          "description": "Magnitude",
          "order": 23
        },
        "offense_source": {
          "type": "string",
          "title": "Offense Source",
          "description": "Offense source",
          "order": 24
        },
        "offense_type": {
          "type": "integer",
          "title": "Offense Type",
          "description": "Offense type",
          "order": 25
        },
        "policy_category_count": {
          "type": "integer",
          "title": "Policy Category Count",
          "description": "Policy category count",
          "order": 26
        },
        "protected": {
          "type": "boolean",
          "title": "Protected",
          "description": "Protected",
          "order": 27
        },
        "relevance": {
          "type": "integer",
          "title": "Relevance",
          "description": "Relevance",
          "order": 28
        },
        "remote_destination_count": {
          "type": "integer",
          "title": "Remote Destination Count",
          "description": "Remote destination count",
          "order": 29
        },
        "rules": {
          "type": "array",
          "title": "Rules",
          "description": "Rules",
          "items": {
            "$ref": "#/definitions/rules"
          },
          "order": 30
        },
        "security_category_count": {
          "type": "integer",
          "title": "Security Category Count",
          "description": "Security category count",
          "order": 31
        },
        "severity": {
          "type": "integer",
          "title": "Severity",
          "description": "Severity",
          "order": 32
        },
        "source_address_ids": {
          "type": "array",
          "title": "Source Address IDs",
          "description": "Source address IDs",
          "items": {
            "type": "integer"
          },
          "order": 33
        },
        "source_count": {
          "type": "integer",
          "title": "Source Count",
          "description": "Source count",
          "order": 34
        },
        "source_network": {
          "type": "string",
          "title": "Source Network",
          "description": "Source network",
          "order": 35
        },
        "start_time": {
          "type": "integer",
          "title": "Start Time",
          "description": "Start time",
          "order": 36
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status",
          "order": 37
        },
        "username_count": {
          "type": "integer",
          "title": "Username Count",
          "description": "Username count",
          "order": 38
        }
      },
      "definitions": {
        "log_sources": {
          "type": "object",
          "title": "log_sources",
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "description": "ID",
              "order": 1
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Name",
              "order": 2
            },
            "type_id": {
              "type": "integer",
              "title": "Type ID",
              "description": "Type ID",
              "order": 3
            },
            "type_name": {
              "type": "string",
              "title": "Type Name",
              "description": "Type name",
              "order": 4
            }
          }
        },
        "rules": {
          "type": "object",
          "title": "rules",
          "properties": {
            "id": {
              "type": "integer",
              "title": "ID",
              "description": "ID",
              "order": 1
            },
            "type": {
              "type": "string",
              "title": "Type",
              "description": "Type",
              "order": 2
            }
          }
        }
      }
    },
    "rules": {
      "type": "object",
      "title": "rules",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID",
          "order": 1
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
