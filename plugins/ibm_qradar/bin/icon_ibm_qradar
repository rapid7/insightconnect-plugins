#!/usr/bin/env python
# GENERATED BY KOMAND SDK - DO NOT EDIT
import os
import json
from sys import argv

Name = "IBM QRadar"
Vendor = "rapid7"
Version = "1.0.0"
Description = "IBM QRadar reduces billions of events and flows into a manageable number of actionable offenses that are prioritized by their impact on your business operations. This plugin allows you to use IBM QRadar to orchestrate and automate Ariel search queries and automate offense management"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from icon_ibm_qradar import connection, actions, triggers

    class ICONIbmQradar(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_trigger(triggers.GetNewOffense())

            self.add_action(actions.AddNotesToOffense())

            self.add_action(actions.GetArielSearchById())

            self.add_action(actions.GetAssets())

            self.add_action(actions.GetOffenseClosingReasons())

            self.add_action(actions.GetOffenseNote())

            self.add_action(actions.GetOffenseNoteById())

            self.add_action(actions.GetOffenses())

            self.add_action(actions.StartArielSearch())

            self.add_action(actions.UpdateOffense())


    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONIbmQradar())
    cli.run()


if __name__ == "__main__":
    main()
