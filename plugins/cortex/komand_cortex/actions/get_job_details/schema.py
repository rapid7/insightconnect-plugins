# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "List the details of a given job, identified by its ID"


class Input:
    JOB_ID = "job_id"
    

class Output:
    ANALYZERID = "analyzerId"
    ARTIFACT = "artifact"
    DATE = "date"
    ID = "id"
    STATUS = "status"
    

class GetJobDetailsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "job_id": {
      "type": "string",
      "title": "Job ID",
      "description": "Job ID e.g. c9uZDbHBf32DdIVJ",
      "order": 1
    }
  },
  "required": [
    "job_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetJobDetailsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "analyzerId": {
      "type": "string",
      "title": "AnalyzerId",
      "description": "The analyzer's ID",
      "order": 5
    },
    "artifact": {
      "$ref": "#/definitions/artifact",
      "title": "Artifact",
      "description": "The observable details",
      "order": 4
    },
    "date": {
      "type": "integer",
      "title": "Date",
      "description": "A timestamp which represents the job's start date",
      "order": 2
    },
    "id": {
      "type": "string",
      "title": "ID",
      "description": "The job's ID",
      "order": 3
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "The job's status: Success, InProgress or Failure",
      "order": 1
    }
  },
  "required": [
    "analyzerId",
    "artifact",
    "date",
    "id",
    "status"
  ],
  "definitions": {
    "artifact": {
      "type": "object",
      "title": "artifact",
      "properties": {
        "attributes": {
          "$ref": "#/definitions/attributes",
          "title": "Attributes",
          "description": "Attributes",
          "order": 1
        },
        "data": {
          "type": "string",
          "title": "Data",
          "order": 2
        }
      },
      "definitions": {
        "attributes": {
          "type": "object",
          "title": "attributes",
          "properties": {
            "dataType": {
              "type": "string",
              "title": "Data Type",
              "description": "Data type e.g. domain, ip, file",
              "order": 1
            },
            "tlp": {
              "type": "integer",
              "title": "TLP",
              "description": "Traffic Light Protocol level e.g. 1",
              "order": 2
            }
          }
        }
      }
    },
    "attributes": {
      "type": "object",
      "title": "attributes",
      "properties": {
        "dataType": {
          "type": "string",
          "title": "Data Type",
          "description": "Data type e.g. domain, ip, file",
          "order": 1
        },
        "tlp": {
          "type": "integer",
          "title": "TLP",
          "description": "Traffic Light Protocol level e.g. 1",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
