# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Input:
    HOST = "host"
    PORT = "port"
    PROTOCOL = "protocol"
    PROXY = "proxy"
    VERIFY = "verify"
    

class ConnectionSchema(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "host": {
      "type": "string",
      "title": "Host",
      "description": "Cortex host e.g. cortex.company.com or 10.3.4.50",
      "order": 1
    },
    "port": {
      "type": "string",
      "title": "Port",
      "description": "Cortex API port e.g. 9999",
      "default": "9999",
      "order": 2
    },
    "protocol": {
      "type": "string",
      "title": "Protocol",
      "description": "HTTP protocol",
      "enum": [
        "http",
        "https"
      ],
      "order": 3
    },
    "proxy": {
      "type": "object",
      "title": "Proxy",
      "description": "An optional dictionary containing proxy data, with http or https as the key, and the proxy url as the value",
      "order": 4
    },
    "verify": {
      "type": "boolean",
      "title": "SSL Verify",
      "description": "Verify the certificate",
      "default": true,
      "order": 5
    }
  },
  "required": [
    "host",
    "port",
    "protocol",
    "verify"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
