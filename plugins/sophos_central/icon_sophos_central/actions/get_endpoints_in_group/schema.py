# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieve endpoints in your specified group"


class Input:
    FIELDS = "fields"
    GROUPID = "groupId"
    PAGEFROMKEY = "pageFromKey"
    PAGESIZE = "pageSize"
    PAGETOTAL = "pageTotal"
    SEARCH = "search"
    SEARCHFIELDS = "searchFields"
    SORT = "sort"
    

class Output:
    ITEMS = "items"
    PAGES = "pages"
    

class GetEndpointsInGroupInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "fields": {
      "type": "array",
      "title": "Fields",
      "description": "The fields to return in a partial response. All fields are returned by default",
      "items": {
        "type": "string"
      },
      "order": 3
    },
    "groupId": {
      "type": "string",
      "title": "Group ID",
      "description": "Endpoint group ID",
      "order": 1
    },
    "pageFromKey": {
      "type": "string",
      "title": "Page from Key",
      "description": "Key of the page to fetch",
      "order": 4
    },
    "pageSize": {
      "type": "integer",
      "title": "Page Size",
      "description": "The size of the page requested. Value must be inclusively between 1 and 1000",
      "default": 50,
      "order": 6
    },
    "pageTotal": {
      "type": "boolean",
      "title": "Page Total",
      "description": "Whether the number of pages should be calculated and returned in the response",
      "default": false,
      "order": 5
    },
    "search": {
      "type": "string",
      "title": "Search",
      "description": "Term to search for in the specified search fields",
      "order": 7
    },
    "searchFields": {
      "type": "array",
      "title": "Search Fields",
      "description": "List of search fields for finding the given search term. The following values are allowed: \\"hostname\\", \\"groupName\\", \\"associatedPersonName\\", \\"ipAddresses\\", \\"osName\\"",
      "items": {
        "type": "string"
      },
      "order": 8
    },
    "sort": {
      "type": "array",
      "title": "Sort",
      "description": "Defines how to sort the data. Matches (^[^:]+$)|(^[^:]+:(asc|desc)$)",
      "items": {
        "type": "string"
      },
      "order": 2
    }
  },
  "required": [
    "groupId"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetEndpointsInGroupOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "items": {
      "type": "array",
      "title": "Items",
      "description": "List of endpoints belonging to the given group",
      "items": {
        "$ref": "#/definitions/endpointsItem"
      },
      "order": 1
    },
    "pages": {
      "$ref": "#/definitions/pagesDetails",
      "title": "Pages",
      "description": "Pages details",
      "order": 2
    }
  },
  "definitions": {
    "assignedProduct": {
      "type": "object",
      "title": "assignedProduct",
      "properties": {
        "code": {
          "type": "string",
          "title": "Code",
          "description": "Endpoint product. The following values are allowed: coreAgent, interceptX, xdr, endpointProtection, deviceEncryption, mtr, ztna",
          "order": 1
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Installation status of a product assigned to the endpoint. The following values are allowed: installed, notInstalled",
          "order": 3
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Version of a product assigned to an endpoint",
          "order": 2
        }
      }
    },
    "associatedPerson": {
      "type": "object",
      "title": "associatedPerson",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique ID for the Person",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Person's name",
          "order": 2
        },
        "viaLogin": {
          "type": "string",
          "title": "Via Login",
          "description": "Person's login on the endpoint",
          "order": 3
        }
      }
    },
    "cloud": {
      "type": "object",
      "title": "cloud",
      "properties": {
        "instanceId": {
          "type": "string",
          "title": "Instance ID",
          "description": "Unique ID for the cloud instance",
          "order": 2
        },
        "provider": {
          "type": "string",
          "title": "Provider",
          "description": "Cloud provider in which the endpoint is running. The following values are allowed: aws, azure",
          "order": 1
        }
      }
    },
    "encryption": {
      "type": "object",
      "title": "encryption",
      "properties": {
        "volumes": {
          "type": "array",
          "title": "Volumes",
          "description": "Endpoint volumes",
          "items": {
            "$ref": "#/definitions/volume"
          },
          "order": 1
        }
      },
      "definitions": {
        "volume": {
          "type": "object",
          "title": "volume",
          "properties": {
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Endpoint volume encryption status. The following values are allowed: notEncrypted, encrypted, encrypting, notSupported, suspended, unknown",
              "order": 2
            },
            "volumeId": {
              "type": "string",
              "title": "Volume ID",
              "description": "Endpoint volume ID",
              "order": 1
            }
          }
        }
      }
    },
    "endpointsItem": {
      "type": "object",
      "title": "endpointsItem",
      "properties": {
        "assignedProducts": {
          "type": "array",
          "title": "Assigned Products",
          "description": "Products assigned to the endpoint",
          "items": {
            "$ref": "#/definitions/assignedProduct"
          },
          "order": 13
        },
        "associatedPerson": {
          "$ref": "#/definitions/associatedPerson",
          "title": "Associated Person",
          "description": "Person associated with an endpoint",
          "order": 11
        },
        "cloud": {
          "$ref": "#/definitions/cloud",
          "title": "Cloud",
          "description": "Endpoint cloud",
          "order": 18
        },
        "encryption": {
          "$ref": "#/definitions/encryption",
          "title": "Encryption",
          "description": "Endpoint encryption state",
          "order": 15
        },
        "group": {
          "$ref": "#/definitions/group",
          "title": "Group",
          "description": "Endpoint group",
          "order": 10
        },
        "health": {
          "$ref": "#/definitions/health",
          "title": "Health",
          "description": "Endpoint health status",
          "order": 5
        },
        "hostname": {
          "type": "string",
          "title": "Hostname",
          "description": "Hostname of the endpoint",
          "order": 4
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique ID of the endpoint",
          "order": 1
        },
        "ipv4Addresses": {
          "type": "array",
          "title": "IPv4 Addresses",
          "description": "List of IPv4 addresses",
          "items": {
            "type": "string"
          },
          "order": 7
        },
        "ipv6Addresses": {
          "type": "array",
          "title": "IPv6 Addresses",
          "description": "List of IPv6 addresses",
          "items": {
            "type": "string"
          },
          "order": 8
        },
        "isolation": {
          "$ref": "#/definitions/isolationState",
          "title": "Isolation",
          "description": "Endpoint isolation state as reported by an endpoint",
          "order": 19
        },
        "lastSeenAt": {
          "type": "string",
          "title": "Last Seen At",
          "description": "Date and time (UTC) when the endpoint last communicated with Sophos Central",
          "order": 14
        },
        "lockdown": {
          "$ref": "#/definitions/lockdown",
          "title": "Lockdown",
          "description": "Server lockdown status",
          "order": 16
        },
        "macAddresses": {
          "type": "array",
          "title": "MAC Addresses",
          "description": "List of MAC addresses",
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "online": {
          "type": "boolean",
          "title": "Online",
          "description": "Whether endpoint is currently online",
          "order": 17
        },
        "os": {
          "$ref": "#/definitions/osObject",
          "title": "OS",
          "description": "OS information",
          "order": 6
        },
        "tamperProtectionEnabled": {
          "type": "boolean",
          "title": "Tamper Protection Enabled",
          "description": "Whether Tamper Protection is turned on",
          "order": 12
        },
        "tenant": {
          "$ref": "#/definitions/objectId",
          "title": "Tenant",
          "description": "Represents a referenced object",
          "order": 3
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Endpoint type. The following values are allowed: computer, server, securityVm",
          "order": 2
        }
      },
      "definitions": {
        "assignedProduct": {
          "type": "object",
          "title": "assignedProduct",
          "properties": {
            "code": {
              "type": "string",
              "title": "Code",
              "description": "Endpoint product. The following values are allowed: coreAgent, interceptX, xdr, endpointProtection, deviceEncryption, mtr, ztna",
              "order": 1
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Installation status of a product assigned to the endpoint. The following values are allowed: installed, notInstalled",
              "order": 3
            },
            "version": {
              "type": "string",
              "title": "Version",
              "description": "Version of a product assigned to an endpoint",
              "order": 2
            }
          }
        },
        "associatedPerson": {
          "type": "object",
          "title": "associatedPerson",
          "properties": {
            "id": {
              "type": "string",
              "title": "ID",
              "description": "Unique ID for the Person",
              "order": 1
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Person's name",
              "order": 2
            },
            "viaLogin": {
              "type": "string",
              "title": "Via Login",
              "description": "Person's login on the endpoint",
              "order": 3
            }
          }
        },
        "cloud": {
          "type": "object",
          "title": "cloud",
          "properties": {
            "instanceId": {
              "type": "string",
              "title": "Instance ID",
              "description": "Unique ID for the cloud instance",
              "order": 2
            },
            "provider": {
              "type": "string",
              "title": "Provider",
              "description": "Cloud provider in which the endpoint is running. The following values are allowed: aws, azure",
              "order": 1
            }
          }
        },
        "encryption": {
          "type": "object",
          "title": "encryption",
          "properties": {
            "volumes": {
              "type": "array",
              "title": "Volumes",
              "description": "Endpoint volumes",
              "items": {
                "$ref": "#/definitions/volume"
              },
              "order": 1
            }
          },
          "definitions": {
            "volume": {
              "type": "object",
              "title": "volume",
              "properties": {
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Endpoint volume encryption status. The following values are allowed: notEncrypted, encrypted, encrypting, notSupported, suspended, unknown",
                  "order": 2
                },
                "volumeId": {
                  "type": "string",
                  "title": "Volume ID",
                  "description": "Endpoint volume ID",
                  "order": 1
                }
              }
            }
          }
        },
        "group": {
          "type": "object",
          "title": "group",
          "properties": {
            "id": {
              "type": "string",
              "title": "ID",
              "description": "Unique ID for endpoint group",
              "order": 1
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Endpoint group name",
              "order": 2
            }
          }
        },
        "health": {
          "type": "object",
          "title": "health",
          "properties": {
            "overall": {
              "type": "string",
              "title": "Overall",
              "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
              "order": 1
            },
            "services": {
              "$ref": "#/definitions/services",
              "title": "Services",
              "description": "Status of services on the endpoint",
              "order": 3
            },
            "threats": {
              "$ref": "#/definitions/threats",
              "title": "Threats",
              "description": "Threats on the endpoint",
              "order": 2
            }
          },
          "definitions": {
            "serviceDetails": {
              "type": "object",
              "title": "serviceDetails",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "Service name",
                  "order": 1
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Status of a service on an endpoint. The following values are allowed: running, stopped, missing",
                  "order": 2
                }
              }
            },
            "services": {
              "type": "object",
              "title": "services",
              "properties": {
                "serviceDetails": {
                  "type": "array",
                  "title": "Service Details",
                  "description": "Details of services on the endpoint",
                  "items": {
                    "$ref": "#/definitions/serviceDetails"
                  },
                  "order": 2
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
                  "order": 1
                }
              },
              "definitions": {
                "serviceDetails": {
                  "type": "object",
                  "title": "serviceDetails",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "Service name",
                      "order": 1
                    },
                    "status": {
                      "type": "string",
                      "title": "Status",
                      "description": "Status of a service on an endpoint. The following values are allowed: running, stopped, missing",
                      "order": 2
                    }
                  }
                }
              }
            },
            "threats": {
              "type": "object",
              "title": "threats",
              "properties": {
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
                  "order": 1
                }
              }
            }
          }
        },
        "isolationState": {
          "type": "object",
          "title": "isolationState",
          "properties": {
            "adminIsolated": {
              "type": "boolean",
              "title": "Admin Isolated",
              "description": "Whether isolation was triggered by an admin",
              "order": 2
            },
            "selfIsolated": {
              "type": "boolean",
              "title": "Self Isolated",
              "description": "Whether isolation was triggered by the endpoint itself",
              "order": 3
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Isolation status reported by endpoint. The following values are allowed: isolated, notIsolated",
              "order": 1
            }
          }
        },
        "lockdown": {
          "type": "object",
          "title": "lockdown",
          "properties": {
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Endpoint lockdown status. The following values are allowed: creatingWhitelist, installing, locked, notInstalled, registering, starting, stopping, unavailable, uninstalled, unlocked",
              "order": 1
            },
            "updateStatus": {
              "type": "string",
              "title": "Update Status",
              "description": "Endpoint lockdown update status. The following values are allowed: upToDate, updating, rebootRequired, notInstalled",
              "order": 2
            }
          }
        },
        "objectId": {
          "type": "object",
          "title": "objectId",
          "properties": {
            "id": {
              "type": "string",
              "title": "ID",
              "description": "The ID of the referenced object",
              "order": 1
            }
          }
        },
        "osObject": {
          "type": "object",
          "title": "osObject",
          "properties": {
            "build": {
              "type": "integer",
              "title": "Build",
              "description": "OS build",
              "order": 6
            },
            "isServer": {
              "type": "boolean",
              "title": "Is Server",
              "description": "Whether the OS is a server OS",
              "order": 1
            },
            "majorVersion": {
              "type": "integer",
              "title": "Major Version",
              "description": "OS major version",
              "order": 4
            },
            "minorVersion": {
              "type": "integer",
              "title": "Minor Version",
              "description": "OS minor version",
              "order": 5
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "OS name as reported by the endpoint",
              "order": 3
            },
            "platform": {
              "type": "string",
              "title": "Platform",
              "description": "OS platform type. The following values are allowed: windows, linux, macOS",
              "order": 2
            }
          }
        },
        "serviceDetails": {
          "type": "object",
          "title": "serviceDetails",
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Service name",
              "order": 1
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Status of a service on an endpoint. The following values are allowed: running, stopped, missing",
              "order": 2
            }
          }
        },
        "services": {
          "type": "object",
          "title": "services",
          "properties": {
            "serviceDetails": {
              "type": "array",
              "title": "Service Details",
              "description": "Details of services on the endpoint",
              "items": {
                "$ref": "#/definitions/serviceDetails"
              },
              "order": 2
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
              "order": 1
            }
          },
          "definitions": {
            "serviceDetails": {
              "type": "object",
              "title": "serviceDetails",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "Service name",
                  "order": 1
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Status of a service on an endpoint. The following values are allowed: running, stopped, missing",
                  "order": 2
                }
              }
            }
          }
        },
        "threats": {
          "type": "object",
          "title": "threats",
          "properties": {
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
              "order": 1
            }
          }
        },
        "volume": {
          "type": "object",
          "title": "volume",
          "properties": {
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Endpoint volume encryption status. The following values are allowed: notEncrypted, encrypted, encrypting, notSupported, suspended, unknown",
              "order": 2
            },
            "volumeId": {
              "type": "string",
              "title": "Volume ID",
              "description": "Endpoint volume ID",
              "order": 1
            }
          }
        }
      }
    },
    "group": {
      "type": "object",
      "title": "group",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique ID for endpoint group",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Endpoint group name",
          "order": 2
        }
      }
    },
    "health": {
      "type": "object",
      "title": "health",
      "properties": {
        "overall": {
          "type": "string",
          "title": "Overall",
          "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
          "order": 1
        },
        "services": {
          "$ref": "#/definitions/services",
          "title": "Services",
          "description": "Status of services on the endpoint",
          "order": 3
        },
        "threats": {
          "$ref": "#/definitions/threats",
          "title": "Threats",
          "description": "Threats on the endpoint",
          "order": 2
        }
      },
      "definitions": {
        "serviceDetails": {
          "type": "object",
          "title": "serviceDetails",
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Service name",
              "order": 1
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Status of a service on an endpoint. The following values are allowed: running, stopped, missing",
              "order": 2
            }
          }
        },
        "services": {
          "type": "object",
          "title": "services",
          "properties": {
            "serviceDetails": {
              "type": "array",
              "title": "Service Details",
              "description": "Details of services on the endpoint",
              "items": {
                "$ref": "#/definitions/serviceDetails"
              },
              "order": 2
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
              "order": 1
            }
          },
          "definitions": {
            "serviceDetails": {
              "type": "object",
              "title": "serviceDetails",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "Service name",
                  "order": 1
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Status of a service on an endpoint. The following values are allowed: running, stopped, missing",
                  "order": 2
                }
              }
            }
          }
        },
        "threats": {
          "type": "object",
          "title": "threats",
          "properties": {
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
              "order": 1
            }
          }
        }
      }
    },
    "isolationState": {
      "type": "object",
      "title": "isolationState",
      "properties": {
        "adminIsolated": {
          "type": "boolean",
          "title": "Admin Isolated",
          "description": "Whether isolation was triggered by an admin",
          "order": 2
        },
        "selfIsolated": {
          "type": "boolean",
          "title": "Self Isolated",
          "description": "Whether isolation was triggered by the endpoint itself",
          "order": 3
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Isolation status reported by endpoint. The following values are allowed: isolated, notIsolated",
          "order": 1
        }
      }
    },
    "lockdown": {
      "type": "object",
      "title": "lockdown",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Endpoint lockdown status. The following values are allowed: creatingWhitelist, installing, locked, notInstalled, registering, starting, stopping, unavailable, uninstalled, unlocked",
          "order": 1
        },
        "updateStatus": {
          "type": "string",
          "title": "Update Status",
          "description": "Endpoint lockdown update status. The following values are allowed: upToDate, updating, rebootRequired, notInstalled",
          "order": 2
        }
      }
    },
    "objectId": {
      "type": "object",
      "title": "objectId",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The ID of the referenced object",
          "order": 1
        }
      }
    },
    "osObject": {
      "type": "object",
      "title": "osObject",
      "properties": {
        "build": {
          "type": "integer",
          "title": "Build",
          "description": "OS build",
          "order": 6
        },
        "isServer": {
          "type": "boolean",
          "title": "Is Server",
          "description": "Whether the OS is a server OS",
          "order": 1
        },
        "majorVersion": {
          "type": "integer",
          "title": "Major Version",
          "description": "OS major version",
          "order": 4
        },
        "minorVersion": {
          "type": "integer",
          "title": "Minor Version",
          "description": "OS minor version",
          "order": 5
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "OS name as reported by the endpoint",
          "order": 3
        },
        "platform": {
          "type": "string",
          "title": "Platform",
          "description": "OS platform type. The following values are allowed: windows, linux, macOS",
          "order": 2
        }
      }
    },
    "pagesDetails": {
      "type": "object",
      "title": "pagesDetails",
      "properties": {
        "fromKey": {
          "type": "string",
          "title": "From Key",
          "description": "The key of the first item in the returned page",
          "order": 5
        },
        "items": {
          "type": "integer",
          "title": "Items",
          "description": "The total number of items across all pages, if pageTotal=true was passed into the request",
          "order": 3
        },
        "maxSize": {
          "type": "integer",
          "title": "Max Size",
          "description": "The maximum page size that can be requested",
          "order": 4
        },
        "nextKey": {
          "type": "string",
          "title": "Next Key",
          "description": "The key to use when fetching the next page",
          "order": 6
        },
        "size": {
          "type": "integer",
          "title": "Size",
          "description": "The size of the page being returned",
          "order": 1
        },
        "total": {
          "type": "integer",
          "title": "Total",
          "description": "The total number of pages that exist, if pageTotal=true in the request",
          "order": 2
        }
      }
    },
    "serviceDetails": {
      "type": "object",
      "title": "serviceDetails",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Service name",
          "order": 1
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status of a service on an endpoint. The following values are allowed: running, stopped, missing",
          "order": 2
        }
      }
    },
    "services": {
      "type": "object",
      "title": "services",
      "properties": {
        "serviceDetails": {
          "type": "array",
          "title": "Service Details",
          "description": "Details of services on the endpoint",
          "items": {
            "$ref": "#/definitions/serviceDetails"
          },
          "order": 2
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
          "order": 1
        }
      },
      "definitions": {
        "serviceDetails": {
          "type": "object",
          "title": "serviceDetails",
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Service name",
              "order": 1
            },
            "status": {
              "type": "string",
              "title": "Status",
              "description": "Status of a service on an endpoint. The following values are allowed: running, stopped, missing",
              "order": 2
            }
          }
        }
      }
    },
    "threats": {
      "type": "object",
      "title": "threats",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Health status of an endpoint or a service running on an endpoint. The following values are allowed: good, suspicious, bad, unknown",
          "order": 1
        }
      }
    },
    "volume": {
      "type": "object",
      "title": "volume",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Endpoint volume encryption status. The following values are allowed: notEncrypted, encrypted, encrypting, notSupported, suspended, unknown",
          "order": 2
        },
        "volumeId": {
          "type": "string",
          "title": "Volume ID",
          "description": "Endpoint volume ID",
          "order": 1
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
