# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get endpoint groups"


class Input:
    ENDPOINTIDS = "endpointIds"
    FIELDS = "fields"
    GROUPTYPE = "groupType"
    IDS = "ids"
    PAGE = "page"
    PAGESIZE = "pageSize"
    PAGETOTAL = "pageTotal"
    SEARCH = "search"
    SEARCHFIELDS = "searchFields"
    SORT = "sort"
    

class Output:
    ENDPOINTGROUPS = "endpointGroups"
    PAGES = "pages"
    

class GetEndpointGroupsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "endpointIds": {
      "type": "array",
      "title": "Endpoint IDs",
      "description": "Endpoint IDs. Must contain at most 50 items that must be unique",
      "items": {
        "type": "string"
      },
      "order": 10
    },
    "fields": {
      "type": "array",
      "title": "Fields",
      "description": "The fields to return in a partial response",
      "items": {
        "type": "string"
      },
      "order": 3
    },
    "groupType": {
      "type": "string",
      "title": "Group Type",
      "description": "Endpoint group type. The following values are allowed: all, computer, server",
      "default": "all",
      "enum": [
        "all",
        "computer",
        "server"
      ],
      "order": 1
    },
    "ids": {
      "type": "array",
      "title": "Endpoint Group IDs",
      "description": "Endpoint group IDs to match. Must contain at most 50 items that must be unique",
      "items": {
        "type": "string"
      },
      "order": 7
    },
    "page": {
      "type": "integer",
      "title": "Page",
      "description": "The page number to fetch",
      "default": 1,
      "order": 4
    },
    "pageSize": {
      "type": "integer",
      "title": "Page Size",
      "description": "The size of the page requested",
      "default": 50,
      "order": 6
    },
    "pageTotal": {
      "type": "boolean",
      "title": "Page Total",
      "description": "Whether the number of pages should be calculated and returned in the response",
      "order": 5
    },
    "search": {
      "type": "string",
      "title": "Search",
      "description": "Term to search for in the specified search fields",
      "order": 8
    },
    "searchFields": {
      "type": "array",
      "title": "Search Fields",
      "description": "Search your specified fields. The default is to search group names only. The following values are allowed: name, description",
      "items": {
        "type": "string"
      },
      "order": 9
    },
    "sort": {
      "type": "array",
      "title": "Sort",
      "description": "Sort criteria for endpoint groups. Valid sort fields are id, name, createdAt, and updatedAt. You can append ':asc' or ':desc' to each field to specify the sort direction. The default sort direction for each field is unspecified",
      "items": {
        "type": "string"
      },
      "order": 2
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetEndpointGroupsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "endpointGroups": {
      "type": "array",
      "title": "Endpoint Groups",
      "description": "List of endpoint groups",
      "items": {
        "$ref": "#/definitions/endpointGroup"
      },
      "order": 1
    },
    "pages": {
      "$ref": "#/definitions/pages",
      "title": "Pages",
      "description": "Pages details",
      "order": 2
    }
  },
  "definitions": {
    "endpointGroup": {
      "type": "object",
      "title": "endpointGroup",
      "properties": {
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "When the group was created",
          "order": 7
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Endpoint group description",
          "order": 3
        },
        "endpoints": {
          "$ref": "#/definitions/endpoints",
          "title": "Endpoints",
          "description": "Associated endpoints",
          "order": 5
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Endpoint group ID",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Endpoint group name",
          "order": 2
        },
        "tenant": {
          "$ref": "#/definitions/objectId",
          "title": "Tenant",
          "description": "Reference to a tenant",
          "order": 6
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Endpoint group type",
          "order": 4
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "When the group was last updated",
          "order": 8
        }
      },
      "definitions": {
        "endpointObject": {
          "type": "object",
          "title": "endpointObject",
          "properties": {
            "hostname": {
              "type": "string",
              "title": "Hostname",
              "description": "Endpoint hostname",
              "order": 2
            },
            "id": {
              "type": "string",
              "title": "ID",
              "description": "Unique endpoint ID",
              "order": 1
            }
          }
        },
        "endpoints": {
          "type": "object",
          "title": "endpoints",
          "properties": {
            "items": {
              "type": "array",
              "title": "Items",
              "description": "List of endpoints belonging to the group",
              "items": {
                "$ref": "#/definitions/endpointObject"
              },
              "order": 3
            },
            "itemsCount": {
              "type": "integer",
              "title": "Items Count",
              "description": "Total number of items in the list",
              "order": 2
            },
            "total": {
              "type": "integer",
              "title": "Total",
              "description": "Total number of endpoints in this group",
              "order": 1
            }
          },
          "definitions": {
            "endpointObject": {
              "type": "object",
              "title": "endpointObject",
              "properties": {
                "hostname": {
                  "type": "string",
                  "title": "Hostname",
                  "description": "Endpoint hostname",
                  "order": 2
                },
                "id": {
                  "type": "string",
                  "title": "ID",
                  "description": "Unique endpoint ID",
                  "order": 1
                }
              }
            }
          }
        },
        "objectId": {
          "type": "object",
          "title": "objectId",
          "properties": {
            "id": {
              "type": "string",
              "title": "ID",
              "description": "The ID of the referenced object",
              "order": 1
            }
          }
        }
      }
    },
    "endpointObject": {
      "type": "object",
      "title": "endpointObject",
      "properties": {
        "hostname": {
          "type": "string",
          "title": "Hostname",
          "description": "Endpoint hostname",
          "order": 2
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique endpoint ID",
          "order": 1
        }
      }
    },
    "endpoints": {
      "type": "object",
      "title": "endpoints",
      "properties": {
        "items": {
          "type": "array",
          "title": "Items",
          "description": "List of endpoints belonging to the group",
          "items": {
            "$ref": "#/definitions/endpointObject"
          },
          "order": 3
        },
        "itemsCount": {
          "type": "integer",
          "title": "Items Count",
          "description": "Total number of items in the list",
          "order": 2
        },
        "total": {
          "type": "integer",
          "title": "Total",
          "description": "Total number of endpoints in this group",
          "order": 1
        }
      },
      "definitions": {
        "endpointObject": {
          "type": "object",
          "title": "endpointObject",
          "properties": {
            "hostname": {
              "type": "string",
              "title": "Hostname",
              "description": "Endpoint hostname",
              "order": 2
            },
            "id": {
              "type": "string",
              "title": "ID",
              "description": "Unique endpoint ID",
              "order": 1
            }
          }
        }
      }
    },
    "objectId": {
      "type": "object",
      "title": "objectId",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The ID of the referenced object",
          "order": 1
        }
      }
    },
    "pages": {
      "type": "object",
      "title": "pages",
      "properties": {
        "current": {
          "type": "integer",
          "title": "Current",
          "description": "The 1-based page number being returned",
          "order": 1
        },
        "items": {
          "type": "integer",
          "title": "Items",
          "description": "The total number of items across all pages, if pageTotal=true was passed into the request",
          "order": 4
        },
        "maxSize": {
          "type": "integer",
          "title": "Max Size",
          "description": "The maximum page size that can be requested",
          "order": 5
        },
        "size": {
          "type": "integer",
          "title": "Size",
          "description": "The size of the page being returned",
          "order": 2
        },
        "total": {
          "type": "integer",
          "title": "Total",
          "description": "The total number of pages that exist, if pageTotal=true in the request",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
