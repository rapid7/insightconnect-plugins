# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get a list of blocked items"


class Input:
    PAGE = "page"
    PAGESIZE = "pageSize"
    PAGETOTAL = "pageTotal"
    

class Output:
    ITEMS = "items"
    PAGES = "pages"
    

class GetBlockedItemsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "page": {
      "type": "integer",
      "title": "Page",
      "description": "The page number to fetch, starting with 1",
      "default": 1,
      "order": 1
    },
    "pageSize": {
      "type": "integer",
      "title": "Page Size",
      "description": "The size of the page requested",
      "default": 50,
      "order": 2
    },
    "pageTotal": {
      "type": "boolean",
      "title": "Page Total",
      "description": "Whether the number of pages should be calculated and returned in the response",
      "default": false,
      "order": 3
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetBlockedItemsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "items": {
      "type": "array",
      "title": "Items",
      "description": "List of blocked items",
      "items": {
        "$ref": "#/definitions/item"
      },
      "order": 1
    },
    "pages": {
      "$ref": "#/definitions/pages",
      "title": "Pages",
      "description": "Pages details",
      "order": 2
    }
  },
  "definitions": {
    "item": {
      "type": "object",
      "title": "item",
      "properties": {
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "Comment indicating why the item was blocked or allowed",
          "order": 5
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Date and time (UTC) when the item was created",
          "order": 2
        },
        "createdBy": {
          "$ref": "#/definitions/userObject",
          "title": "Created By",
          "description": "Created by",
          "order": 7
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Item ID",
          "order": 1
        },
        "originEndpoint": {
          "$ref": "#/definitions/objectId",
          "title": "Origin Endpoint",
          "description": "Represents a referenced object",
          "order": 9
        },
        "originPerson": {
          "$ref": "#/definitions/userObject",
          "title": "Origin Person",
          "description": "Origin person",
          "order": 8
        },
        "properties": {
          "$ref": "#/definitions/properties",
          "title": "Properties",
          "description": "Item properties",
          "order": 4
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Property by which an item is blocked or allowed",
          "order": 6
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Date and time (UTC) when the item was updated",
          "order": 3
        }
      },
      "definitions": {
        "objectId": {
          "type": "object",
          "title": "objectId",
          "properties": {
            "id": {
              "type": "string",
              "title": "ID",
              "description": "The ID of the referenced object",
              "order": 1
            }
          }
        },
        "properties": {
          "type": "object",
          "title": "properties",
          "properties": {
            "certificateSigner": {
              "type": "string",
              "title": "Certificate Signer",
              "description": "Value saved for the certificateSigner",
              "order": 4
            },
            "fileName": {
              "type": "string",
              "title": "File Name",
              "description": "File name",
              "order": 1
            },
            "path": {
              "type": "string",
              "title": "Path",
              "description": "Path for the application",
              "order": 2
            },
            "sha256": {
              "type": "string",
              "title": "SHA256",
              "description": "SHA256 value for the application",
              "order": 3
            }
          }
        },
        "userObject": {
          "type": "object",
          "title": "userObject",
          "properties": {
            "id": {
              "type": "string",
              "title": "ID",
              "description": "Unique ID for the user",
              "order": 1
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Person's name",
              "order": 2
            }
          }
        }
      }
    },
    "objectId": {
      "type": "object",
      "title": "objectId",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The ID of the referenced object",
          "order": 1
        }
      }
    },
    "pages": {
      "type": "object",
      "title": "pages",
      "properties": {
        "current": {
          "type": "integer",
          "title": "Current",
          "description": "The 1-based page number being returned",
          "order": 1
        },
        "items": {
          "type": "integer",
          "title": "Items",
          "description": "The total number of items across all pages, if pageTotal=true was passed into the request",
          "order": 4
        },
        "maxSize": {
          "type": "integer",
          "title": "Max Size",
          "description": "The maximum page size that can be requested",
          "order": 5
        },
        "size": {
          "type": "integer",
          "title": "Size",
          "description": "The size of the page being returned",
          "order": 2
        },
        "total": {
          "type": "integer",
          "title": "Total",
          "description": "The total number of pages that exist, if pageTotal=true in the request",
          "order": 3
        }
      }
    },
    "properties": {
      "type": "object",
      "title": "properties",
      "properties": {
        "certificateSigner": {
          "type": "string",
          "title": "Certificate Signer",
          "description": "Value saved for the certificateSigner",
          "order": 4
        },
        "fileName": {
          "type": "string",
          "title": "File Name",
          "description": "File name",
          "order": 1
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Path for the application",
          "order": 2
        },
        "sha256": {
          "type": "string",
          "title": "SHA256",
          "description": "SHA256 value for the application",
          "order": 3
        }
      }
    },
    "userObject": {
      "type": "object",
      "title": "userObject",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique ID for the user",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Person's name",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
