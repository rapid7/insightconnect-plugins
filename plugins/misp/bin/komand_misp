#!/usr/bin/env python
# GENERATED BY KOMAND SDK - DO NOT EDIT
import os
import json
from sys import argv

Name = "MISP"
Vendor = "rapid7"
Version = "5.0.1"
Description = "MISP is an open source threat sharing platform"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_misp import connection, actions, triggers

    class ICONMisp(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_trigger(triggers.SearchForTag())

            self.add_action(actions.AddAttachment())

            self.add_action(actions.AddAttribute())

            self.add_action(actions.AddContext())

            self.add_action(actions.AddEmailRecipient())

            self.add_action(actions.AddEmailSender())

            self.add_action(actions.AddEmailSubject())

            self.add_action(actions.AddSightings())

            self.add_action(actions.AddTag())

            self.add_action(actions.AddUrls())

            self.add_action(actions.CreateAnEvent())

            self.add_action(actions.DownloadAttachment())

            self.add_action(actions.ExportAttributes())

            self.add_action(actions.ExportEvents())

            self.add_action(actions.ExportHashes())

            self.add_action(actions.ExportRpz())

            self.add_action(actions.ExportRules())

            self.add_action(actions.ExportStix())

            self.add_action(actions.FindEvent())

            self.add_action(actions.Publish())

            self.add_action(actions.RemoveTag())

            self.add_action(actions.SearchEvents())


    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONMisp())
    cli.run()


if __name__ == "__main__":
    main()
