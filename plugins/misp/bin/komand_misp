#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "MISP"
Vendor = "rapid7"
Version = "6.0.0"
Description = "[MISP](http://www.misp-project.org/) is an open source threat sharing platform. Gather, store and then find correlations of indicators of compromise. Quality of data is determined by the open source community. This plugin utilizes the [MISP API](https://circl.lu/doc/misp/automation/index.html) and leverages the [pymisp](https://github.com/CIRCL/PyMISP) library"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_misp import connection, actions, triggers, tasks

    class ICONMisp(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_trigger(triggers.SearchForTag())
        
            self.add_action(actions.CreateAnEvent())
        
            self.add_action(actions.AddSighting())
        
            self.add_action(actions.AddTag())
        
            self.add_action(actions.ExportEvents())
        
            self.add_action(actions.ExportAttributes())
        
            self.add_action(actions.ExportRules())
        
            self.add_action(actions.ExportStix())
        
            self.add_action(actions.ExportRpz())
        
            self.add_action(actions.FindEvent())
        
            self.add_action(actions.RemoveTag())
        
            self.add_action(actions.AddAttribute())
        
            self.add_action(actions.SearchEvents())
        
            self.add_action(actions.Publish())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONMisp())
    cli.run()


if __name__ == "__main__":
    main()
