# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Export events in STIX format"


class Input:
    ENCODE_ATTACHMENTS = "encode_attachments"
    EVENT_ID = "event_id"
    FROM = "from"
    LAST = "last"
    TAGS = "tags"
    TO = "to"


class Output:
    STIX = "stix"


class ExportStixInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "encode_attachments": {
      "type": "boolean",
      "title": "Encode Attachments",
      "description": "Encode attachments in export",
      "default": true,
      "order": 2
    },
    "event_id": {
      "type": "string",
      "title": "Event ID",
      "description": "Specify single event to export",
      "order": 1
    },
    "from": {
      "type": "string",
      "title": "From Date",
      "description": "From date E.g. 2015-02-15",
      "order": 4
    },
    "last": {
      "type": "string",
      "title": "Last Events",
      "description": "Events within x amount of time E.g. 5d",
      "order": 6
    },
    "tags": {
      "type": "array",
      "title": "Tags",
      "description": "Array of tags to include in results",
      "items": {
        "type": "string"
      },
      "order": 3
    },
    "to": {
      "type": "string",
      "title": "To Date",
      "description": "To date E.g. 2015-02-17",
      "order": 5
    }
  },
  "required": [
    "encode_attachments"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ExportStixOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "stix": {
      "type": "string",
      "format": "bytes",
      "displayType": "bytes",
      "title": "STIX Output",
      "description": "STIX output",
      "order": 1
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
