plugin_spec_version: v2
extension: plugin
products: ["insightconnect"]
name: extractit
title: ExtractIt
description: The ExtractIt plugin has a collection of actions used to extract various information from text. These include URLs, domains, emails, IPs, and more
version: 3.0.7
vendor: rapid7
support: rapid7
supported_versions: ["2022-10-19"]
status: []
cloud_ready: true
resources:
  vendor_url: https://www.rapid7.com
tags:
- extract
- extractor
- MD5
- SHA
hub_tags:
  use_cases: [threat_detection_and_response, data_utility]
  keywords: [extraction, domains, email, url, ip_address, ioc, cloud_enabled]
  features: []
sdk:
  type: full
  version: 5
  user: nobody
types:
  hashes:
    md5_hashes:
      title: MD5 Hashes
      description: Extracted MD5 Hashes from message
      type: "[]string"
      required: false
    sha1_hashes:
      title: SHA1 Hashes
      description: Extracted SHA1 hashes from message
      type: "[]string"
      required: false
    sha256_hashes:
      title: SHA256 Hashes
      description: Extracted SHA256 hashes from message
      type: "[]string"
      required: false
    sha512_hashes:
      title: SHA512 Hashes
      description: Extracted SHA512 hashes from message
      type: "[]string"
      required: false
  ip_addresses:
    ipv4_addresses:
      title: IPv4 Addressses
      description: Extracted IPv4 addressses from message
      type: "[]string"
      required: false
    ipv6_addresses:
      title: IPv6 Addressses
      description: Extracted IPv6 addresses from message
      type: "[]string"
      required: false
  indicators:
    domains:
      title: Domains
      description: Extracted domains from message
      type: "[]string"
      required: false
    dates:
      title: Dates
      description: Extracted dates from message
      type: "[]string"
      required: false
    filepaths:
      title: Filepaths
      description: Extracted filepaths from message
      type: "[]string"
      required: false
    urls:
      title: URLs
      description: Extracted URLs from message
      type: "[]string"
      required: false
    email_addresses:
      title: Email Addresses
      description: Extracted email addresses from message
      type: "[]string"
      required: false
    hashes:
      title: Hashes
      description: Extracted hashes from message
      type: hashes
      required: false
    ip_addresses:
      title: IP Addressses
      description: Extracted IP addresses from message
      type: ip_addresses
      required: false
    mac_addresses:
      title: MAC Addresses
      description: Extracted MAC addresses from message
      type: "[]string"
      required: false
    cves:
      title: CVEs
      description: Extracted CVEs from message
      type: "[]string"
      required: false
    uuids:
      title: UUIDs
      description: Extracted UUIDs from message
      type: "[]string"
      required: false
actions:
  url_extractor:
    title: URL Extractor
    description: Extract URLs from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: https://example.com is an example URL
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: aHR0cHM6Ly9leGFtcGxlLmNvbSBpcyBhbiBleGFtcGxlIFVSTA==
      keep_original_urls:
        title: Keep Original URLs
        description: "Retain original URL encoding, if applicable, e.g: if true: http://foo.bar/?q=Test%20URL-encoded%20stuff will be extracted as http://foo.bar/?q=Test%20URL-encoded%20stuff. If false, http://foo.bar/?q=Test%20URL-encoded%20stuff will be extracted as http://foo.bar/?q=Test because %20 is decoded as a space"
        type: boolean
        required: false
        example: false
        default: false
    output:
      urls:
        title: URLs
        description: List of extracted URLs
        type: '[]string'
        required: false
        example: '["https://example.com"]'
  ip_extractor:
    title: IP Extractor
    description: Extracts all IPv4 and IPv6 addresses from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: 198.51.100.100 and 2001:db8:8:4::2 are sample IP addresses
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: MTk4LjUxLjEwMC4xMDAgYW5kIDIwMDE6ZGI4Ojg6NDo6MiBhcmUgc2FtcGxlIElQIGFkZHJlc3Nlcw==
    output:
      ip_addrs:
        title: IP Addresses
        description: List of extracted IP Addresses
        type: '[]string'
        required: false
        example: '["198.51.100.100", "2001:db8:8:4::2"]'
  email_extractor:
    title: Email Extractor
    description: Extracts all email addresses from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: user@example.com is an example email
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: dXNlckBleGFtcGxlLmNvbSBpcyBhbiBleGFtcGxlIGVtYWls
    output:
      emails:
        title: Email Addresses
        description: List of extracted Email Addresses
        type: '[]string'
        required: false
        example: '["user@example.com"]'
  mac_extractor:
    title: MAC Extractor
    description: Extracts all MAC addresses from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: 00:14:22:01:23:45 is an example MAC address
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: MDA6MTQ6MjI6MDE6MjM6NDUgaXMgYW4gZXhhbXBsZSBNQUMgYWRkcmVzcw==
    output:
      mac_addrs:
        title: MAC Addresses
        description: List of extracted MAC Addresses
        type: '[]string'
        required: false
        example: '["00:14:22:01:23:45"]'
  domain_extractor:
    title: Domain Extractor
    description: Extracts all domain names from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: example.com is an example domain
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODF, TXT, ZIP
        type: bytes
        required: false
        example: ZXhhbXBsZS5jb20gaXMgYW4gZXhhbXBsZSBkb21haW4=
      subdomain:
        title: Subdomain
        description: Include subdomain in result
        type: bool
        required: true
        example: false
    output:
      domains:
        title: Domain Names
        description: List of extracted Domain names
        type: '[]string'
        required: false
        example: '["example.com"]'
  filepath_extractor:
    title: File Path Extractor
    description: Extracts all file paths from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: /tmp/image.jpg is an example file path
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: L3RtcC9pbWFnZS5qcGcgaXMgYW4gZXhhbXBsZSBmaWxlIHBhdGg=
    output:
      filepaths:
        title: File Paths
        description: List of extracted file paths
        type: '[]string'
        required: false
        example: '["/tmp/image.jpg"]'
  date_extractor:
    title: Date Extractor
    description: Extracts all dates from a string or file
    input:
      date_format:
        title: Date Format
        description: Dates matching this format are extracted - If All Formats is selected, found dates will be processed in the listed order documented
        type: string
        required: true
        enum:
          - dd/mm/yyyy
          - mm/dd/yyyy
          - dd\mm\yyyy
          - dd.mm.yyyy
          - dd-mm-yyyy
          - dd.mm.yy
          - dd-mm-yy
          - dd/mm/yy
          - dd\mm\yy
          - mm\dd\yyyy
          - mm.dd.yyyy
          - mm-dd-yyyy
          - mm/dd/yy
          - mm\dd\yy
          - mm.dd.yy
          - mm-dd-yy
          - dd/mmm/yyyy
          - dd\mmm\yyyy
          - dd.mmm.yyyy
          - dd-mmm-yyyy
          - dd/mmm/yy
          - dd\mmm\yy
          - dd.mmm.yy
          - dd-mmm-yy
          - yyyy.mm.dd
          - yyyy-mm-dd
          - yyyy/mm/dd
          - yyyy\mm\dd
          - yyyy.mmm.dd
          - yyyy-mmm-dd
          - yyyy/mmm/dd
          - yyyy\mmm\dd
          - yy.mm.dd
          - yy-mm-dd
          - yy/mm/dd
          - yy\mm\dd
          - yyyy-mm-ddThh:mm
          - yyyy-mm-ddThh:mm:ss
          - All Formats
          - ""
        example: dd/mm/yyyy
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: 05/12/1982 is an example date
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: MDUvMTIvMTk4MiBpcyBhbiBleGFtcGxlIGRhdGU=
    output:
      dates:
        title: Dates
        description: List of extracted dates
        type: '[]date'
        required: false
        example: '["1982-12-05T00:00:00Z"]'
  ioc_extractor:
    title: IOC Extractor
    description: Extracts all Indicators of Compromise from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: user@example.com, 198.51.100.100 and 44d88612fea8a8f36de82e1278abb02f are IOC examples
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: dXNlckBleGFtcGxlLmNvbSwgMTk4LjUxLjEwMC4xMDAgYW5kIDQ0ZDg4NjEyZmVhOGE4ZjM2ZGU4MmUxMjc4YWJiMDJmIGFyZSBJT0MgZXhhbXBsZXM=
    output:
      iocs:
        title: Indicators of Compromise
        description: List of extracted Indicators of Compromise
        type: '[]string'
        required: false
        example: '["example.com", "user@example.com", "198.51.100.100", "44d88612fea8a8f36de82e1278abb02f"]'
  md5_extractor:
    title: MD5 Hash Extractor
    description: Extracts all MD5 Hashes from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: 44d88612fea8a8f36de82e1278abb02f is an example MD5 hash
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: NDRkODg2MTJmZWE4YThmMzZkZTgyZTEyNzhhYmIwMmYgaXMgYW4gZXhhbXBsZSBNRDUgaGFzaA==
    output:
      md5:
        title: MD5 Hash
        description: List of extracted MD5 Hashes
        type: '[]string'
        required: false
        example: '["44d88612fea8a8f36de82e1278abb02f"]'
  sha1_extractor:
    title: SHA1 Hash Extractor
    description: Extracts all SHA1 Hashes from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: 3395856ce81f2b7382dee72602f798b642f14140 is an example SHA1 hash
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: MzM5NTg1NmNlODFmMmI3MzgyZGVlNzI2MDJmNzk4YjY0MmYxNDE0MCBpcyBhbiBleGFtcGxlIFNIQTEgaGFzaA==
    output:
      sha1:
        title: SHA1 Hash
        description: List of extracted SHA1 Hashes
        type: '[]string'
        required: false
        example: '["3395856ce81f2b7382dee72602f798b642f14140"]'
  sha256_extractor:
    title: SHA256 Hash Extractor
    description: Extracts all SHA256 Hashes from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: 275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f is an example SHA256 hash
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: Mjc1YTAyMWJiZmI2NDg5ZTU0ZDQ3MTg5OWY3ZGI5ZDE2NjNmYzY5NWVjMmZlMmEyYzQ1MzhhYWJmNjUxZmQwZiBpcyBhbiBleGFtcGxlIFNIQTI1NiBoYXNo
    output:
      sha256:
        title: SHA256 Hash
        description: List of extracted SHA256 Hashes
        type: '[]string'
        required: false
        example: '["275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f"]'
  sha512_extractor:
    title: SHA512 Hash Extractor
    description: Extracts all SHA512 Hashes from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: cc805d5fab1fd71a4ab352a9c533e65fb2d5b885518f4e565e68847223b8e6b85cb48f3afad842726d99239c9e36505c64b0dc9a061d9e507d833277ada336ab is an example SHA512 hash
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: Y2M4MDVkNWZhYjFmZDcxYTRhYjM1MmE5YzUzM2U2NWZiMmQ1Yjg4NTUxOGY0ZTU2NWU2ODg0NzIyM2I4ZTZiODVjYjQ4ZjNhZmFkODQyNzI2ZDk5MjM5YzllMzY1MDVjNjRiMGRjOWEwNjFkOWU1MDdkODMzMjc3YWRhMzM2YWIgaXMgYW4gZXhhbXBsZSBTSEE1MTIgaGFzaA==
    output:
      sha512:
        title: SHA512 Hash
        description: List of extracted SHA512 Hashes
        type: '[]string'
        required: false
        example: '["cc805d5fab1fd71a4ab352a9c533e65fb2d5b885518f4e565e68847223b8e6b85cb48f3afad842726d99239c9e36505c64b0dc9a061d9e507d833277ada336ab"]'
  cve_extractor:
    title: CVE Extractor
    description: Extracts all CVEs from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: Test string of extract CVE-1234-1234567 2012/12/12
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: dGVzdCBzdHJpbmcgb2YgZXh0cmFjdCBDVkUtMTIzNC0xMjM0NTY3IDIwMTIvMTIvMTI=
    output:
      cves:
        title: CVEs
        description: List of extracted CVEs
        type: '[]string'
        required: false
        example: '["CVE-1234-1234567"]'
  uuid_extractor:
    title: UUID Extractor
    description: Extracts all UUIDs from a string or file
    input:
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: Test string of extract 123e4567-e12b-34c3-a456-426789124000
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: VGVzdCBzdHJpbmcgb2YgZXh0cmFjdCAxMjNlNDU2Ny1lMTJiLTM0YzMtYTQ1Ni00MjY3ODkxMjQwMDA=
    output:
      uuids:
        title: UUIDs
        description: List of extracted UUIDs
        type: '[]string'
        required: false
        example: '["123e4567-e12b-34c3-a456-426789124000"]'
  extract_all:
    title: Extract All
    description: Extracts all UUIDs, CVEs, dates, domains, emails, filepaths, IOCs, IPs, MACs, MD5 hashes, SHA1 hashes, SHA256 hashes, SHA 512 hashes and URLs from a string or file
    input:
      date_format:
        title: Date Format
        description: Dates matching this format are extracted - If All Formats is selected, found dates will be processed in the listed order documented
        type: string
        required: true
        enum:
          - dd/mm/yyyy
          - mm/dd/yyyy
          - dd\mm\yyyy
          - dd.mm.yyyy
          - dd-mm-yyyy
          - dd.mm.yy
          - dd-mm-yy
          - dd/mm/yy
          - dd\mm\yy
          - mm\dd\yyyy
          - mm.dd.yyyy
          - mm-dd-yyyy
          - mm/dd/yy
          - mm\dd\yy
          - mm.dd.yy
          - mm-dd-yy
          - dd/mmm/yyyy
          - dd\mmm\yyyy
          - dd.mmm.yyyy
          - dd-mmm-yyyy
          - dd/mmm/yy
          - dd\mmm\yy
          - dd.mmm.yy
          - dd-mmm-yy
          - yyyy.mm.dd
          - yyyy-mm-dd
          - yyyy/mm/dd
          - yyyy\mm\dd
          - yyyy.mmm.dd
          - yyyy-mmm-dd
          - yyyy/mmm/dd
          - yyyy\mmm\dd
          - yy.mm.dd
          - yy-mm-dd
          - yy/mm/dd
          - yy\mm\dd
          - yyyy-mm-ddThh:mm
          - yyyy-mm-ddThh:mm:ss
          - All Formats
          - ""
        example: dd/mm/yyyy
      str:
        title: String
        description: Input string
        type: string
        required: false
        example: test string of extract CVE-1234-1234567 12/12/2312 123e4567-e12b-34c3-a456-426789124000 user@example.com 3395856ce81f2b7382dee72602f798b642f14140 275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f 198.51.100.0/24 1.1.1.1
      file:
        title: File
        description: Input file as bytes, supports text and binary file types such as PDF, DOCX, XLSX, PPTX, ODT, ODP, ODS
        type: bytes
        required: false
        example: dGVzdCBzdHJpbmcgb2YgZXh0cmFjdCBDVkUtMTIzNC0xMjM0NTY3IDEyLzEyLzIzMTIgMTIzZTQ1NjctZTEyYi0zNGMzLWE0NTYtNDI2Nzg5MTI0MDAwIHVzZXJAZXhhbXBsZS5jb20gMzM5NTg1NmNlODFmMmI3MzgyZGVlNzI2MDJmNzk4YjY0MmYxNDE0MCAyNzVhMDIxYmJmYjY0ODllNTRkNDcxODk5ZjdkYjlkMTY2M2ZjNjk1ZWMyZmUyYTJjNDUzOGFhYmY2NTFmZDBmIDE5OC41MS4xMDAuMC8yNCAxLjEuMS4x
    output:
      indicators:
        title: Indicators
        description: List of extracted indicators
        type: indicators
        required: false
        example: '{"indicators": {"cves":["CVE-1234-1234567"],"dates":["2312-12-12T00:00:00Z"],"email_addresses":["user@example.com"],"filepaths":["/24"],"mac_addresses":[],"hashes":{"md5_hashes":[],"sha1_hashes":["3395856ce81f2b7382dee72602f798b642f14140"],"sha256_hashes":["275a021bbfb6489e54d471899f7db9d1663fc695ec2fe2a2c4538aabf651fd0f"],"sha512_hashes":[]},"ip_addresses":{"ipv4_addresses":["198.51.100.0","1.1.1.1"],"ipv6_addresses":[]},"urls":[],"uuids":["123e4567-e12b-34c3-a456-426789124000"],"domains":["example.com"]}}'