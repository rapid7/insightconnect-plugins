# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "The pattern search functionality in Investigate uses regular expressions (RegEx) to search against the Investigate database"


class Input:
    EXPRESSION = "expression"
    INCLUDE_CATEGORY = "include_category"
    LIMIT = "limit"
    START = "start"
    

class Output:
    EXPRESSION = "expression"
    LIMIT = "limit"
    MATCHES = "matches"
    MOREDATAAVAILABLE = "moreDataAvailable"
    TOTALRESULTS = "totalResults"
    

class SearchInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "expression": {
      "type": "string",
      "title": "Expression",
      "description": "A standard RegEx pattern search",
      "order": 1
    },
    "include_category": {
      "type": "boolean",
      "title": "Include Category",
      "description": "Default is false, if set to true this will include security categories in the results and may slow the return times",
      "order": 3
    },
    "limit": {
      "type": "integer",
      "title": "Request Limit",
      "description": "Default is 1000, limit request response",
      "order": 4
    },
    "start": {
      "type": "string",
      "title": "Start",
      "description": "If specifying in absolute, use millisecond timestamp within the last 30 days as the Start. If specifying in relative, use either seconds, minutes, hours, days or weeks with a minus sign in front. As an example -1days, -1000minutes",
      "order": 2
    }
  },
  "required": [
    "expression",
    "start"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "expression": {
      "type": "string",
      "title": "Expression",
      "description": "This is the RegEx in the query as seen from the API. If results from your query do not match what you may have expected, check to see that the RegEx matches the one you tried to enter and that characters are correctly escaped in the query string",
      "order": 1
    },
    "limit": {
      "type": "integer",
      "title": "Limit",
      "description": "Default is 100, can be expanded to 1000 which is the maximum number of results for this endpoint",
      "order": 4
    },
    "matches": {
      "type": "array",
      "title": "Matches",
      "description": "Each match will contain the name of the domain matches, the and the first seen time, both in Epoch and ISO time format. This endpoint returns the security categories as strings rather than integers (eg: 'malware','botnet', etc) if includeCategory is true",
      "order": 5
    },
    "moreDataAvailable": {
      "type": "boolean",
      "title": "More Data Available",
      "description": "Whether more data is available than what is displayed. Will be true if totalResults exceed limit. We recommend refining your filter if this value is true",
      "order": 3
    },
    "totalResults": {
      "type": "integer",
      "title": "Total Results",
      "description": "Total results from this search string. The default number of results is 100 and can be expanded using the limit parameter",
      "order": 2
    }
  },
  "required": [
    "expression",
    "limit",
    "matches",
    "moreDataAvailable",
    "totalResults"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
