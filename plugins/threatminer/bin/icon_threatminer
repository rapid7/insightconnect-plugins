#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "Threat Miner"
Vendor = "rapid7"
Version = "3.0.0"
Description = "Threat Miner is an open source search engine for fast threat intelligence research and pivoting with context. With the Threat Miner plugin for Rapid7 InsightConnect, users can lookup various pieces of information for threat intelligence gathering"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from icon_threatminer import connection, actions, triggers, tasks

    class ICONThreatminer(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.AvReport())
        
            self.add_action(actions.Domain())
        
            self.add_action(actions.DomainExt())
        
            self.add_action(actions.Ip())
        
            self.add_action(actions.IpExt())
        
            self.add_action(actions.Samples())
        
            self.add_action(actions.ImportHashReport())
        
            self.add_action(actions.ImportHashSamples())
        
            self.add_action(actions.SsdeepReport())
        
            self.add_action(actions.SsdeepSample())
        
            self.add_action(actions.SslHosts())
        
            self.add_action(actions.SslReport())
        
            self.add_action(actions.EmailDomain())
        
            self.add_action(actions.EmailReport())
        
            self.add_action(actions.AvSample())
        
            self.add_action(actions.Report())
        
            self.add_action(actions.Search())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONThreatminer())
    cli.run()


if __name__ == "__main__":
    main()
