# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Update a FreshDesk ticket"


class Input:
    ATTACHMENTS = "attachments"
    COMPANYID = "companyId"
    CUSTOMFIELDS = "customFields"
    DESCRIPTION = "description"
    DUEBY = "dueBy"
    EMAIL = "email"
    EMAILCONFIGID = "emailConfigId"
    FRDUEBY = "frDueBy"
    GROUPID = "groupId"
    INTERNALAGENTID = "internalAgentId"
    INTERNALGROUPID = "internalGroupId"
    NAME = "name"
    PHONE = "phone"
    PRIORITY = "priority"
    PRODUCTID = "productId"
    RELATEDTICKETIDS = "relatedTicketIds"
    REQUESTERID = "requesterId"
    RESPONDERID = "responderId"
    SOURCE = "source"
    STATUS = "status"
    SUBJECT = "subject"
    TAGS = "tags"
    TICKETID = "ticketId"
    TWITTERID = "twitterId"
    TYPE = "type"
    UNIQUEEXTERNALID = "uniqueExternalId"


class Output:
    TICKET = "ticket"


class UpdateTicketInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "attachments": {
      "type": "array",
      "title": "Attachments",
      "description": "Ticket attachments. The total size of these attachments cannot exceed 20MB",
      "items": {
        "$ref": "#/definitions/attachmentInput"
      },
      "order": 14
    },
    "companyId": {
      "type": "integer",
      "title": "Company ID",
      "description": "Company ID of the requester. This attribute can only be set if the Multiple Companies feature is enabled (Estate plan and above)",
      "order": 23
    },
    "customFields": {
      "type": "object",
      "title": "Custom Fields",
      "description": "Key value pairs containing the names and values of custom fields. Read more at https://support.freshdesk.com/support/solutions/articles/216548",
      "order": 15
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "HTML content of the ticket",
      "order": 13
    },
    "dueBy": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Due By",
      "description": "Timestamp that denotes when the ticket is due to be resolved",
      "order": 16
    },
    "email": {
      "type": "string",
      "title": "Email",
      "description": "Email address of the requester. If no contact exists with this email address in FreshDesk, it will be added as a new contact",
      "order": 5
    },
    "emailConfigId": {
      "type": "integer",
      "title": "Email Config ID",
      "description": "ID of email config which is used for this ticket. If productId is given and emailConfigId is not given, product's primary emailConfigId will be set",
      "order": 17
    },
    "frDueBy": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "First Response Due By",
      "description": "Timestamp that denotes when the first response is due",
      "order": 18
    },
    "groupId": {
      "type": "integer",
      "title": "Group ID",
      "description": "ID of the group to which the ticket has been assigned. The default value is the ID of the group that is associated with the given emailConfigId",
      "order": 19
    },
    "internalAgentId": {
      "type": "integer",
      "title": "Internal Agent ID",
      "description": "ID of the internal agent which the ticket should be assigned with. To use this parameter you have to enable `Shared ownership` in Admin > Advanced Ticketing menu",
      "order": 24
    },
    "internalGroupId": {
      "type": "integer",
      "title": "Internal Group ID",
      "description": "ID of the internal group to which the ticket should be assigned with. To use this parameter you have to enable `Shared ownership` in Admin > Advanced Ticketing menu",
      "order": 25
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "Name of the requester",
      "order": 2
    },
    "phone": {
      "type": "string",
      "title": "Phone",
      "description": "Phone number of the requester. If no contact exists with this phone number in FreshDesk, it will be added as a new contact. If the phone number is set and the email address is not, then the name attribute is mandatory",
      "order": 6
    },
    "priority": {
      "type": "string",
      "title": "Priority",
      "description": "Priority of the ticket",
      "order": 12
    },
    "productId": {
      "type": "integer",
      "title": "Product ID",
      "description": "ID of the product to which the ticket is associated. It will be ignored if the emailConfigId attribute is set in the request",
      "order": 20
    },
    "relatedTicketIds": {
      "type": "array",
      "title": "Related Ticket IDs",
      "description": "List of Ticket IDs which needs to be linked to the Tracker being created. To use this parameter you have to enable `Linked tickets` in Admin > Advanced Ticketing menu",
      "items": {
        "type": "integer"
      },
      "order": 26
    },
    "requesterId": {
      "type": "integer",
      "title": "Requester ID",
      "description": "User ID of the requester. For existing contacts, the requesterId can be passed instead of the requester's email",
      "order": 3
    },
    "responderId": {
      "type": "integer",
      "title": "Responder ID",
      "description": "User ID of the responder. For existing contacts, the responderId can be passed instead of the responders's email",
      "order": 4
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "The channel through which the ticket was created",
      "order": 21
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Status of the ticket",
      "order": 11
    },
    "subject": {
      "type": "string",
      "title": "Subject",
      "description": "Subject of the ticket",
      "order": 9
    },
    "tags": {
      "type": "array",
      "title": "Tags",
      "description": "Tags that have been associated with the ticket",
      "items": {
        "type": "string"
      },
      "order": 22
    },
    "ticketId": {
      "type": "integer",
      "title": "Ticket ID",
      "description": "ID of the Ticket",
      "order": 1
    },
    "twitterId": {
      "type": "string",
      "title": "Twitter ID",
      "description": "Twitter handle of the requester. If no contact exists with this handle in FreshDesk, it will be added as a new contact",
      "order": 7
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "Helps categorize the ticket according to the different kinds of issues your support team deals with",
      "order": 10
    },
    "uniqueExternalId": {
      "type": "string",
      "title": "Unique External ID",
      "description": "External ID of the requester. If no contact exists with this external ID in FreshDesk, they will be added as a new contact",
      "order": 8
    }
  },
  "required": [
    "ticketId"
  ],
  "definitions": {
    "attachmentInput": {
      "type": "object",
      "title": "attachmentInput",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Attachment name",
          "order": 1
        },
        "content": {
          "type": "string",
          "title": "Content",
          "description": "Base64 encoded content of the attachment",
          "order": 2
        }
      },
      "required": [
        "content",
        "name"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class UpdateTicketOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "ticket": {
      "$ref": "#/definitions/ticket",
      "title": "Ticket",
      "description": "Ticket details",
      "order": 1
    }
  },
  "required": [
    "ticket"
  ],
  "definitions": {
    "ticket": {
      "type": "object",
      "title": "ticket",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the requester",
          "order": 1
        },
        "requesterId": {
          "type": "integer",
          "title": "Requester ID",
          "description": "User ID of the requester",
          "order": 2
        },
        "responderId": {
          "type": "integer",
          "title": "Responder ID",
          "description": "ID of the agent to whom the ticket has been assigned",
          "order": 3
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "Email address of the requester",
          "order": 4
        },
        "phone": {
          "type": "string",
          "title": "Phone",
          "description": "Phone number of the requester",
          "order": 5
        },
        "twitterId": {
          "type": "string",
          "title": "Twitter ID",
          "description": "Twitter handle of the requester",
          "order": 6
        },
        "uniqueExternalId": {
          "type": "string",
          "title": "Unique External ID",
          "description": "External ID of the requester",
          "order": 7
        },
        "subject": {
          "type": "string",
          "title": "Subject",
          "description": "Subject of the ticket",
          "order": 8
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Helps categorize the ticket according to the different kinds of issues your support team deals with",
          "order": 9
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status of the ticket",
          "order": 10
        },
        "priority": {
          "type": "string",
          "title": "Priority",
          "description": "Priority of the ticket",
          "order": 11
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "HTML content of the ticket",
          "order": 12
        },
        "description_text": {
          "type": "string",
          "title": "Description Text",
          "description": "Content of the ticket in plain text",
          "order": 13
        },
        "attachments": {
          "type": "array",
          "title": "Attachments",
          "description": "Ticket attachments. The total size of these attachments cannot exceed 20MB",
          "items": {
            "$ref": "#/definitions/attachmentOutput"
          },
          "order": 14
        },
        "ccEmails": {
          "type": "array",
          "title": "CC Emails",
          "description": "Email address added in the 'CC' field of the incoming ticket email",
          "items": {
            "type": "string"
          },
          "order": 15
        },
        "toEmails": {
          "type": "array",
          "title": "To Emails",
          "description": "Email addresses to which the ticket was originally sent",
          "items": {
            "type": "string"
          },
          "order": 16
        },
        "replyCcEmails": {
          "type": "array",
          "title": "Reply CC Emails",
          "description": "Email address added while replying to a ticket",
          "items": {
            "type": "string"
          },
          "order": 17
        },
        "fwdEmails": {
          "type": "array",
          "title": "Forward Emails",
          "description": "Email address added while forwarding a ticket",
          "items": {
            "type": "string"
          },
          "order": 18
        },
        "customFields": {
          "type": "object",
          "title": "Custom Fields",
          "description": "Key value pairs containing the names and values of custom fields. Read more at https://support.freshdesk.com/support/solutions/articles/216548",
          "order": 19
        },
        "dueBy": {
          "type": "string",
          "title": "Due By",
          "description": "Timestamp that denotes when the ticket is due to be resolved",
          "order": 20
        },
        "emailConfigId": {
          "type": "integer",
          "title": "Email Config ID",
          "description": "ID of email config which is used for this ticket",
          "order": 21
        },
        "frDueBy": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "First Response Due By",
          "description": "Timestamp that denotes when the first response is due",
          "order": 22
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Created At",
          "description": "Ticket creation timestamp",
          "order": 23
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Updated At",
          "description": "Ticket updated timestamp",
          "order": 24
        },
        "frEscalated": {
          "type": "boolean",
          "title": "First Response Escalated",
          "description": "Set to true if the ticket has been escalated as the result of first response time being breached",
          "order": 25
        },
        "groupId": {
          "type": "integer",
          "title": "Group ID",
          "description": "ID of the group to which the ticket has been assigned",
          "order": 26
        },
        "productId": {
          "type": "integer",
          "title": "Product ID",
          "description": "ID of the product to which the ticket is associated",
          "order": 27
        },
        "source": {
          "type": "string",
          "title": "Source",
          "description": "The channel through which the ticket was created",
          "order": 28
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "description": "Tags that have been associated with the ticket",
          "items": {
            "type": "string"
          },
          "order": 29
        },
        "companyId": {
          "type": "integer",
          "title": "Company ID",
          "description": "Company ID of the requester",
          "order": 30
        },
        "internalAgentId": {
          "type": "integer",
          "title": "Internal Agent ID",
          "description": "ID of the internal agent which the ticket should be assigned with",
          "order": 31
        },
        "internalGroupId": {
          "type": "integer",
          "title": "Internal Group ID",
          "description": "ID of the internal group to which the ticket should be assigned with",
          "order": 32
        },
        "associatedTicketsList": {
          "type": "array",
          "title": "Associated Tickets List",
          "description": "List of Ticket IDs which are linked to this ticket",
          "items": {
            "type": "integer"
          },
          "order": 33
        },
        "associationType": {
          "type": "integer",
          "title": "Association Type",
          "description": "Association type, where 1 - Parent, 2 - Child, 3 - Tracker, 4 - Related",
          "order": 34
        },
        "parentId": {
          "type": "integer",
          "title": "Parent ID",
          "description": "ID of the parent ticket under which the child ticket was created",
          "order": 35
        },
        "stats": {
          "$ref": "#/definitions/stats",
          "title": "Stats",
          "description": "Ticket stats",
          "order": 36
        },
        "company": {
          "$ref": "#/definitions/company",
          "title": "Company",
          "description": "Company details",
          "order": 37
        },
        "requester": {
          "$ref": "#/definitions/requester",
          "title": "Requester",
          "description": "Requester details",
          "order": 38
        },
        "conversations": {
          "type": "array",
          "title": "Conversations",
          "description": "Ticket conversations",
          "items": {
            "$ref": "#/definitions/conversation"
          },
          "order": 39
        },
        "spam": {
          "type": "boolean",
          "title": "Spam",
          "description": "Set to true if the ticket has been marked as spam",
          "order": 40
        },
        "deleted": {
          "type": "boolean",
          "title": "Deleted",
          "description": "Set to true if the ticket has been deleted/trashed. Deleted tickets will not be displayed in any views except the `deleted` filter",
          "order": 41
        },
        "isEscalated": {
          "type": "boolean",
          "title": "Is Escalated",
          "description": "Set to true if the ticket has been escalated for any reason",
          "order": 42
        }
      }
    },
    "attachmentOutput": {
      "type": "object",
      "title": "attachmentOutput",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Attachment name",
          "order": 1
        },
        "attachmentUrl": {
          "type": "string",
          "title": "Attachment URL",
          "description": "URL of the attachment",
          "order": 2
        },
        "contentType": {
          "type": "string",
          "title": "Content Type",
          "description": "Content type of the attachment",
          "order": 3
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Date of the attachment creation",
          "order": 4
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Date of the attachment update",
          "order": 5
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID of the attachment",
          "order": 6
        },
        "size": {
          "type": "integer",
          "title": "Size",
          "description": "Size of the attachment",
          "order": 7
        }
      }
    },
    "stats": {
      "type": "object",
      "title": "stats",
      "properties": {
        "agentRespondedAt": {
          "type": "string",
          "title": "Agent Responded At",
          "description": "Agent responded at",
          "order": 1
        },
        "requesterRespondedAt": {
          "type": "string",
          "title": "Requester Responded At",
          "description": "Requester responded at",
          "order": 2
        },
        "firstRespondedAt": {
          "type": "string",
          "title": "First Responded At",
          "description": "First responded at",
          "order": 3
        },
        "statusUpdatedAt": {
          "type": "string",
          "title": "Status Updated At",
          "description": "Status updated at",
          "order": 4
        },
        "reopeneddAt": {
          "type": "string",
          "title": "Reopened At",
          "description": "Reopened at",
          "order": 5
        },
        "resolvedAt": {
          "type": "string",
          "title": "Resolved At",
          "description": "Resolved at",
          "order": 6
        },
        "closedAt": {
          "type": "string",
          "title": "Closed At",
          "description": "Closed at",
          "order": 7
        },
        "pendingSince": {
          "type": "string",
          "title": "Pending Since",
          "description": "Pending since",
          "order": 8
        }
      }
    },
    "company": {
      "type": "object",
      "title": "company",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Company ID",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Company name",
          "order": 2
        }
      }
    },
    "requester": {
      "type": "object",
      "title": "requester",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Requester ID",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Requester name",
          "order": 2
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "Requester email",
          "order": 3
        },
        "mobile": {
          "type": "string",
          "title": "Mobile",
          "description": "Requester mobile",
          "order": 4
        },
        "phone": {
          "type": "string",
          "title": "Phone",
          "description": "Requester phone",
          "order": 5
        }
      }
    },
    "conversation": {
      "type": "object",
      "title": "conversation",
      "properties": {
        "body": {
          "type": "string",
          "title": "Body",
          "description": "Conversation body",
          "order": 1
        },
        "body_text": {
          "type": "string",
          "title": "Body Text",
          "description": "Conversation body text",
          "order": 2
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Conversation ID",
          "order": 3
        },
        "incoming": {
          "type": "boolean",
          "title": "Incoming",
          "description": "Incoming conversation",
          "order": 4
        },
        "private": {
          "type": "boolean",
          "title": "Private",
          "description": "Private conversation",
          "order": 5
        },
        "userId": {
          "type": "integer",
          "title": "User ID",
          "description": "Conversation user ID",
          "order": 6
        },
        "supportEmail": {
          "type": "string",
          "title": "Support Email",
          "description": "Support email",
          "order": 7
        },
        "toEmails": {
          "type": "array",
          "title": "To Emails",
          "description": "To emails",
          "items": {
            "type": "string"
          },
          "order": 8
        },
        "fromEmail": {
          "type": "string",
          "title": "From Email",
          "description": "From email",
          "order": 9
        },
        "ccEmails": {
          "type": "array",
          "title": "CC Emails",
          "description": "CC emails",
          "items": {
            "type": "string"
          },
          "order": 10
        },
        "bccEmails": {
          "type": "array",
          "title": "BCC Emails",
          "description": "BCC emails",
          "items": {
            "type": "string"
          },
          "order": 11
        },
        "emailFailureCount": {
          "type": "integer",
          "title": "Email Failure Count",
          "description": "Email failure count",
          "order": 12
        },
        "threadId": {
          "type": "integer",
          "title": "Thread ID",
          "description": "Thread ID",
          "order": 13
        },
        "threadMessageId": {
          "type": "integer",
          "title": "Thread Message ID",
          "description": "Thread message ID",
          "order": 14
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Date of the conversation creation",
          "order": 15
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Date of the conversation update",
          "order": 16
        },
        "lastEditedAt": {
          "type": "string",
          "title": "Last Edited At",
          "description": "Date of the last conversation edit",
          "order": 17
        },
        "lastEditedUserId": {
          "type": "integer",
          "title": "Last Edited User ID",
          "description": "Last edited user ID",
          "order": 18
        },
        "attachments": {
          "type": "array",
          "title": "Attachments",
          "description": "Conversation attachments",
          "items": {
            "$ref": "#/definitions/attachmentOutput"
          },
          "order": 19
        },
        "automationId": {
          "type": "integer",
          "title": "Automation ID",
          "description": "Automation ID",
          "order": 20
        },
        "automationTypeId": {
          "type": "integer",
          "title": "Automation Type ID",
          "description": "Automation type ID",
          "order": 21
        },
        "autoResponse": {
          "type": "boolean",
          "title": "Auto Response",
          "description": "Auto response",
          "order": 22
        },
        "ticketId": {
          "type": "integer",
          "title": "Ticket ID",
          "description": "Ticket ID",
          "order": 23
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
