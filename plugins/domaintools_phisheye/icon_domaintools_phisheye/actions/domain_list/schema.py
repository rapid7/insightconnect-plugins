# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Returns domain results for monitored terms"


class Input:
    DAYS_BACK = "days_back"
    QUERY = "query"


class Output:
    DATE = "date"
    DOMAINS = "domains"
    TERM = "term"


class DomainListInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "days_back": {
      "type": "integer",
      "title": "Days Back",
      "description": "Use this parameter in exceptional circumstances where you need to find domains up to seven days prior to the current date",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "order": 2
    },
    "query": {
      "type": "string",
      "title": "Query",
      "description": "Term for which the day's domains are desired",
      "order": 1
    }
  },
  "required": [
    "query"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class DomainListOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "date": {
      "type": "string",
      "title": "Date",
      "description": "Date when query run",
      "order": 2
    },
    "domains": {
      "type": "array",
      "title": "Domains",
      "description": "Domains for query",
      "items": {
        "$ref": "#/definitions/domains"
      },
      "order": 3
    },
    "term": {
      "type": "string",
      "title": "Term",
      "description": "Query term",
      "order": 1
    }
  },
  "required": [
    "domains",
    "term"
  ],
  "definitions": {
    "domains": {
      "type": "object",
      "title": "domains",
      "properties": {
        "domain": {
          "type": "string",
          "title": "Domain",
          "description": "Links to WHOIS page for the domain",
          "order": 1
        },
        "tld": {
          "type": "string",
          "title": "TLD",
          "description": "TLD domain",
          "order": 2
        },
        "created_date": {
          "type": "string",
          "title": "Created Date",
          "description": "Date when domain created",
          "order": 3
        },
        "registrant_email": {
          "type": "string",
          "title": "Registrant Email",
          "description": "Email used for register",
          "order": 4
        },
        "ip_addresses": {
          "type": "array",
          "title": "IP Addresses",
          "description": "IPv4 addresses",
          "items": {
            "$ref": "#/definitions/ip_addresses"
          },
          "order": 5
        },
        "name_servers": {
          "type": "array",
          "title": "Name Servers",
          "description": "Name servers used by domain",
          "items": {
            "type": "string"
          },
          "order": 6
        },
        "registrar_name": {
          "type": "string",
          "title": "Registrar Name",
          "description": "Registrar name where domain was registered",
          "order": 7
        },
        "risk_score": {
          "type": "integer",
          "title": "Risk Score",
          "description": "Calculated by the Domain Risk Score",
          "order": 8
        }
      },
      "required": [
        "domain",
        "tld"
      ]
    },
    "ip_addresses": {
      "type": "object",
      "title": "ip_addresses",
      "properties": {
        "ip": {
          "type": "string",
          "title": "IPv4",
          "description": "IPv4 address",
          "order": 1
        },
        "country_code": {
          "type": "string",
          "title": "Country Code",
          "description": "Country code",
          "order": 2
        }
      },
      "required": [
        "country_code",
        "ip"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
