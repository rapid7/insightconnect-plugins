# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Trigger on receiving a new event from a specified topic"


class Input:
    
    NUMBER_OF_MESSAGES = "number_of_messages"
    TOPIC = "topic"
    

class Output:
    
    MESSAGES = "messages"
    

class ReceiveEventInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "number_of_messages": {
      "type": "integer",
      "title": "Number of Messages",
      "description": "The number of messages to return at one time as a list. Must be one or more",
      "default": 1,
      "order": 2
    },
    "topic": {
      "type": "string",
      "title": "Topic",
      "description": "The topic to receive messages from",
      "order": 1
    }
  },
  "required": [
    "number_of_messages",
    "topic"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ReceiveEventOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "messages": {
      "type": "array",
      "title": "Messages",
      "description": "Messages found in the subscription",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
