# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Search an IP for malicious threats"


class Input:
    DOMAIN = "domain"
    

class Output:
    DOMAINS = "domains"
    FOUND = "found"
    HASHES = "hashes"
    MALICIOUS = "malicious"
    PERMALINK = "permalink"
    REFERENCES = "references"
    RESOLUTIONS = "resolutions"
    

class AddressInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "domain": {
      "type": "string",
      "title": "Domain",
      "description": "IP to search",
      "order": 1
    }
  },
  "required": [
    "domain"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddressOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "domains": {
      "type": "array",
      "title": "Domains",
      "description": "List of domains",
      "items": {
        "$ref": "#/definitions/domains"
      },
      "order": 1
    },
    "found": {
      "type": "boolean",
      "title": "Found",
      "description": "Whether search returned results",
      "order": 7
    },
    "hashes": {
      "type": "array",
      "title": "Hashes",
      "description": "List of hashes",
      "items": {
        "type": "string"
      },
      "order": 3
    },
    "malicious": {
      "type": "string",
      "title": "Malicious",
      "description": "Category",
      "order": 5
    },
    "permalink": {
      "type": "string",
      "title": "Permalink",
      "description": "Permalink URL",
      "order": 6
    },
    "references": {
      "type": "array",
      "title": "References",
      "description": "List of references",
      "items": {
        "type": "string"
      },
      "order": 4
    },
    "resolutions": {
      "type": "array",
      "title": "Resolutions",
      "description": "List of resolutions",
      "items": {
        "type": "string"
      },
      "order": 2
    }
  },
  "required": [
    "found"
  ],
  "definitions": {
    "domains": {
      "type": "object",
      "title": "domains",
      "properties": {
        "domain": {
          "type": "string",
          "title": "Domain",
          "description": "Domain",
          "order": 1
        },
        "last_resolved": {
          "type": "string",
          "title": "Last Resolved",
          "description": "Last resolved",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
