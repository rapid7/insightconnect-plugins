# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Run new analysis"


class Input:
    ENV_BITNESS = "env_bitness"
    ENV_OS = "env_os"
    ENV_TYPE = "env_type"
    ENV_VERSION = "env_version"
    FILE = "file"
    OBJ_EXT_BROWSER = "obj_ext_browser"
    OBJ_EXT_CMD = "obj_ext_cmd"
    OBJ_EXT_ELEVATEPROMPT = "obj_ext_elevateprompt"
    OBJ_EXT_EXTENSION = "obj_ext_extension"
    OBJ_EXT_STARTFOLDER = "obj_ext_startfolder"
    OBJ_EXT_USERAGENT = "obj_ext_useragent"
    OBJ_TYPE = "obj_type"
    OBJ_URL = "obj_url"
    OPT_KERNEL_HEAVYEVASION = "opt_kernel_heavyevasion"
    OPT_NETWORK_CONNECT = "opt_network_connect"
    OPT_NETWORK_FAKENET = "opt_network_fakenet"
    OPT_NETWORK_GEO = "opt_network_geo"
    OPT_NETWORK_MITM = "opt_network_mitm"
    OPT_NETWORK_TOR = "opt_network_tor"
    OPT_PRIVACY_HIDESOURCE = "opt_privacy_hidesource"
    OPT_PRIVACY_TYPE = "opt_privacy_type"
    OPT_TIMEOUT = "opt_timeout"
    

class Output:
    UUID = "uuid"
    

class RunAnalysisInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "env_bitness": {
      "type": "integer",
      "title": "Bitness",
      "description": "Bitness of operating system",
      "default": 32,
      "enum": [
        32,
        64
      ],
      "order": 11
    },
    "env_os": {
      "type": "string",
      "title": "OS",
      "description": "Operation system",
      "default": "windows",
      "enum": [
        "windows"
      ],
      "order": 10
    },
    "env_type": {
      "type": "string",
      "title": "Type",
      "description": "Environment preset type",
      "default": "complete",
      "enum": [
        "clean",
        "office",
        "complete"
      ],
      "order": 13
    },
    "env_version": {
      "type": "string",
      "title": "Version",
      "description": "Version of OS",
      "default": "7",
      "enum": [
        "vista",
        "7",
        "8.1",
        "10"
      ],
      "order": 12
    },
    "file": {
      "$ref": "#/definitions/file",
      "title": "File",
      "description": "Malware file",
      "order": 1
    },
    "obj_ext_browser": {
      "type": "string",
      "title": "Browser",
      "description": "Browser name, used only for \\"url\\" type. E.g. Internet Explorer, Google Chrome, Mozilla Firefox, Opera",
      "order": 5
    },
    "obj_ext_cmd": {
      "type": "string",
      "title": "Command",
      "description": "Optional command line that the VM will run. E.g. you can use 'RunDll32.EXE %FILENAME%,\\u003cfunc\\u003e \\u003cparam\\u003e' to call a function by its name with a parameter in the uploaded sample. '%FILENAME%' is a built-in that will be automatically replaced with the file location in the environment",
      "order": 4
    },
    "obj_ext_elevateprompt": {
      "type": "boolean",
      "title": "Elevate Prompt",
      "description": "Auto-accept UAC option",
      "default": true,
      "order": 7
    },
    "obj_ext_extension": {
      "type": "boolean",
      "title": "Extension",
      "description": "Change extension to valid",
      "default": true,
      "order": 8
    },
    "obj_ext_startfolder": {
      "type": "string",
      "title": "Start Folder",
      "description": "Start object from",
      "default": "temp",
      "enum": [
        "desktop",
        "home",
        "downloads",
        "appdata",
        "temp",
        "windows",
        "root"
      ],
      "order": 22
    },
    "obj_ext_useragent": {
      "type": "string",
      "title": "User Agent",
      "description": "User agent, used only for \\"download\\" and \\"url\\" types",
      "order": 6
    },
    "obj_type": {
      "type": "string",
      "title": "Type",
      "description": "Type of new task",
      "default": "file",
      "enum": [
        "file",
        "url",
        "download"
      ],
      "order": 2
    },
    "obj_url": {
      "type": "string",
      "title": "URL",
      "description": "URL, used only if \\"obj_type\\" is \\"url\\" or \\"download\\"",
      "order": 3
    },
    "opt_kernel_heavyevasion": {
      "type": "boolean",
      "title": "Kernel Heavy Evasion",
      "description": "Heavy evasion option",
      "default": false,
      "order": 19
    },
    "opt_network_connect": {
      "type": "boolean",
      "title": "Network Connect",
      "description": "Network connection state",
      "default": true,
      "order": 14
    },
    "opt_network_fakenet": {
      "type": "boolean",
      "title": "Network Fakenet",
      "description": "FakeNet feature status",
      "default": false,
      "order": 15
    },
    "opt_network_geo": {
      "type": "string",
      "title": "Network Geo",
      "description": "Geo location option",
      "enum": [
        "fastest",
        "AU",
        "BR",
        "DE",
        "CH",
        "FR",
        "KR",
        "US",
        "RU",
        "GB",
        "IT"
      ],
      "order": 18
    },
    "opt_network_mitm": {
      "type": "boolean",
      "title": "Network MITM",
      "description": "HTTPS MITM proxy option",
      "default": false,
      "order": 17
    },
    "opt_network_tor": {
      "type": "boolean",
      "title": "Network TOR",
      "description": "TOR using",
      "default": false,
      "order": 16
    },
    "opt_privacy_hidesource": {
      "type": "boolean",
      "title": "Privacy Hidesource",
      "description": "Option for hiding of source URL, used only for \\"download\\" type",
      "default": true,
      "order": 9
    },
    "opt_privacy_type": {
      "type": "string",
      "title": "Privacy Type",
      "description": "Privacy settings",
      "default": "bylink",
      "enum": [
        "public",
        "bylink",
        "owner"
      ],
      "order": 20
    },
    "opt_timeout": {
      "type": "integer",
      "title": "Timeout",
      "description": "Timeout option, size range 10-660",
      "default": 60,
      "order": 21
    }
  },
  "required": [
    "obj_type"
  ],
  "definitions": {
    "file": {
      "id": "file",
      "type": "object",
      "title": "File",
      "description": "File Object",
      "properties": {
        "content": {
          "type": "string",
          "title": "Content",
          "description": "File contents",
          "format": "bytes"
        },
        "filename": {
          "type": "string",
          "title": "Filename",
          "description": "Name of file"
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RunAnalysisOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "uuid": {
      "type": "string",
      "title": "Task UUID",
      "description": "Response task UUID",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
