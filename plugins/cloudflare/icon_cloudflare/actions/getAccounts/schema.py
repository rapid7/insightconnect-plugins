# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "List all accounts you have ownership or verified access to"


class Input:
    DIRECTION = "direction"
    NAME = "name"
    PAGE = "page"
    PERPAGE = "perPage"


class Output:
    ACCOUNTS = "accounts"


class GetAccountsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "direction": {
      "type": "string",
      "title": "Direction",
      "description": "Direction to order results",
      "default": "desc",
      "enum": [
        "desc",
        "asc"
      ],
      "order": 4
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "Name of the account",
      "order": 1
    },
    "page": {
      "type": "integer",
      "title": "Page",
      "description": "Page number of paginated results",
      "order": 2
    },
    "perPage": {
      "type": "integer",
      "title": "Per Page",
      "description": "Maximum number of results per page",
      "order": 3
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAccountsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "accounts": {
      "type": "array",
      "title": "Accounts",
      "description": "List of accounts",
      "items": {
        "$ref": "#/definitions/account"
      },
      "order": 1
    }
  },
  "definitions": {
    "account": {
      "type": "object",
      "title": "account",
      "properties": {
        "id": {
          "type": "string",
          "title": "Account ID",
          "description": "Identifier of the account",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Account Name",
          "description": "Name of the account",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Account Type",
          "description": "Type of the account",
          "order": 3
        },
        "settings": {
          "$ref": "#/definitions/settings",
          "title": "Settings",
          "description": "Account settings",
          "order": 4
        },
        "legacyFlags": {
          "$ref": "#/definitions/legacyFlags",
          "title": "Legacy Flags",
          "description": "Legacy Flags",
          "order": 5
        },
        "createdOn": {
          "type": "string",
          "title": "Created On",
          "description": "Created on",
          "order": 6
        }
      }
    },
    "settings": {
      "type": "object",
      "title": "settings",
      "properties": {
        "enforceTwofactor": {
          "type": "boolean",
          "title": "Enforce Two Factor Authentication",
          "description": "Enforce two factor authentication",
          "order": 1
        },
        "apiAccessEnabled": {
          "type": "boolean",
          "title": "API Access Enabled",
          "description": "API access enabled",
          "order": 2
        }
      }
    },
    "legacyFlags": {
      "type": "object",
      "title": "legacyFlags",
      "properties": {
        "enterpriseZoneQuota": {
          "$ref": "#/definitions/zoneQuota",
          "title": "Enterprise Zone Quota",
          "description": "Enterprise Zone Quota",
          "order": 1
        }
      }
    },
    "zoneQuota": {
      "type": "object",
      "title": "zoneQuota",
      "properties": {
        "maximum": {
          "type": "integer",
          "title": "Maximum",
          "description": "Maximum",
          "order": 1
        },
        "current": {
          "type": "integer",
          "title": "Current",
          "description": "Current",
          "order": 2
        },
        "name": {
          "type": "integer",
          "title": "Available",
          "description": "Available",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
