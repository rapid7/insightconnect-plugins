# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Creates a new access rule for a zone"


class Input:
    MODE = "mode"
    NOTES = "notes"
    TARGET = "target"
    ZONEID = "zoneId"
    

class Output:
    ACCESSRULE = "accessRule"
    

class CreateZoneAccessRuleInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "mode": {
      "type": "string",
      "title": "Mode",
      "description": "The action to apply to a matched request",
      "default": "block",
      "enum": [
        "block",
        "challenge",
        "whitelist",
        "JS challenge",
        "managed challenge"
      ],
      "order": 2
    },
    "notes": {
      "type": "string",
      "title": "Notes",
      "description": "An informative summary of the rule, typically used as a reminder or explanation",
      "order": 4
    },
    "target": {
      "type": "string",
      "title": "Target",
      "description": "The configuration target in which you can specify IPv4, IPv6, IP range, AS number or two-letter ISO-3166-1 alpha-2 country code",
      "order": 3
    },
    "zoneId": {
      "type": "string",
      "title": "Zone ID",
      "description": "ID of the zone for which you want to create an access rule",
      "order": 1
    }
  },
  "required": [
    "mode",
    "target",
    "zoneId"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateZoneAccessRuleOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "accessRule": {
      "$ref": "#/definitions/accessRule",
      "title": "Access Rule",
      "description": "Information about the created access rule",
      "order": 1
    }
  },
  "definitions": {
    "accessRule": {
      "type": "object",
      "title": "accessRule",
      "properties": {
        "allowedModes": {
          "type": "array",
          "title": "Allowed Modes",
          "description": "Allowed modes",
          "items": {
            "type": "string"
          },
          "order": 4
        },
        "configuration": {
          "$ref": "#/definitions/configuration",
          "title": "Configuration",
          "description": "Configuration",
          "order": 6
        },
        "createdOn": {
          "type": "string",
          "title": "Created On",
          "description": "Created on",
          "order": 8
        },
        "id": {
          "type": "string",
          "title": "Access Rule ID",
          "description": "Identifier of the access rule",
          "order": 1
        },
        "mode": {
          "type": "string",
          "title": "Mode",
          "description": "Mode",
          "order": 5
        },
        "modifiedOn": {
          "type": "string",
          "title": "Modified On",
          "description": "Modified on",
          "order": 3
        },
        "paused": {
          "type": "boolean",
          "title": "Paused",
          "description": "Paused",
          "order": 2
        },
        "scope": {
          "$ref": "#/definitions/scope",
          "title": "Scope",
          "description": "Scope",
          "order": 7
        }
      },
      "definitions": {
        "configuration": {
          "type": "object",
          "title": "configuration",
          "properties": {
            "target": {
              "type": "string",
              "title": "Target",
              "description": "Target",
              "order": 1
            },
            "value": {
              "type": "string",
              "title": "Value",
              "description": "Value",
              "order": 2
            }
          }
        },
        "scope": {
          "type": "object",
          "title": "scope",
          "properties": {
            "id": {
              "type": "string",
              "title": "ID",
              "description": "ID",
              "order": 1
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Name",
              "order": 2
            },
            "type": {
              "type": "string",
              "title": "Type",
              "description": "Type",
              "order": 3
            }
          }
        }
      }
    },
    "configuration": {
      "type": "object",
      "title": "configuration",
      "properties": {
        "target": {
          "type": "string",
          "title": "Target",
          "description": "Target",
          "order": 1
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Value",
          "order": 2
        }
      }
    },
    "scope": {
      "type": "object",
      "title": "scope",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
