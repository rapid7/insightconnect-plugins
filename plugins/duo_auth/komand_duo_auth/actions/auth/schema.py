# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Perform second-factor authentication"


class Input:
    ASYNC = "async"
    DEVICE = "device"
    FACTOR = "factor"
    IPADDR = "ipaddr"
    OPTIONS = "options"
    USER_ID = "user_id"
    USERNAME = "username"


class Output:
    RESULT = "result"
    STATUS = "status"
    STATUS_MSG = "status_msg"
    TRUSTED_DEVICE_TOKEN = "trusted_device_token"
    TXID = "txid"


class AuthInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "async": {
      "type": "boolean",
      "title": "Async",
      "description": "Set to true for an async response",
      "order": 5
    },
    "device": {
      "type": "string",
      "title": "Device",
      "description": "Device ID to use for auth",
      "default": "auto",
      "order": 6
    },
    "factor": {
      "type": "string",
      "description": "Factor to use for authentication",
      "default": "auto",
      "enum": [
        "auto",
        "push",
        "passcode",
        "sms",
        "phone"
      ],
      "order": 3
    },
    "ipaddr": {
      "type": "string",
      "description": "The IP address of the user to be authenticated, in dotted quad format. This will cause an 'allow' response to be sent if appropriate for requests from a trusted network",
      "order": 4
    },
    "options": {
      "type": "object",
      "title": "Options",
      "description": "Additional options required by the API. This field is used to specify additional parameters that may be necessary depending on the authentication factor selected. Accepts the following parameters in JSON format `username`, `passcode`, `pushinfo`, `type`",
      "order": 7
    },
    "user_id": {
      "type": "string",
      "title": "User ID",
      "description": "Permanent, unique identifier for the user as generated by Duo upon user creation. Exactly one of user_id or username must be specified",
      "order": 1
    },
    "username": {
      "type": "string",
      "title": "Username",
      "description": "Unique identifier for the user that is commonly specified by your application during user creation. This value may also represent a username alias assigned to a user. Exactly one of user_id or username must be specified",
      "order": 2
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AuthOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "result": {
      "type": "string",
      "title": "Result",
      "description": "Either \"allow\" or \"deny\". If \"allow\" was returned, your application should grant access to the user. If \"deny\", it should not",
      "order": 1
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "String detailing the progress or outcome of the authentication attempt",
      "order": 2
    },
    "status_msg": {
      "type": "string",
      "title": "Status Message",
      "description": "The message describing the status of the authentication attempt. If the authentication attempt was denied, it may identify a reason",
      "order": 3
    },
    "trusted_device_token": {
      "type": "string",
      "title": "Trusted Device Token",
      "description": "A string containing a token for that trusted device",
      "order": 4
    },
    "txid": {
      "type": "string",
      "title": "TX ID",
      "description": "A transaction ID",
      "order": 5
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
