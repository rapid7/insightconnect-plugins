# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Retrieve a list of offenses currently in the system"


class Input:
    pass

class Output:
    OFFENSES = "offenses"
    

class RetrieveOffensesInput(komand.Input):
    schema = json.loads("""
   {}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RetrieveOffensesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "offenses": {
      "type": "array",
      "title": "Offenses",
      "description": "Offenses",
      "items": {
        "$ref": "#/definitions/offense"
      },
      "order": 1
    }
  },
  "definitions": {
    "offense": {
      "type": "object",
      "title": "offense",
      "properties": {
        "assigned_to": {
          "type": "string",
          "title": "Assigned To",
          "description": "The user the offense is assigned to",
          "order": 23
        },
        "categories": {
          "type": "array",
          "title": "Categories",
          "description": "Event categories that are associated with the offense",
          "items": {
            "type": "string"
          },
          "order": 27
        },
        "category_count": {
          "type": "integer",
          "title": "Category Count",
          "description": "Event categories that are associated with the offense",
          "order": 25
        },
        "close_time": {
          "type": "integer",
          "title": "Close Time",
          "description": "The number of milliseconds since epoch when the offense was closed",
          "order": 9
        },
        "closing_reason_id": {
          "type": "integer",
          "title": "Closing Reason ID",
          "description": "The ID of the offense closing reason. The reason the offense was closed",
          "order": 12
        },
        "closing_user": {
          "type": "string",
          "title": "Closing User",
          "description": "The user that closed the offense",
          "order": 32
        },
        "credibility": {
          "type": "integer",
          "title": "Credibility",
          "description": "The credibility of the offense",
          "order": 11
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "The description of the offense. Filtering is not supported on this field",
          "order": 21
        },
        "destination_networks": {
          "type": "array",
          "title": "Destination Networks",
          "description": "The destination networks that are associated with the offense",
          "items": {
            "type": "string"
          },
          "order": 2
        },
        "device_count": {
          "type": "integer",
          "title": "Device Count",
          "description": "The number of devices that are associated with the offense",
          "order": 13
        },
        "domain_id": {
          "type": "integer",
          "title": "Domain ID",
          "description": "ID of associated domain if the offense is associated with a single domain",
          "order": 7
        },
        "event_count": {
          "type": "integer",
          "title": "Event Count",
          "description": "The number of events that are associated with the offense",
          "order": 29
        },
        "flow_count": {
          "type": "integer",
          "title": "Flow Count",
          "description": "The number of flows that are associated with the offense",
          "order": 6
        },
        "follow_up": {
          "type": "boolean",
          "title": "Follow Up",
          "description": "True if the offense is marked for follow up",
          "order": 8
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "The ID of the offense",
          "order": 14
        },
        "inactive": {
          "type": "boolean",
          "title": "Inactive",
          "description": "True if the offense is inactive",
          "order": 5
        },
        "last_updated_time": {
          "type": "integer",
          "title": "Last Updated Time",
          "description": "The number of milliseconds since epoch when the offense was last updated",
          "order": 4
        },
        "local_destination_address_ids": {
          "type": "array",
          "title": "Local Destination Address IDs",
          "description": "The local destination address IDs that are associated with the offense",
          "items": {
            "type": "integer"
          },
          "order": 34
        },
        "local_destination_count": {
          "type": "integer",
          "title": "Local Destination Count",
          "description": "The number of local destinations that are associated with the offense",
          "order": 28
        },
        "magnitude": {
          "type": "integer",
          "title": "Magnitude",
          "description": "The magnitude of the offense",
          "order": 16
        },
        "offense_source": {
          "type": "string",
          "title": "Offense Source",
          "description": "The source of the offense. Filtering is not supported on this field",
          "order": 1
        },
        "offense_type": {
          "type": "integer",
          "title": "Offense Type",
          "description": "Number that represents the offense type. Use GET /siem/offense_types to retrieve the list",
          "order": 24
        },
        "policy_category_count": {
          "type": "integer",
          "title": "Policy Category Count",
          "description": "The number of policy event categories that are associated with the offense",
          "order": 3
        },
        "protected": {
          "type": "boolean",
          "title": "Protected",
          "description": "True if the offense is protected",
          "order": 31
        },
        "relevance": {
          "type": "integer",
          "title": "Relevance",
          "description": "The relevance of the offense",
          "order": 17
        },
        "remote_destination_count": {
          "type": "integer",
          "title": "Remote Destination Count",
          "description": "The number of remote destinations that are associated with the offense",
          "order": 26
        },
        "security_category_count": {
          "type": "integer",
          "title": "Security Category Count",
          "description": "The number of security event categories that are associated with the offense",
          "order": 30
        },
        "severity": {
          "type": "integer",
          "title": "Severity",
          "description": "The severity of the offense",
          "order": 10
        },
        "source_address_ids": {
          "type": "array",
          "title": "Source Address IDs",
          "description": "The source address IDs that are associated with the offense",
          "items": {
            "type": "integer"
          },
          "order": 33
        },
        "source_count": {
          "type": "integer",
          "title": "Source Count",
          "description": "The number of sources that are associated with the offense",
          "order": 20
        },
        "source_network": {
          "type": "string",
          "title": "Source Network",
          "description": "The source network that is associated with the offense. Filtering is not supported on this field",
          "order": 18
        },
        "start_time": {
          "type": "integer",
          "title": "Start Time",
          "description": "The number of milliseconds since epoch when the offense was started",
          "order": 22
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "The status of the offense. One of OPEN, HIDDEN, or CLOSED",
          "order": 19
        },
        "username_count": {
          "type": "integer",
          "title": "Username Count",
          "description": "The number of usernames that are associated with the offense",
          "order": 15
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
