# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Monitor new issues"


class Input:
    IIDS = "iids"
    INTERVAL = "interval"
    LABELS = "labels"
    MILESTONE = "milestone"
    SEARCH = "search"
    STATE = "state"


class Output:
    ISSUE = "issue"


class GetNewIssueInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "iids": {
      "type": "array",
      "title": "IIDS",
      "description": "Return only the issues having the given iid",
      "items": {
        "type": "integer"
      },
      "order": 4
    },
    "interval": {
      "type": "integer",
      "title": "Interval",
      "description": "How often to check for new issues",
      "order": 6
    },
    "labels": {
      "type": "string",
      "title": "Labels",
      "description": "Comma-separated list of label names, issues must have all labels to be returned",
      "order": 2
    },
    "milestone": {
      "type": "string",
      "title": "Milestone",
      "description": "The milestone title",
      "order": 3
    },
    "search": {
      "type": "string",
      "title": "Search",
      "description": "Search issues against their title and description",
      "order": 5
    },
    "state": {
      "type": "string",
      "title": "State",
      "description": "Return all issues or just those that are opened or closed",
      "enum": [
        "Opened",
        "Closed"
      ],
      "order": 1
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetNewIssueOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "issue": {
      "type": "object",
      "title": "Issue",
      "description": "Issue",
      "order": 1
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
