# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Create issue"


class Input:
    ASSIGNEE_IDS = "assignee_ids"
    CONFIDENTIAL = "confidential"
    CREATED_AT = "created_at"
    DESCRIPTION = "description"
    DISCUSSION_RESOLVE = "discussion_resolve"
    DUE_DATE = "due_date"
    ID = "id"
    LABELS = "labels"
    MERGE_REQUEST = "merge_request"
    MILESTONE_ID = "milestone_id"
    PROJECT_ID = "project_id"
    TITLE = "title"


class Output:
    ASSIGNEES = "assignees"
    AUTHOR = "author"
    CONFIDENTIAL = "confidential"
    CREATED_AT = "created_at"
    DESCRIPTION = "description"
    DUE_DATE = "due_date"
    ID = "id"
    IID = "iid"
    LABELS = "labels"
    MILESTONE = "milestone"
    PROJECT_ID = "project_id"
    STATE = "state"
    SUBSCRIBED = "subscribed"
    TITLE = "title"
    UPDATED_AT = "updated_at"
    USER_NOTES_COUNT = "user_notes_count"
    WEB_URL = "web_url"


class CreateIssueInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assignee_ids": {
      "type": "array",
      "title": "Assignees",
      "description": "The ID of a user to assign issue",
      "items": {
        "type": "integer"
      },
      "order": 6
    },
    "confidential": {
      "type": "boolean",
      "title": "Confidential",
      "description": "Set an issue to be confidential",
      "order": 5
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Created At",
      "description": "Date, ISO 8601 formatted (requires admin or project owner rights)",
      "order": 9
    },
    "description": {
      "type": "string",
      "title": "Description title",
      "description": "The description of an issue",
      "order": 4
    },
    "discussion_resolve": {
      "type": "string",
      "title": "Discussion To Resolve",
      "description": "The ID of a discussion to resolve",
      "order": 12
    },
    "due_date": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Due Date",
      "description": "Date time string in the format YEAR-MONTH-DAY",
      "order": 10
    },
    "id": {
      "type": "integer",
      "title": "User ID",
      "description": "User ID to unblock",
      "order": 1
    },
    "labels": {
      "type": "string",
      "title": "Labels",
      "description": "Comma-separated label names for an issue",
      "order": 8
    },
    "merge_request": {
      "type": "integer",
      "title": "Merge Request To Resolve Discussions Of",
      "description": "The IID of a merge request in which to resolve all issues",
      "order": 11
    },
    "milestone_id": {
      "type": "integer",
      "title": "Milestone",
      "description": "The ID of a milestone to assign issue",
      "order": 7
    },
    "project_id": {
      "type": "integer",
      "title": "Project ID",
      "description": "ID of project",
      "order": 2
    },
    "title": {
      "type": "string",
      "title": "Issue title",
      "description": "The title of an issue",
      "order": 3
    }
  },
  "required": [
    "id",
    "project_id",
    "title"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateIssueOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assignees": {
      "type": "array",
      "title": "Assignees",
      "description": "Assignees",
      "items": {
        "$ref": "#/definitions/user_output"
      },
      "order": 7
    },
    "author": {
      "$ref": "#/definitions/user_output",
      "title": "Author",
      "description": "Author",
      "order": 17
    },
    "confidential": {
      "type": "boolean",
      "title": "Confidential",
      "description": "Confidential",
      "order": 16
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Created At",
      "description": "Created at",
      "order": 3
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Description",
      "order": 9
    },
    "due_date": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Due Date",
      "description": "Due date",
      "order": 14
    },
    "id": {
      "type": "integer",
      "title": "ID",
      "description": "ID",
      "order": 2
    },
    "iid": {
      "type": "integer",
      "title": "IID",
      "description": "IID",
      "order": 4
    },
    "labels": {
      "type": "array",
      "title": "Labels",
      "description": "Labels",
      "items": {
        "type": "string"
      },
      "order": 8
    },
    "milestone": {
      "$ref": "#/definitions/milestone_output",
      "title": "Milestone",
      "description": "Milestone",
      "order": 11
    },
    "project_id": {
      "type": "integer",
      "title": "Project ID",
      "description": "Project ID",
      "order": 1
    },
    "state": {
      "type": "string",
      "title": "State",
      "description": "State",
      "order": 6
    },
    "subscribed": {
      "type": "boolean",
      "title": "Subscribed",
      "description": "Subscribed",
      "order": 12
    },
    "title": {
      "type": "string",
      "title": "Title",
      "description": "Title",
      "order": 5
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Updated At",
      "description": "Updated at",
      "order": 10
    },
    "user_notes_count": {
      "type": "integer",
      "title": "User Notes Count",
      "description": "User notes count",
      "order": 13
    },
    "web_url": {
      "type": "string",
      "title": "Web URL",
      "description": "Web URL",
      "order": 15
    }
  },
  "definitions": {
    "user_output": {
      "type": "object",
      "title": "user_output",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "User full name",
          "order": 1
        },
        "avatar_url": {
          "type": "string",
          "title": "Avatar URL",
          "description": "User avatar URL",
          "order": 2
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "User state 'Active' or 'Inactive' ",
          "order": 3
        },
        "web_url": {
          "type": "string",
          "title": "Web URL",
          "description": "User profile URL",
          "order": 4
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Unique user ID",
          "order": 5
        },
        "username": {
          "type": "string",
          "title": "Username",
          "description": "User's username",
          "order": 6
        }
      }
    },
    "milestone_output": {
      "type": "object",
      "title": "milestone_output",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Unique milestone ID",
          "order": 1
        },
        "iid": {
          "type": "integer",
          "title": "IID",
          "description": "Unique ID only in scope of a single project",
          "order": 2
        },
        "project_id": {
          "type": "integer",
          "title": "Project ID",
          "description": "Project ID",
          "order": 3
        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Project title",
          "order": 4
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Project description",
          "order": 5
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "Project state",
          "order": 6
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Created At",
          "description": "Date project was created",
          "order": 7
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Updated At",
          "description": "Date project was updated",
          "order": 8
        },
        "due_date": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Due Date",
          "description": "Date project is to be closed",
          "order": 9
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
