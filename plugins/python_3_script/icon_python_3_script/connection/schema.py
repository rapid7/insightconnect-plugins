# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Input:
    MODULES = "modules"
    SCRIPT_SECRET_KEY = "script_secret_key"
    SCRIPT_USERNAME_AND_PASSWORD = "script_username_and_password"
    TIMEOUT = "timeout"


class ConnectionSchema(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "modules": {
      "type": "array",
      "title": "Third-Party Modules",
      "description": "List of third-party modules to install for use in the supplied Python script",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "script_secret_key": {
      "$ref": "#/definitions/credential_secret_key",
      "title": "Script Secret Key",
      "description": "Credential secret key available in script as python variable (`secret_key`)",
      "order": 3
    },
    "script_username_and_password": {
      "$ref": "#/definitions/credential_username_password",
      "title": "Script Username and Password",
      "description": "Username and password available in script as python variables (`username`, `password`)",
      "order": 4
    },
    "timeout": {
      "type": "integer",
      "title": "Timeout",
      "description": "Timeout (in seconds) for installing third-party modules",
      "default": 60,
      "order": 2
    }
  },
  "required": [
    "timeout"
  ],
  "definitions": {
    "credential_secret_key": {
      "id": "credential_secret_key",
      "type": "object",
      "title": "Credential: Secret Key",
      "description": "A shared secret key",
      "required": [
        "secretKey"
      ],
      "properties": {
        "secretKey": {
          "type": "string",
          "title": "Secret Key",
          "description": "The shared secret key",
          "format": "password",
          "displayType": "password"
        }
      }
    },
    "credential_username_password": {
      "id": "credential_username_password",
      "title": "Credential: Username and Password",
      "description": "A username and password combination",
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username",
          "description": "The username to log in with",
          "order": 1
        },
        "password": {
          "type": "string",
          "title": "Password",
          "description": "The password",
          "format": "password",
          "displayType": "password",
          "order": 2
        }
      },
      "required": [
        "username",
        "password"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
