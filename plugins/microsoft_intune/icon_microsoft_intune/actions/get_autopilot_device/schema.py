# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get information about the Autopilot device"


class Input:
    DEVICEID = "deviceId"


class Output:
    DEVICE = "device"


class GetAutopilotDeviceInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "deviceId": {
      "type": "string",
      "title": "Device ID",
      "description": "ID of the Autopilot device",
      "order": 1
    }
  },
  "required": [
    "deviceId"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAutopilotDeviceOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "device": {
      "$ref": "#/definitions/autopilotDevice",
      "title": "Device",
      "description": "Information about the autopilot device",
      "order": 1
    }
  },
  "definitions": {
    "autopilotDevice": {
      "type": "object",
      "title": "autopilotDevice",
      "properties": {
        "addressableUserName": {
          "type": "string",
          "title": "Addressable User Name",
          "description": "Addressable user name",
          "order": 1
        },
        "azureActiveDirectoryDeviceId": {
          "type": "string",
          "title": "Azure Active Directory Device ID",
          "description": "The unique identifier for the Azure Active Directory device",
          "order": 2
        },
        "displayName": {
          "type": "string",
          "title": "Display Name",
          "description": "Display name of the device",
          "order": 3
        },
        "enrollmentState": {
          "type": "string",
          "title": "Enrollment State",
          "description": "State of the enrollment",
          "order": 4
        },
        "groupTag": {
          "type": "string",
          "title": "Group Tag",
          "description": "Group tag of the autopilot device",
          "order": 5
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique identifier for the autopilot device",
          "order": 6
        },
        "lastContactedDateTime": {
          "type": "string",
          "title": "Last Contacted Date Time",
          "description": "The date when the device was last contacted",
          "order": 7
        },
        "managedDeviceId": {
          "type": "string",
          "title": "Managed Device ID",
          "description": "The identifier of the managed device",
          "order": 8
        },
        "manufacturer": {
          "type": "string",
          "title": "Manufacturer",
          "description": "OEM manufacturer of the device",
          "order": 9
        },
        "model": {
          "type": "string",
          "title": "Model",
          "description": "Model of the autopilot device",
          "order": 10
        },
        "productKey": {
          "type": "string",
          "title": "Product Key",
          "description": "Product key of the device",
          "order": 11
        },
        "purchaseOrderIdentifier": {
          "type": "string",
          "title": "Purchase Order Identifier",
          "description": "The identifier of the purchase order",
          "order": 12
        },
        "resourceName": {
          "type": "string",
          "title": "Resource Name",
          "description": "Name of the resource",
          "order": 13
        },
        "serialNumber": {
          "type": "string",
          "title": "Serial Number",
          "description": "Serial number of the device",
          "order": 14
        },
        "skuNumber": {
          "type": "string",
          "title": "SKU Number",
          "description": "Stock Keeping Unit number of the device",
          "order": 15
        },
        "systemFamily": {
          "type": "string",
          "title": "System Family",
          "description": "Family of the device system",
          "order": 16
        },
        "userPrincipalName": {
          "type": "string",
          "title": "User Principal Name",
          "description": "Principal name of the user",
          "order": 17
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
