# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get real-time details of the execution of a scan"


class Input:
    SCAN_ID = "scan_id"


class Output:
    DETAILS = "details"


class GetScanExecutionDetailsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "scan_id": {
      "type": "string",
      "title": "Scan ID",
      "description": "Scan UUID",
      "order": 1
    }
  },
  "required": [
    "scan_id"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetScanExecutionDetailsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "details": {
      "$ref": "#/definitions/scan_details",
      "title": "Details",
      "description": "Detailed information about the scan",
      "order": 1
    }
  },
  "definitions": {
    "scan_details": {
      "type": "object",
      "title": "scan_details",
      "properties": {
        "logged_in": {
          "type": "boolean",
          "title": "Logged-In",
          "description": "A flag which indicates if the scan is using authentication during the scan",
          "order": 1
        },
        "links_in_queue": {
          "type": "integer",
          "title": "Links in Queue",
          "description": "The number of links in the crawling queue",
          "order": 2
        },
        "links_crawled": {
          "type": "integer",
          "title": "Links Crawled",
          "description": "The number of links already crawled",
          "order": 3
        },
        "attacks_in_queue": {
          "type": "integer",
          "title": "Attacks in Queue",
          "description": "The number of links in the attacking queue",
          "order": 4
        },
        "attacked": {
          "type": "integer",
          "title": "Attacked",
          "description": "The number of attacks already performed",
          "order": 5
        },
        "vulnerable": {
          "type": "integer",
          "title": "Vulnerable",
          "description": "The number of potential findings",
          "order": 6
        },
        "requests": {
          "type": "integer",
          "title": "Requests",
          "description": "The number of HTTP requests which have been executed",
          "order": 7
        },
        "failed_requests": {
          "type": "integer",
          "title": "Failed Requests",
          "description": "The number of failed HTTP requests",
          "order": 8
        },
        "network_speed": {
          "type": "number",
          "title": "Network Speed",
          "description": "A throughput indicator",
          "order": 9
        },
        "drip_delay": {
          "type": "number",
          "title": "Drip Delay",
          "description": "The current delay between HTTP requests",
          "order": 10
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
