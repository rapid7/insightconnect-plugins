# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get a page of Vulnerability Discoveries, based on supplied pagination parameters. The default sort for Vulnerability Discoveries is 'discovered' (descending)"


class Input:
    INDEX = "index"
    PAGETOKEN = "pageToken"
    SIZE = "size"
    SORT = "sort"
    VULNERABILITYID = "vulnerabilityId"


class Output:
    DATA = "data"
    LINKS = "links"
    METADATA = "metadata"


class GetVulnerabilityDiscoveriesInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "index": {
      "type": "integer",
      "title": "Index",
      "description": "The 0-based index of the page of data desired (default: 0)",
      "order": 2
    },
    "pageToken": {
      "type": "string",
      "title": "Page Token",
      "description": "The page token, used as an alternative to index",
      "order": 5
    },
    "size": {
      "type": "integer",
      "title": "Size",
      "description": "The size of the page of data desired (min: 1, max: 1000, default: 50)",
      "order": 3
    },
    "sort": {
      "type": "string",
      "title": "Sort",
      "description": "The sort terms and (optional) directions for the desired ordering of data",
      "order": 4
    },
    "vulnerabilityId": {
      "type": "string",
      "title": "Vulnerability ID",
      "description": "Unique identifier for vulnerability",
      "order": 1
    }
  },
  "required": [
    "vulnerabilityId"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetVulnerabilityDiscoveriesOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "array",
      "title": "Data",
      "description": "Vulnerability discovery items",
      "items": {
        "$ref": "#/definitions/discoveryItem"
      },
      "order": 2
    },
    "links": {
      "type": "array",
      "title": "Links",
      "description": "List of links",
      "items": {
        "$ref": "#/definitions/linkDetails"
      },
      "order": 3
    },
    "metadata": {
      "$ref": "#/definitions/pageMetadata",
      "title": "Metadata",
      "description": "Page metadata",
      "order": 1
    }
  },
  "definitions": {
    "pageMetadata": {
      "type": "object",
      "title": "pageMetadata",
      "properties": {
        "size": {
          "type": "integer",
          "title": "Size",
          "description": "Page size",
          "order": 1
        },
        "totalData": {
          "type": "integer",
          "title": "Total Data",
          "description": "Total data",
          "order": 2
        },
        "pageToken": {
          "type": "string",
          "title": "Page Token",
          "description": "Page token",
          "order": 3
        },
        "index": {
          "type": "integer",
          "title": "Index",
          "description": "Page index",
          "order": 4
        },
        "sort": {
          "type": "string",
          "title": "Sort",
          "description": "Sort details",
          "order": 5
        },
        "totalPages": {
          "type": "integer",
          "title": "Total Pages",
          "description": "Total pages",
          "order": 6
        }
      }
    },
    "discoveryItem": {
      "type": "object",
      "title": "discoveryItem",
      "properties": {
        "discovered": {
          "type": "string",
          "title": "Discovered",
          "description": "The time the vulnerability discovery was discovered",
          "order": 1
        },
        "scan": {
          "$ref": "#/definitions/objectId",
          "title": "Scan",
          "description": "The ID of the module",
          "order": 2
        }
      }
    },
    "objectId": {
      "type": "object",
      "title": "objectId",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Unique identifier for object",
          "order": 1
        }
      }
    },
    "linkDetails": {
      "type": "object",
      "title": "linkDetails",
      "properties": {
        "profile": {
          "type": "string",
          "title": "Profile",
          "description": "Profile",
          "order": 1
        },
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "Relationship",
          "order": 2
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name",
          "order": 3
        },
        "href": {
          "type": "string",
          "title": "Href",
          "description": "The location of the resource",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
