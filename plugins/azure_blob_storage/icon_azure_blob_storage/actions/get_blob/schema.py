# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "The Get Blob action reads or downloads a blob from the system, including its metadata and properties. You can also use Get Blob to read a snapshot"


class Input:
    ADDITIONAL_HEADERS = "additional_headers"
    BLOB_NAME = "blob_name"
    BYTE_TO_STRING = "byte_to_string"
    CONTAINER_NAME = "container_name"
    SNAPSHOT_ID = "snapshot_id"
    VERSION_ID = "version_id"
    

class Output:
    DATA = "data"
    

class GetBlobInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "additional_headers": {
      "type": "object",
      "title": "Additional Headers",
      "description": "Additional headers to pass to the API request",
      "default": "{}",
      "order": 6
    },
    "blob_name": {
      "type": "string",
      "title": "Blob Name",
      "description": "Name of the blob to retrieve",
      "order": 2
    },
    "byte_to_string": {
      "type": "boolean",
      "title": "Byte to String",
      "description": "Whether output data should be converted from bytes to string or not",
      "default": false,
      "order": 5
    },
    "container_name": {
      "type": "string",
      "title": "Container Name",
      "description": "Name of the container",
      "order": 1
    },
    "snapshot_id": {
      "type": "string",
      "title": "Snapshot ID",
      "description": "The snapshot parameter is an opaque DateTime value that, when present, specifies the blob snapshot",
      "order": 3
    },
    "version_id": {
      "type": "string",
      "title": "Version ID",
      "description": "The versionid parameter is an opaque DateTime value that, when present, specifies the Version of the blob",
      "order": 4
    }
  },
  "required": [
    "blob_name",
    "container_name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetBlobOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "string",
      "title": "Data",
      "displayType": "bytes",
      "description": "Base64 encoded Blob data",
      "format": "bytes",
      "order": 1
    }
  },
  "required": [
    "data"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
