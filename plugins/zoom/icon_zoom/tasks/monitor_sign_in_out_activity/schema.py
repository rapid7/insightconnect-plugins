# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Monitor sign in and out activity"


class Input:
    pass


class State:
    pass


class Output:
    ACTIVITY_LOGS = "activity_logs"


class MonitorSignInOutActivityInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MonitorSignInOutActivityState(insightconnect_plugin_runtime.State):
    schema = json.loads(r"""
   {}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MonitorSignInOutActivityOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "array",
  "title": "Activity Logs",
  "description": "All activity logs within the specified time range",
  "items": {
    "$ref": "#/definitions/user_activity"
  },
  "required": [
    "activity_logs",
    "email",
    "ip_address",
    "time",
    "type"
  ],
  "definitions": {
    "user_activity": {
      "type": "object",
      "title": "user_activity",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email",
          "description": "Email address of the user used for the activity",
          "order": 1
        },
        "time": {
          "type": "string",
          "title": "Time",
          "description": "Time during which the activity occurred in 'yyyy-mm-ddThh:mm:ssZ' format",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The type of activity",
          "enum": [
            "Sign in",
            "Sign out"
          ],
          "order": 3
        },
        "ip_address": {
          "type": "string",
          "title": "IP Address",
          "description": "The IP address of the user's device",
          "order": 4
        },
        "client_type": {
          "type": "string",
          "title": "Client Type",
          "description": "The type of client of the user's device",
          "order": 5
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "The version of the client of the user's device",
          "order": 6
        }
      },
      "required": [
        "email",
        "ip_address",
        "time",
        "type"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
