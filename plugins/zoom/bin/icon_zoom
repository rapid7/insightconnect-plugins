#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "Zoom"
Vendor = "rapid7"
Version = "4.1.8"
Description = "[Zoom](https://zoom.us) is a cloud platform for video and audio conferencing, chat, and webinars. The Zoom plugin allows you to add and remove users as part of of workflow, while also providing the ability to trigger workflows on new user sign-in and sign-out activity events. This plugin uses the [Zoom API](https://marketplace.zoom.us/docs/api-reference/introduction) and requires a Pro, Business, or Enterprise plan"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from icon_zoom import connection, actions, triggers, tasks

    class ICONZoom(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_trigger(triggers.UserActivityEvent())
        
            self.add_action(actions.GetUser())
        
            self.add_action(actions.CreateUser())
        
            self.add_action(actions.DeleteUser())
        
            self.add_task(tasks.MonitorSignInOutActivity())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONZoom())
    cli.run()


if __name__ == "__main__":
    main()
