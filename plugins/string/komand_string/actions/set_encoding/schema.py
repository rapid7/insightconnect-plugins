# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Encode a string"


class Input:
    ENCODING = "encoding"
    ERROR_HANDLING = "error_handling"
    STRING = "string"
    

class Output:
    ENCODED = "encoded"
    

class SetEncodingInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "encoding": {
      "type": "string",
      "title": "Encoding",
      "description": "Encoding to use",
      "enum": [
        "UTF-8",
        "ASCII"
      ],
      "order": 2
    },
    "error_handling": {
      "type": "string",
      "title": "Error Handling",
      "description": "Error handler to use for encoding and decoding",
      "enum": [
        "strict",
        "replace",
        "ignore"
      ],
      "order": 3
    },
    "string": {
      "type": "string",
      "title": "String Input",
      "description": "String to encode",
      "order": 1
    }
  },
  "required": [
    "encoding",
    "error_handling",
    "string"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SetEncodingOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "encoded": {
      "type": "string",
      "title": "Encoded String",
      "description": "Encoded string",
      "order": 1
    }
  },
  "required": [
    "encoded"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
