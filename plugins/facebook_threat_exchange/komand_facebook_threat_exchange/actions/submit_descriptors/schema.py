# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Submit data to Facebook's graph API"


class Input:
    ADD_TAGS = "add_tags"
    CONFIDENCE = "confidence"
    DESCRIPTION = "description"
    EXPIRED_ON = "expired_on"
    FIRST_ACTIVE = "first_active"
    INDICATOR = "indicator"
    LAST_ACTIVE = "last_active"
    PRECISION = "precision"
    PRIVACY_MEMBERS = "privacy_members"
    PRIVACY_TYPE = "privacy_type"
    REMOVE_TAGS = "remove_tags"
    REVIEW_STATUS = "review_status"
    SEVERITY = "severity"
    SHARE_LEVEL = "share_level"
    STATUS = "status"
    TAGS = "tags"
    TYPE = "type"
    

class Output:
    ID = "id"
    SUCCESS = "success"
    

class SubmitDescriptorsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "add_tags": {
      "type": "string",
      "title": "Add Tags",
      "description": "To add tags to an object without overwriting existing tags",
      "order": 15
    },
    "confidence": {
      "type": "integer",
      "title": "Confidence",
      "description": "A score for how likely the indicator's status is accurate, ranges from 0 to 100",
      "order": 1
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "A short summary of the indicator and threat",
      "order": 2
    },
    "expired_on": {
      "type": "string",
      "title": "Expired On",
      "displayType": "date",
      "description": "Time the indicator is no longer considered a threat, in ISO 8601 date format",
      "format": "date-time",
      "order": 3
    },
    "first_active": {
      "type": "string",
      "title": "First Active",
      "displayType": "date",
      "description": "Time when the opinion first became valid",
      "format": "date-time",
      "order": 4
    },
    "indicator": {
      "type": "string",
      "title": "Indicator",
      "description": "The indicator data being submitted",
      "order": 6
    },
    "last_active": {
      "type": "string",
      "title": "Last Active",
      "displayType": "date",
      "description": "Time when the opinion  became valid",
      "format": "date-time",
      "order": 5
    },
    "precision": {
      "type": "string",
      "title": "Precision",
      "description": "The degree of accuracy of the indicator",
      "enum": [
        "",
        "UNKNOWN",
        "LOW",
        "MEDIUM",
        "HIGH"
      ],
      "order": 7
    },
    "privacy_members": {
      "type": "array",
      "title": "Privacy Members",
      "description": "A comma-delimited list of ThreatExchangeMembers allowed to see the indicator and only applies when privacy_type is set to HAS_WHITELIST",
      "items": {
        "type": "string"
      },
      "order": 9
    },
    "privacy_type": {
      "type": "string",
      "title": "Privacy Type",
      "description": "The kind of privacy for the indicator",
      "enum": [
        "",
        "HAS_PRIVACY_GROUP",
        "HAS_WHITELIST",
        "VISIBLE"
      ],
      "order": 8
    },
    "remove_tags": {
      "type": "string",
      "title": "Remove Tags",
      "description": "Remove tags associated with an object",
      "order": 16
    },
    "review_status": {
      "type": "string",
      "title": "Review Status",
      "description": "Describes how the indicator was vetted, see ReviewStatusType for the list of allowed values",
      "enum": [
        "",
        "UNKNOWN",
        "UNREVIEWED",
        "PENDING",
        "REVIEWED_MANUALLY",
        "REVIEWED_AUTOMATICALLY"
      ],
      "order": 10
    },
    "severity": {
      "type": "string",
      "title": "Severity",
      "description": "A description of the dangerousness of the threat associated with a ThreatIndicator object",
      "enum": [
        "",
        "UNKNOWN",
        "INFO",
        "WARNING",
        "SUSPICIOUS",
        "SEVERE",
        "APOCALYPSE"
      ],
      "order": 11
    },
    "share_level": {
      "type": "string",
      "title": "Share Level",
      "description": "The following Share Level Type designations are based on the US-CERT's Traffic Light Protocol and govern how ThreatData may be re-shared both within and outside of ThreatExchange",
      "enum": [
        "RED",
        "AMBER",
        "GREEN",
        "WHITE"
      ],
      "order": 12
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Indicates if the indicator is labeled as malicious",
      "order": 13
    },
    "tags": {
      "type": "array",
      "title": "Tags",
      "description": "A comma separated list of tags you want to publish. This will overwrite any existing tags",
      "items": {
        "type": "string"
      },
      "order": 14
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "The kind of indicator being described, see IndicatorType for the list of allowed values",
      "enum": [
        "ADJUST_TOKEN",
        "API_KEY",
        "AS_NUMBER",
        "BANNER",
        "CMD_LINE",
        "COOKIE_NAME",
        "CRX",
        "DEBUG_STRING",
        "DEST_PORT",
        "DIRECTORY_QUERIED",
        "DOMAIN",
        "EMAIL_ADDRESS",
        "FILE_CREATED",
        "FILE_DELETED",
        "FILE_MOVED",
        "FILE_NAME",
        "FILE_OPENED",
        "FILE_READ",
        "FILE_WRITTEN",
        "GET_PARAM",
        "HASH_IMPHASH",
        "HASH_MD5",
        "HASH_SHA1",
        "HASH_SHA256",
        "HASH_SSDEEP",
        "HTML_ID",
        "HTTP_REQUEST",
        "IP_ADDRESS",
        "IP_SUBNET",
        "ISP",
        "LATITUDE",
        "LAUNCH_AGENT",
        "LOCATION",
        "LONGITUDE",
        "MALWARE_NAME",
        "MEMORY_ALLOC",
        "MEMORY_PROTECT",
        "MEMORY_WRITTEN",
        "MUTANT_CREATED",
        "MUTEX",
        "NAME_SERVER",
        "OTHER_FILE_OP",
        "PASSWORD",
        "PASSWORD_SALT",
        "PAYLOAD_DATA",
        "PAYLOAD_TYPE",
        "POST_DATA",
        "PROTOCOL",
        "REFERER",
        "REGISTRAR",
        "REGISTRY_KEY",
        "REG_KEY_CREATED",
        "REG_KEY_DELETED",
        "REG_KEY_ENUMERATED",
        "REG_KEY_MONITORED",
        "REG_KEY_OPENED",
        "REG_KEY_VALUE_CREATED",
        "REG_KEY_VALUE_DELETED",
        "REG_KEY_VALUE_MODIFIED",
        "REG_KEY_VALUE_QUERIED",
        "SIGNATURE",
        "SOURCE_PORT",
        "TELEPHONE",
        "URI",
        "USER_AGENT",
        "VOLUME_QUERIED",
        "WEBSTORAGE_KEY",
        "WEB_PAYLOAD",
        "WHOIS_NAME",
        "WHOIS_ADDR1",
        "WHOIS_ADDR2",
        "XPI"
      ],
      "order": 17
    }
  },
  "required": [
    "description",
    "indicator",
    "privacy_type",
    "share_level",
    "status",
    "type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SubmitDescriptorsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "string",
      "title": "ID",
      "description": "Identifier for the submission made",
      "order": 1
    },
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Returns true if submission was successful",
      "order": 2
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
