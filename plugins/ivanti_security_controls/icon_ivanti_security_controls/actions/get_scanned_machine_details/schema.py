# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get scanned machine details"


class Input:
    HOSTNAME = "hostname"
    SCAN_ID = "scan_id"
    

class Output:
    DETECTED_PATCHES = "detected_patches"
    PATCH_SCAN_MACHINE = "patch_scan_machine"
    

class GetScannedMachineDetailsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "hostname": {
      "type": "string",
      "title": "Hostname",
      "description": "Hostname",
      "order": 2
    },
    "scan_id": {
      "type": "string",
      "title": "Scan ID",
      "description": "Scan ID",
      "order": 1
    }
  },
  "required": [
    "hostname",
    "scan_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetScannedMachineDetailsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "detected_patches": {
      "type": "array",
      "title": "Detected Patches",
      "description": "Detected patches",
      "items": {
        "$ref": "#/definitions/detected_patch"
      },
      "order": 2
    },
    "patch_scan_machine": {
      "$ref": "#/definitions/patch_scan_machine",
      "title": "Patch Scan Machine",
      "description": "Patch scan machine",
      "order": 1
    }
  },
  "required": [
    "detected_patches",
    "patch_scan_machine"
  ],
  "definitions": {
    "detected_patch": {
      "type": "object",
      "title": "detected_patch",
      "properties": {
        "bulletinId": {
          "type": "string",
          "title": "Bulletin ID",
          "description": "Bulletin ID",
          "order": 1
        },
        "cultureName": {
          "type": "string",
          "title": "Culture Name",
          "description": "Culture name",
          "order": 2
        },
        "kb": {
          "type": "string",
          "title": "KB",
          "description": "KB issued by the vendor of the patch",
          "order": 3
        },
        "links": {
          "type": "object",
          "title": "Links",
          "description": "Shows the related URLs",
          "order": 4
        },
        "patchId": {
          "type": "string",
          "title": "Patch ID",
          "description": "Patch ID",
          "order": 6
        },
        "patchType": {
          "type": "string",
          "title": "Patch Type",
          "description": "Patch Type",
          "order": 5
        },
        "productId": {
          "type": "string",
          "title": "Product ID",
          "description": "Product ID",
          "order": 8
        },
        "productName": {
          "type": "string",
          "title": "Product Name",
          "description": "Product name",
          "order": 7
        },
        "scanItemId": {
          "type": "integer",
          "title": "Scan Item ID",
          "description": "Scan ID of the patch summary",
          "order": 9
        },
        "scanState": {
          "type": "string",
          "title": "Scan State",
          "description": "The state of the patch installation",
          "order": 10
        },
        "servicePackName": {
          "type": "string",
          "title": "Service Pack Name",
          "description": "The name of the service pack to which the patch applies",
          "order": 11
        },
        "vendorSeverity": {
          "type": "string",
          "title": "Vendor Severity",
          "description": "The vendor-defined severity of the security risk or issue that this patch corrects",
          "order": 12
        }
      },
      "required": [
        "bulletinId",
        "cultureName",
        "kb",
        "patchId",
        "patchType",
        "productId",
        "productName",
        "scanItemId",
        "scanState",
        "servicePackName",
        "vendorSeverity"
      ]
    },
    "patch_scan_machine": {
      "type": "object",
      "title": "patch_scan_machine",
      "properties": {
        "completedOn": {
          "type": "string",
          "title": "Completed On",
          "description": "The date and time that the machine assessment was completed",
          "order": 1
        },
        "domain": {
          "type": "string",
          "title": "Domain",
          "description": "The domain short-name of the assessed machine",
          "order": 2
        },
        "errorDescription": {
          "type": "string",
          "title": "Error Description",
          "description": "Description of the patch scan or resolution error",
          "order": 3
        },
        "errorNumber": {
          "type": "integer",
          "title": "Error Number",
          "description": "An error code representing a resolution or assessment failure",
          "order": 4
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "The unique identifier of the machine patch assessment",
          "order": 5
        },
        "installedPatchCount": {
          "type": "integer",
          "title": "Installed Patch Count",
          "description": "The total number of installed patches found in the assessment",
          "order": 6
        },
        "links": {
          "type": "object",
          "title": "Links",
          "description": "Shows the related URLs",
          "order": 7
        },
        "missingPatchCount": {
          "type": "integer",
          "title": "Missing Patch Count",
          "description": "The total number of missing patches detected in the assessment",
          "order": 8
        },
        "missingServicePackCount": {
          "type": "integer",
          "title": "Missing Service Pack Count",
          "description": "The total number of missing service packs detected in the assessment",
          "order": 9
        },
        "name": {
          "type": "string",
          "title": "Host Name",
          "description": "The resolved short-name or host name of the machine",
          "order": 10
        },
        "virtualMachinePath": {
          "type": "string",
          "title": "Virtual Machine Path",
          "description": "The virtual machine path if this is a hosted VM",
          "order": 11
        },
        "virtualServer": {
          "type": "string",
          "title": "Virtual Server",
          "description": "The virtual machine server name if this is a hosted VM",
          "order": 12
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
