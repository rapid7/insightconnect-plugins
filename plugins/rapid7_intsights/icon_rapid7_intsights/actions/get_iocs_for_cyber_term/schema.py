# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Gets cyber term IOCs by cyber term ID"


class Input:
    CYBERTERMID = "cyberTermId"
    IOCTYPE = "iocType"
    LIMIT = "limit"
    OFFSET = "offset"
    

class Output:
    IOCS = "iocs"
    NEXTOFFSET = "nextOffset"
    

class GetIocsForCyberTermInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "cyberTermId": {
      "type": "string",
      "title": "Cyber Term ID",
      "description": "Cyber term unique ID",
      "order": 1
    },
    "iocType": {
      "type": "array",
      "title": "IOC Type",
      "description": "IOC types to include. Allowed values \\"IpAddresses\\", \\"Urls\\", \\"Domains\\", \\"Hashes\\", \\"Emails\\"",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "limit": {
      "type": "integer",
      "title": "Limit",
      "description": "Desired number of results. Default value 100. Size range 1-1000",
      "order": 3
    },
    "offset": {
      "type": "string",
      "title": "Offset",
      "description": "Request the next page of IOCs",
      "order": 4
    }
  },
  "required": [
    "cyberTermId"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetIocsForCyberTermOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "iocs": {
      "type": "array",
      "title": "IOCs",
      "description": "List of IOCs",
      "items": {
        "$ref": "#/definitions/indicator"
      },
      "order": 1
    },
    "nextOffset": {
      "type": "string",
      "title": "Next Offset",
      "description": "Next offset value for pagination",
      "order": 2
    }
  },
  "definitions": {
    "indicator": {
      "type": "object",
      "title": "indicator",
      "properties": {
        "reportingFeeds": {
          "type": "array",
          "title": "Reporting Feeds",
          "description": "Reporting feeds list",
          "items": {
            "type": "string"
          },
          "order": 7
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "Severity type",
          "order": 6
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "IOC status",
          "order": 4
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "IOC type",
          "order": 2
        },
        "updateDate": {
          "type": "string",
          "title": "Update Date",
          "description": "IOC update date",
          "order": 3
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "IOC value",
          "order": 1
        },
        "whitelisted": {
          "type": "boolean",
          "title": "Whitelisted",
          "description": "Whitelisted",
          "order": 5
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
