# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Close the alert with the given ID"


class Input:
    ALERTID = "alertId"
    FREETEXT = "freeText"
    ISHIDDEN = "isHidden"
    RATE = "rate"
    REASON = "reason"
    

class Output:
    SUCCESS = "success"
    

class CloseAlertInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alertId": {
      "type": "string",
      "title": "Alert ID",
      "description": "Alert's unique ID",
      "order": 1
    },
    "freeText": {
      "type": "string",
      "title": "Comments",
      "description": "Alert's comments",
      "order": 3
    },
    "isHidden": {
      "type": "boolean",
      "title": "Is Hidden",
      "description": "Alert's hidden status. Delete alert from the account instance - only when reason is False Positive",
      "default": false,
      "order": 4
    },
    "rate": {
      "type": "integer",
      "title": "Rate",
      "description": "Alert's rate",
      "order": 5
    },
    "reason": {
      "type": "string",
      "title": "Reason",
      "description": "Alert's closed reason",
      "enum": [
        "Problem solved",
        "Informational only",
        "Problem we are already aware of",
        "Company owned domain",
        "Legitimate application/profile",
        "Not related to my company",
        "False positive",
        "Other"
      ],
      "order": 2
    }
  },
  "required": [
    "alertId",
    "isHidden",
    "reason"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CloseAlertOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Whether the action was successful",
      "order": 1
    }
  },
  "required": [
    "success"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
