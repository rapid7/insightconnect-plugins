# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Search alerts based on criteria"


class Input:
    ALERT_TYPE = "alert_type"
    ASSIGNED = "assigned"
    FOUND_DATE_FROM = "found_date_from"
    FOUND_DATE_TO = "found_date_to"
    HAS_INDICATORS = "has_indicators"
    IS_CLOSED = "is_closed"
    IS_FLAGGED = "is_flagged"
    MATCHED_ASSET_VALUE = "matched_asset_value"
    NETWORK_TYPE = "network_type"
    REMEDIATION_STATUS = "remediation_status"
    SEVERITY = "severity"
    SOURCE_DATE_FROM = "source_date_from"
    SOURCE_DATE_TO = "source_date_to"
    SOURCE_TYPE = "source_type"
    

class Output:
    ALERT_IDS = "alert_ids"
    

class GetAlertsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alert_type": {
      "type": "array",
      "title": "Alert Type",
      "description": "List of alert types. Allowed values: AttackIndication, DataLeakage, Phishing, BrandSecurity, ExploitableData, vip",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "assigned": {
      "type": "string",
      "title": "Alert Assignment",
      "description": "Show assigned/unassigned alerts",
      "enum": [
        "Assigned",
        "Unassigned",
        ""
      ],
      "order": 11
    },
    "found_date_from": {
      "type": "string",
      "title": "Found Date From",
      "description": "Start date (when alert found event) to fetch from in Unix Millisecond Timestamp",
      "order": 9
    },
    "found_date_to": {
      "type": "string",
      "title": "Found Date To",
      "description": "End date (when alert found event) to fetch to in Unix Millisecond Timestamp",
      "order": 10
    },
    "has_indicators": {
      "type": "boolean",
      "title": "Has Indicators",
      "description": "Show alerts with IOCs results",
      "order": 14
    },
    "is_closed": {
      "type": "string",
      "title": "Closed Status",
      "description": "Status of the alert, either closed or open",
      "enum": [
        "Closed",
        "Open",
        ""
      ],
      "order": 13
    },
    "is_flagged": {
      "type": "string",
      "title": "Alert Flag Status",
      "description": "Show flagged/unflagged alerts",
      "enum": [
        "Flagged",
        "Unflagged",
        ""
      ],
      "order": 12
    },
    "matched_asset_value": {
      "type": "array",
      "title": "Matched Asset Value",
      "description": "List of matched asset values. Examples: IP address, domain name, company name",
      "items": {
        "type": "string"
      },
      "order": 5
    },
    "network_type": {
      "type": "array",
      "title": "Network Type",
      "description": "List of network type. Allowed values: ClearWeb, DarkWeb",
      "items": {
        "type": "string"
      },
      "order": 4
    },
    "remediation_status": {
      "type": "array",
      "title": "Remediation Status",
      "description": "List of remediation statuses. Allowed values: InProgress, Pending, CancellationInProgress, Cancelled, CompletedSuccessfully, Failed",
      "items": {
        "type": "string"
      },
      "order": 6
    },
    "severity": {
      "type": "array",
      "title": "Severity",
      "description": "List of alerts severity. Allowed values: High, Medium, Low",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "source_date_from": {
      "type": "string",
      "title": "Source Date From",
      "description": "Start date (when the event occurred) to fetch from in Unix Millisecond Timestamp",
      "order": 7
    },
    "source_date_to": {
      "type": "string",
      "title": "Source Date To",
      "description": "End date (when the event occurred) to fetch to in Unix Millisecond Timestamp",
      "order": 8
    },
    "source_type": {
      "type": "array",
      "title": "Source Type",
      "description": "List of alerts source type. Allowed values: Application Store, Cyber Security Blog, Hacking News, Cyber Crime Forum, Hacktivism Forum, Social Media, Facebook, Twitter, LinkedIn, Google Plus, VK, Vimeo, YouTube, IRC Channel, IOC Block List, Credit Card Black Market, Paste Site, Data Leakage Website, Leaked Database, File Sharing Website, Gray Hat Website, Black Market, WHOIS servers, Company Website, Wikileaks, Pinterest, Tumblr, Instagram, Telegram, Webmail, Malware Analysis, Firehol, VRA, Other",
      "items": {
        "type": "string"
      },
      "order": 3
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAlertsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alert_ids": {
      "type": "array",
      "title": "Alert IDs",
      "description": "List of alert IDs",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "required": [
    "alert_ids"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
