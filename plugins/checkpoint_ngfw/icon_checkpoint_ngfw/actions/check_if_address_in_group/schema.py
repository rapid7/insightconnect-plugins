# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Checks to see if an IPv4 or IPv6 address is in an Address Group"


class Input:
    ADDRESS = "address"
    GROUP = "group"
    

class Output:
    ADDRESS_OBJECTS = "address_objects"
    FOUND = "found"
    

class CheckIfAddressInGroupInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address": {
      "type": "string",
      "title": "Address",
      "description": "IPv4 or IPv6 address to check in the group",
      "order": 2
    },
    "group": {
      "type": "string",
      "title": "Group",
      "description": "Group to check. UID is not supported. Omitting this input will check all groups",
      "order": 1
    }
  },
  "required": [
    "address"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CheckIfAddressInGroupOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address_objects": {
      "type": "array",
      "title": "Address Objects",
      "description": "The names of the address objects that match or contain the address",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "found": {
      "type": "boolean",
      "title": "Found",
      "description": "Was address found in group",
      "order": 1
    }
  },
  "required": [
    "address_objects",
    "found"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
