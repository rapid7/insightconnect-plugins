# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Install a policy to selected targets"


class Input:
    ACCESS_CONTROL_POLICY = "access_control_policy"
    DESKTOP_SECURITY_POLICY = "desktop_security_policy"
    INSTALL_ON_ALL_CLUSTER_MEMBERS_OR_FAIL = "install_on_all_cluster_members_or_fail"
    POLICY_PACKAGE = "policy_package"
    QOS_POLICY = "qos_policy"
    TARGETS = "targets"
    THREAT_PREVENTION_POLICY = "threat_prevention_policy"
    

class Output:
    SUCCESS = "success"
    

class InstallPolicyInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "access_control_policy": {
      "type": "boolean",
      "title": "Access Control Policy",
      "description": "Set to be true in order to install the Access Control policy. By default, the value is true if Access Control policy is enabled on the input policy package, otherwise false",
      "default": true,
      "order": 3
    },
    "desktop_security_policy": {
      "type": "boolean",
      "title": "Desktop Security Policy",
      "description": "Set to be true in order to install the Desktop Security policy. By default, the value is true if desktop security policy is enabled on the input policy package, otherwise false",
      "default": false,
      "order": 4
    },
    "install_on_all_cluster_members_or_fail": {
      "type": "boolean",
      "title": "Install Access Control Policy",
      "description": "Relevant for the gateway clusters. If true, the policy is installed on all the cluster members. If the installation on a cluster member fails, don't install on that cluster",
      "default": false,
      "order": 7
    },
    "policy_package": {
      "type": "string",
      "title": "Policy Package",
      "description": "Policy package to install",
      "default": "standard",
      "order": 1
    },
    "qos_policy": {
      "type": "boolean",
      "title": "QoS Policy",
      "description": "Set to be true in order to install the QoS policy. By default, the value is true if Quality-of-Service policy is enabled on the input policy package, otherwise false",
      "default": false,
      "order": 5
    },
    "targets": {
      "type": "array",
      "title": "Targets",
      "description": "On what targets to execute this command. Targets may be identified by their name, or object unique identifier",
      "items": {
        "type": "string"
      },
      "default": [
        "target name"
      ],
      "order": 2
    },
    "threat_prevention_policy": {
      "type": "boolean",
      "title": "Threat Prevention Policy",
      "description": "Set to be true in order to install the Threat Prevention policy. By default, the value is true if Threat Prevention policy is enabled on the input policy package, otherwise false",
      "default": true,
      "order": 6
    }
  },
  "required": [
    "access_control_policy",
    "desktop_security_policy",
    "install_on_all_cluster_members_or_fail",
    "policy_package",
    "qos_policy",
    "targets",
    "threat_prevention_policy"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class InstallPolicyOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Success",
      "order": 1
    }
  },
  "required": [
    "success"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
