#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "GitHub"
Vendor = "rapid7"
Version = "3.0.0"
Description = "[GitHub](https://github.com/) is a popular web-based Git or version control repository and Internet hosting service GitHub. InsightConnect plugin allows users and issues management. This plugin supports authentication from both personal and organization member accounts"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_github import connection, actions, triggers, tasks

    class ICONGithub(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_trigger(triggers.Issue())
        
            self.add_action(actions.Remove())
        
            self.add_action(actions.Create())
        
            self.add_action(actions.CreateIssueComment())
        
            self.add_action(actions.CloseIssue())
        
            self.add_action(actions.AddIssueLabel())
        
            self.add_action(actions.User())
        
            self.add_action(actions.GetRepo())
        
            self.add_action(actions.Search())
        
            self.add_action(actions.GetMyIssues())
        
            self.add_action(actions.GetIssuesByRepo())
        
            self.add_action(actions.AddCollaborator())
        
            self.add_action(actions.AddMembership())
        
            self.add_action(actions.BlockUser())
        
            self.add_action(actions.UnblockUser())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONGithub())
    cli.run()


if __name__ == "__main__":
    main()
