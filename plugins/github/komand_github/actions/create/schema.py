# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Create an issue ticket"


class Input:
    ASSIGNEE = "assignee"
    BODY = "body"
    LABELS = "labels"
    MILESTONE = "milestone"
    ORGANIZATION = "organization"
    REPOSITORY = "repository"
    TITLE = "title"
    

class Output:
    URL = "url"
    

class CreateInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assignee": {
      "type": "string",
      "title": "Assignee",
      "description": "User to assign this issue to",
      "order": 6
    },
    "body": {
      "type": "string",
      "title": "Body",
      "description": "Body text of issue",
      "order": 2
    },
    "labels": {
      "type": "string",
      "title": "Labels",
      "description": "GitHub search tags delimited by commas",
      "order": 3
    },
    "milestone": {
      "type": "number",
      "title": "Milestone",
      "description": "ID of the milestone to associate this issue with",
      "order": 7
    },
    "organization": {
      "type": "string",
      "title": "Organization",
      "description": "Organizational owner of repository",
      "order": 5
    },
    "repository": {
      "type": "string",
      "title": "Repository",
      "description": "Repository to post issue",
      "order": 4
    },
    "title": {
      "type": "string",
      "title": "Title",
      "description": "Title of issue",
      "order": 1
    }
  },
  "required": [
    "body",
    "repository",
    "title"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "url": {
      "type": "string",
      "title": "URL",
      "description": "URL",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
