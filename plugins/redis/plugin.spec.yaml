plugin_spec_version: v2
extension: plugin
products: [insightconnect]
name: redis
title: Redis
description: Redis is an in-memory data structure project implementing a distributed, in-memory key-value database with optional durability. Redis supports different kinds of abstract data structures, such as strings, lists, maps, sets, sorted sets, HyperLogLogs, bitmaps, streams, and spatial indexes.\nThis package allows you to interact with the [Redis](https://redis.io/) database API
version: 1.0.2
connection_version: 1
vendor: rapid7
support: community
status: []
supported_versions: ["2024-11-8"]
resources:
  source_url: https://github.com/rapid7/insightconnect-plugins/tree/master/plugins/redis
  license_url: https://github.com/rapid7/insightconnect-plugins/blob/master/LICENSE
  vendor_url: https://redis.io/
sdk:
  type: slim
  version: 6.2.0
  user: nobody
key_features:
  - "Set and retrieve data from Redis"
requirements:
  - "Connection information for your Redis database"
links:
  - "[REDIS](https://redis.io/)"
references:
  - "[REDIS API Docs](https://redis.io/docs/latest/apis/)"
tags:
- database
- redis
hub_tags:
  use_cases: [data_utility, reporting_and_analytics]
  keywords: [database, redis]
  features: []
version_history:
  - "1.0.2 - Bumping requirements.txt | SDK bump to 6.2.0 | Added Unit Tests"
  - "1.0.1 - New spec and help.md format for the Extension Library"
  - "1.0.0 - Support web server mode | Add actions HMSET, HMGET and HINCRBY"
  - "0.1.2 - Update to new plugin architecture, fix action 'keys'"
  - "0.1.1 - SSL bug fix in SDK"
  - "0.1.0 - Initial plugin"
connection:
  host:
    title: Host
    type: string
    description: Host, e.g. 10.4.4.4
    required: true
    example: 10.4.4.4
  port:
    title: Port
    type: integer
    description: Port
    default: 6379
    required: true
    example: 6379
  db:
    title: DB
    type: integer
    description: DB to use usually (0-15)
    default: 0
    required: true
    example: 10
actions:
  delete:
    title: Delete
    description: Delete a key
    input:
      key:
        title: Key
        type: string
        description: Key to delete
        required: true
        example: example:1234:session
    output:
      count:
        title: Count
        type: integer
        description: Number of keys deleted
        required: false
        example: 1
  set:
    title: Set
    description: This action is used to set a key to a string value. There is an optional expiration timeout which will auto remove the key when `expire` seconds have passed
    input:
      key:
        title: Key
        type: string
        description: Key to set
        required: true
        example: example:1234:session
      value:
        title: Value
        type: string
        description: Value to set
        required: true
        example: active
      expire:
        title: Expire
        type: integer
        description: Expiration in seconds
        required: false
        example: 100
    output:
      reply:
        title: Reply
        type: string
        description: Reply (usually OK)
        required: false
        example: OK
  get:
    title: Get
    description: This action is used to get a key. It will return the key at `value` if found, otherwise found will be false
    input:
      key:
        title: Key
        type: string
        description: Key to get
        required: true
        example: example:1234:active
    output:
      found:
        title: Found
        type: boolean
        description: True if found
        required: false
        example: true
      value:
        title: Value
        type: string
        description: Value
        required: false
        example: true
  keys:
    title: Keys
    description: Return keys matching pattern
    input:
      pattern:
        title: Pattern
        type: string
        description: Pattern, e.g. *o*
        required: true
        example: example:*:session
    output:
      count:
        title: Count
        type: integer
        description: Count of keys found
        required: false
        example: 1
      keys:
        title: Keys
        type: '[]string'
        description: Keys returned
        required: false
        example: [ "example:1234:session", "example:5678:session", "example:abcd:session" ]
  hash_set:
    title: Hash Set
    description: Set key's hash
    input:
      key:
        title: Key
        type: string
        description: Key
        required: true
        example: user:1234
      values:
        title: Values
        type: object
        description: Object hash field:value to set
        required: true
        example: {"name": "John Doe", "email": "johndoe@example.com", "age": "30"}
      expire:
        title: Expire
        type: integer
        description: Expiration in seconds
        required: false
        example: 100
    output:
      reply:
        title: Reply
        type: string
        description: Reply (usually OK)
        required: false
        example: OK
  hash_get:
    title: Hash Get
    description: Get key's hash
    input:
      key:
        title: Key
        type: string
        description: Key to get
        required: true
        example: user:profile
    output:
      found:
        title: Found
        type: boolean
        description: True if found
        required: false
        example: true
      values:
        title: Values
        type: object
        description: Values
        required: false
        example: { "name": "Example Name", "email": "Example.email@example.com", "age": "30" }
  list_push:
    title: List Push
    description: List key's push
    input:
      key:
        title: Key
        type: string
        description: Key
        required: true
        example: user:task_list:123
      value:
        title: Value
        type: string
        description: Value to append
        required: true
        example: Complete monthly report
      expire:
        title: Expire
        type: integer
        description: Expiration in seconds
        required: false
        example: 100
    output:
      reply:
        title: Reply
        type: string
        description: Reply (usually OK)
        required: false
        example: OK
  list_get:
    title: List Get
    description: Get all elements in a list
    input:
      key:
        title: Key
        type: string
        description: Key to get
        required: true
        example: user:task_list:123
      count:
        title: Count
        type: integer
        description: Max results to return
        default: 1000
        required: false
        example: 1000
    output:
      found:
        title: Found
        type: boolean
        description: True if found
        required: false
        example: true
      values:
        title: Values
        type: '[]string'
        description: Values
        required: false
        example: ["task1", "task2", "task3", "task4"]
  hmset:
    title: Hash Multi Set
    description: Sets the specified fields to their respective values in the hash
      stored at key
    input:
      key:
        title: Key
        type: string
        description: Key
        required: true
        example: user:profile:123
      values:
        title: Values
        type: object
        description: Object hash field:value to set
        required: true
        example: { "name": "Test Name", "email": "Test.Name@example.com", "age": "30"}
      expire:
        title: Expire
        type: integer
        description: Expiration in seconds
        required: false
        example: 100
    output:
      reply:
        title: Reply
        type: boolean
        description: Reply (usually OK)
        required: false
        example: true
  hmget:
    title: Hash Multi Get
    description: Returns the values associated with the specified fields in the hash
      stored at key
    input:
      key:
        title: Key
        type: string
        description: Key to get
        required: true
        example: user:profile:123
      fields:
        title: Fields
        type: '[]string'
        description: Fields to retrieve values from
        required: false
        example: ["name", "email"]
      get_all:
        title: Get All
        type: boolean
        description: Get all values
        required: true
        default: false
        example: false
    output:
      values:
        title: Values
        type: object
        description: Values returned from HMGET
        required: false
        example: { "name": "Ryan Test", "email": "Ryan.test@example.com" }
  hincrby:
    title: Hash Increment By
    description: Increments the number stored at field in the hash stored at key by
      increment
    input:
      key:
        title: Key
        description: Key to lookup
        type: string
        required: true
        example: user:profile:123
      field:
        title: Field
        description: Field to increment
        type: string
        required: true
        example: login_count
      value:
        title: Value
        description: How much to increment by
        type: integer
        required: true
        default: 0
        example: 1
    output:
      result:
        title: Result
        description: Result returned after operation is ran
        type: integer
        required: false
        example: 1
