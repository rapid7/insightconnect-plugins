#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "Redis"
Vendor = "rapid7"
Version = "1.0.2"
Description = "Redis is an in-memory data structure project implementing a distributed, in-memory key-value database with optional durability. Redis supports different kinds of abstract data structures, such as strings, lists, maps, sets, sorted sets, HyperLogLogs, bitmaps, streams, and spatial indexes.\nThis package allows you to interact with the [Redis](https://redis.io/) database API"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_redis import connection, actions, triggers, tasks

    class ICONRedis(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.Delete())
        
            self.add_action(actions.Set())
        
            self.add_action(actions.Get())
        
            self.add_action(actions.Keys())
        
            self.add_action(actions.HashSet())
        
            self.add_action(actions.HashGet())
        
            self.add_action(actions.ListPush())
        
            self.add_action(actions.ListGet())
        
            self.add_action(actions.Hmset())
        
            self.add_action(actions.Hmget())
        
            self.add_action(actions.Hincrby())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONRedis())
    cli.run()


if __name__ == "__main__":
    main()
