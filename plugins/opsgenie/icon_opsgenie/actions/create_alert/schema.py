# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Creates an alert for Opsgenie"


class Input:
    ACTIONS = "actions"
    ALIAS = "alias"
    DESCRIPTION = "description"
    DETAILS = "details"
    ENTITY = "entity"
    MESSAGE = "message"
    NOTE = "note"
    PRIORITY = "priority"
    RESPONDERS = "responders"
    SOURCE = "source"
    TAGS = "tags"
    USER = "user"
    VISIBLETO = "visibleTo"
    

class Output:
    ALERTID = "alertId"
    ELAPSED_TIME = "elapsed_time"
    REQUESTID = "requestId"
    RESULT = "result"
    

class CreateAlertInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "actions": {
      "type": "array",
      "title": "Actions",
      "description": "Custom actions that will be available for the alert",
      "items": {
        "type": "string"
      },
      "order": 6
    },
    "alias": {
      "type": "string",
      "title": "Alias",
      "description": "Client-defined identifier of the alert, that is also the key element of Alert deduplication",
      "order": 2
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Alert description",
      "order": 3
    },
    "details": {
      "type": "object",
      "title": "Details",
      "description": "JSON object of key-value pairs to use as custom properties of the alert",
      "order": 8
    },
    "entity": {
      "type": "string",
      "title": "Entity",
      "description": "Entity field of the alert that is generally used to specify which domain an alert is related to",
      "order": 9
    },
    "message": {
      "type": "string",
      "title": "Message",
      "description": "Message of the alert",
      "order": 1
    },
    "note": {
      "type": "string",
      "title": "Note",
      "description": "Additional note that will be added when creating the alert",
      "order": 13
    },
    "priority": {
      "type": "string",
      "title": "Priority",
      "description": "Priority level of the alert. Possible values are P1, P2, P3, P4 and P5. Default value is P3",
      "default": "P3",
      "enum": [
        "",
        "P2",
        "P1",
        "P3",
        "P4",
        "P5"
      ],
      "order": 11
    },
    "responders": {
      "type": "array",
      "title": "Responders",
      "description": "Teams, users, escalations and schedules that the alert will be routed to send notifications. \\"id/name\\": Either id or name of each responder should be provided. \\"type\\": team, user, escalation, schedule. Format: [{\\"id/name\\":\\"value\\", \\"type\\":\\"team/user/escalation/schedule\\"}]",
      "items": {
        "type": "object"
      },
      "order": 4
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Source field of the alert. Default value is IP address of the incoming request",
      "order": 10
    },
    "tags": {
      "type": "array",
      "title": "Tags",
      "description": "Tags of the alert",
      "items": {
        "type": "string"
      },
      "order": 7
    },
    "user": {
      "type": "string",
      "title": "User",
      "description": "Display name of the request owner",
      "order": 12
    },
    "visibleTo": {
      "type": "array",
      "title": "VisibleTo",
      "description": "Teams and users that the alert will become visible to without sending any notification. Type field is mandatory for each item, where possible values are team and user. In addition to the type field, either ID or name should be given for teams and either ID or username should be given for users. Please note that alert will be visible to the teams that are specified within responders field by default, so there is no need to re-specify them within visibleTo field. \\"id/name\\": Either id or name of each responder should be provided. \\"type\\": team, user, escalation, schedule. Format: [{\\"id/name\\":\\"value\\", \\"type\\":\\"team/user/escalation/schedule\\"}]",
      "items": {
        "type": "object"
      },
      "order": 5
    }
  },
  "required": [
    "message"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateAlertOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alertId": {
      "type": "string",
      "title": "Alert ID",
      "description": "ID of an created alert",
      "order": 4
    },
    "elapsed_time": {
      "type": "number",
      "title": "Elapsed Time",
      "description": "Time taken to execute",
      "order": 2
    },
    "requestId": {
      "type": "string",
      "title": "Request ID",
      "description": "ID of a executed API request",
      "order": 3
    },
    "result": {
      "type": "string",
      "title": "Result",
      "description": "Result message from API",
      "order": 1
    }
  },
  "required": [
    "alertId",
    "elapsed_time",
    "requestId",
    "result"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
