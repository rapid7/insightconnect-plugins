# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Creates a new indicator"


class Input:
    PARAMS = "params"
    SOURCE = "source"
    TYPE = "type"
    VALUE = "value"
    

class Output:
    RESPONSE = "response"
    

class AddIndicatorInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "params": {
      "type": "object",
      "title": "Parameters",
      "description": "Additional data or metadata",
      "order": 4
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Name of the source which provided this information",
      "order": 3
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "The CybOX Type associated with that Indicator",
      "enum": [
        "API Key",
        "AS Name",
        "AS Number",
        "Adjust Token",
        "Bank account",
        "Bitcoin account",
        "CRX",
        "Certificate Fingerprint",
        "Certificate Name",
        "Checksum CRC16",
        "Command Line",
        "Company name",
        "Cookie Name",
        "Country",
        "Debug Path",
        "Debug String",
        "Destination Port",
        "Device IO",
        "Document from URL",
        "Domain",
        "Email Address",
        "Email Address From",
        "Email Address Sender",
        "Email Boundary",
        "Email HELO",
        "Email Header Field",
        "Email Message ID",
        "Email Originating IP",
        "Email Reply-To",
        "Email Subject",
        "Email X-Mailer",
        "Email X-Originating IP",
        "File Created",
        "File Deleted",
        "File Moved",
        "File Name",
        "File Opened",
        "File Path",
        "File Read",
        "File Written",
        "GET Parameter",
        "HEX String",
        "HTML ID",
        "HTTP Request",
        "HTTP Response Code",
        "IMPHASH",
        "IPv4 Address",
        "IPv4 Subnet",
        "IPv6 Address",
        "IPv6 Subnet",
        "Latitude",
        "Launch Agent",
        "Location",
        "Longitude",
        "MAC Address",
        "MD5",
        "Malware Name",
        "Memory Alloc",
        "Memory Protect",
        "Memory Read",
        "Memory Written",
        "Mutant Created",
        "Mutex",
        "Name Server",
        "Other File Operation",
        "POST Data",
        "Password",
        "Password Salt",
        "Payload Data",
        "Payload Type",
        "Pipe",
        "Process Name",
        "Protocol",
        "Referer",
        "Referer of Referer",
        "Registrar",
        "Registry Key",
        "Registry Key Created",
        "Registry Key Deleted",
        "Registry Key Enumerated",
        "Registry Key Monitored",
        "Registry Key Opened",
        "Registry Key Value Created",
        "Registry Key Value Deleted",
        "Registry Key Value Modified",
        "Registry Key Value Queried",
        "SHA1",
        "SHA256",
        "SMS Origin",
        "SSDEEP",
        "Service Name",
        "Source Port",
        "TS End",
        "TS Start",
        "Telephone",
        "Time Created",
        "Time Updated",
        "Tracking ID",
        "URI",
        "User Agent",
        "User ID",
        "Victim IP",
        "Volume Queried",
        "WHOIS Address 1",
        "WHOIS Address 2",
        "WHOIS Name",
        "WHOIS Registrant Email Address",
        "WHOIS Telephone",
        "Web Payload",
        "Webstorage Key",
        "XPI"
      ],
      "order": 1
    },
    "value": {
      "type": "string",
      "title": "Value",
      "description": "The value of the Indicator",
      "order": 2
    }
  },
  "required": [
    "source",
    "type",
    "value"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddIndicatorOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "$ref": "#/definitions/add_indicator_response",
      "title": "Response",
      "description": "Response",
      "order": 1
    }
  },
  "definitions": {
    "add_indicator_response": {
      "type": "object",
      "title": "add_indicator_response",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "order": 1
        },
        "return_code": {
          "type": "integer",
          "title": "Return Code",
          "description": "The return_code is usually 0 for success, 1 for failure",
          "order": 3
        },
        "type": {
          "type": "string",
          "title": "Type",
          "order": 2
        },
        "url": {
          "type": "string",
          "title": "URL",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
