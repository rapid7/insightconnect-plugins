#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "Jira"
Vendor = "rapid7"
Version = "6.5.0"
Description = "[Jira](https://www.atlassian.com/software/jira) is an issue tracking product developed by Atlassian that allows teams to plan, track, and release great software. This plugin uses the [Jira REST API](https://developer.atlassian.com/cloud/jira/platform/rest/v2/) to programmatically manage and create issues and users. The Jira plugin supports cloud and on-premise versions of Jira Software, Jira Server, and Jira ServiceDesk products from Atlassian. Please note that only JIRA cloud is supported with InsightConnect cloud connections"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_jira import connection, actions, triggers, tasks

    class ICONJira(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_trigger(triggers.NewIssue())
        
            self.add_trigger(triggers.MonitorIssues())
        
            self.add_action(actions.TransitionIssue())
        
            self.add_action(actions.FindIssues())
        
            self.add_action(actions.AssignIssue())
        
            self.add_action(actions.LabelIssue())
        
            self.add_action(actions.GetComments())
        
            self.add_action(actions.CommentIssue())
        
            self.add_action(actions.GetIssue())
        
            self.add_action(actions.FindUsers())
        
            self.add_action(actions.DeleteUser())
        
            self.add_action(actions.CreateUser())
        
            self.add_action(actions.AttachIssue())
        
            self.add_action(actions.CreateIssue())
        
            self.add_action(actions.EditIssue())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONJira())
    cli.run()


if __name__ == "__main__":
    main()
