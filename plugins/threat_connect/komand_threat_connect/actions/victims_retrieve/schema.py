# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Retrieve ThreatConnect Victims"


class Input:
    FILTER = "filter"
    OWNER = "owner"
    

class Output:
    VICTIMS = "victims"
    

class VictimsRetrieveInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "filter": {
      "$ref": "#/definitions/filter",
      "title": "Filter",
      "description": "ThreatConnect filters",
      "order": 1
    },
    "owner": {
      "type": "string",
      "title": "Owner",
      "description": "Owner/Organization",
      "order": 2
    }
  },
  "required": [
    "owner"
  ],
  "definitions": {
    "filter": {
      "type": "object",
      "title": "filter",
      "properties": {
        "adversary_id": {
          "type": "integer",
          "title": "Adversary ID",
          "description": "Filter Groups on associated Adversary ID",
          "order": 1
        },
        "document_id": {
          "type": "integer",
          "title": "Document ID",
          "description": "Filter Groups on associated Document ID",
          "order": 4
        },
        "email_id": {
          "type": "integer",
          "title": "Email ID",
          "description": "Filter Groups on associated Email ID",
          "order": 2
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "Filter Groups on associated ID",
          "order": 3
        },
        "incident_id": {
          "type": "integer",
          "title": "Incident ID",
          "description": "Filter Groups on associated Incident ID",
          "order": 5
        },
        "indicator": {
          "type": "string",
          "title": "Indicator",
          "description": "Filter Groups on associated Indicator",
          "order": 6
        },
        "security_label": {
          "type": "string",
          "title": "Security Label",
          "description": "Filter Groups on associated Security Label",
          "order": 7
        },
        "signature_id": {
          "type": "integer",
          "title": "Signature ID",
          "description": "Filter Groups on applied Security Label",
          "order": 8
        },
        "tag": {
          "type": "string",
          "title": "Tag",
          "description": "Filter Groups on applied Tag",
          "order": 10
        },
        "threat_id": {
          "type": "integer",
          "title": "Threat ID",
          "description": "Filter Groups on associated Threat ID",
          "order": 9
        },
        "victim_id": {
          "type": "integer",
          "title": "Victim ID",
          "description": "Filter Groups on associated Victim ID",
          "order": 11
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class VictimsRetrieveOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "victims": {
      "type": "array",
      "title": "Victims",
      "description": "Victims",
      "items": {
        "$ref": "#/definitions/victim_output"
      },
      "order": 1
    }
  },
  "definitions": {
    "victim_output": {
      "type": "object",
      "title": "victim_output",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "order": 2
        },
        "nationality": {
          "type": "string",
          "title": "Nationality",
          "order": 4
        },
        "org": {
          "type": "string",
          "title": "Org",
          "order": 5
        },
        "suborg": {
          "type": "string",
          "title": "Suborg",
          "order": 6
        },
        "weblink": {
          "type": "string",
          "title": "Weblink",
          "order": 3
        },
        "work_location": {
          "type": "string",
          "title": "Work Location",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
