#!/usr/bin/env python
# GENERATED BY KOMAND SDK - DO NOT EDIT
import os
import json
from sys import argv

Name = "ThreatConnect"
Vendor = "rapid7"
Version = "1.0.2"
Description = "ThreatConnect is a Threat Intelligence Platform (TIP) that empowers large organizations to aggregate, analyze and act on their threat intelligence. The ThreatConnect plugin for Rapid7 InsightConnect allows users to view incidents, emails, threats, victims, and more"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_threat_connect import connection, actions, triggers

    class ICONThreatConnect(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.BulkIndicatorDownload())

            self.add_action(actions.CreateAdversary())

            self.add_action(actions.CreateTask())

            self.add_action(actions.DeleteAdversary())

            self.add_action(actions.EmailsRetrieve())

            self.add_action(actions.IncidentsRetrieve())

            self.add_action(actions.SignaturesRetrieve())

            self.add_action(actions.ThreatsRetrieve())

            self.add_action(actions.VictimsRetrieve())


    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONThreatConnect())
    cli.run()


if __name__ == "__main__":
    main()
