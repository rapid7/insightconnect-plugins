# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Displays a list of all your API keys in a list"


class Input:
    FIELDS = "fields"
    QUERY_OP = "query_op"
    TOP = "top"


class Output:
    ITEMS = "items"
    TOTAL_COUNT = "total_count"


class ListApiKeysInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "fields": {
      "type": "object",
      "title": "Fields",
      "description": "JSON object of fields to query by fileName or fileType",
      "order": 3
    },
    "query_op": {
      "type": "string",
      "title": "Query Operator",
      "description": "Logical operator to employ in the query. (AND/OR)",
      "default": "or",
      "enum": [
        "or",
        "and"
      ],
      "order": 2
    },
    "top": {
      "type": "integer",
      "title": "Top",
      "description": "Number of records displayed on a page",
      "enum": [
        50,
        100,
        200
      ],
      "order": 1
    }
  },
  "required": [
    "fields",
    "query_op"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListApiKeysOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "items": {
      "type": "array",
      "title": "Items",
      "description": "List of API key object responses",
      "items": {
        "$ref": "#/definitions/api_keys_list_resp"
      },
      "order": 2
    },
    "total_count": {
      "type": "integer",
      "title": "Total Count",
      "description": "The number of retrieved API keys",
      "order": 1
    }
  },
  "required": [
    "items",
    "total_count"
  ],
  "definitions": {
    "api_keys_list_resp": {
      "type": "object",
      "title": "api_keys_list_resp",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The unique identifier of the API key",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The unique name of an API key",
          "order": 2
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "The status of an API key",
          "enum": [
            "enabled",
            "disabled"
          ],
          "order": 3
        },
        "role": {
          "type": "string",
          "title": "Role",
          "description": "The user role assigned to the API key",
          "order": 4
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "A brief note about the API key",
          "order": 5
        },
        "expired_date_time": {
          "type": "string",
          "title": "Expired Date Time",
          "description": "Timestamp in ISO 8601 format indicating the expiration date of the API key",
          "order": 6
        },
        "last_used_date_time": {
          "type": "string",
          "title": "Last Used Date Time",
          "description": "The last time the API key was used in ISO 8601 format",
          "order": 7
        }
      },
      "required": [
        "expired_date_time",
        "id",
        "last_used_date_time",
        "name",
        "role"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
