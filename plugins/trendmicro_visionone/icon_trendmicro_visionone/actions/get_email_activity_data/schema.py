# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Displays search results from the Email Activity Data source in a paginated list"


class Input:
    END_DATE_TIME = "end_date_time"
    FIELDS = "fields"
    QUERY_OP = "query_op"
    SELECT = "select"
    START_DATE_TIME = "start_date_time"
    TOP = "top"


class Output:
    EMAIL_ACTIVITY_DATA_RESP = "email_activity_data_resp"


class GetEmailActivityDataInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "end_date_time": {
      "type": "string",
      "title": "End Date Time",
      "description": "Timestamp in ISO 8601 format that indicates the end of the data retrieval time range. If no value is specified, 'endDateTime' defaults to the time the request is made",
      "order": 3
    },
    "fields": {
      "type": "object",
      "title": "Fields",
      "description": "JSON object of fields to query. (uuid, tags, pname, msgUuid, ...)",
      "order": 6
    },
    "query_op": {
      "type": "string",
      "title": "Query Operator",
      "description": "Logical operator to employ in the query. (AND/OR)",
      "default": "or",
      "enum": [
        "or",
        "and"
      ],
      "order": 5
    },
    "select": {
      "type": "array",
      "title": "Select",
      "description": "List of fields to include in the search results. If no fields are specified, the query returns all supported fields",
      "items": {
        "type": "string"
      },
      "order": 4
    },
    "start_date_time": {
      "type": "string",
      "title": "Start Date Time",
      "description": "Timestamp in ISO 8601 format that indicates the start of the data retrieval range. If no value is specified, 'startDateTime' defaults to 24 hours before the request is made",
      "order": 2
    },
    "top": {
      "type": "integer",
      "title": "Top",
      "description": "Number of records displayed on a page",
      "enum": [
        50,
        100,
        500,
        1000,
        5000
      ],
      "order": 1
    }
  },
  "required": [
    "fields",
    "query_op",
    "top"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetEmailActivityDataOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "email_activity_data_resp": {
      "type": "array",
      "title": "Email Activity Data Response",
      "description": "Email Activity Data Response Array",
      "items": {
        "$ref": "#/definitions/email_activity_data_resp"
      },
      "order": 1
    }
  },
  "required": [
    "email_activity_data_resp"
  ],
  "definitions": {
    "email_activity_data_resp": {
      "type": "object",
      "title": "email_activity_data_resp",
      "properties": {
        "mail_msg_subject": {
          "type": "string",
          "title": "Mail Message Subject",
          "description": "Subject of the email message",
          "order": 1
        },
        "mail_msg_id": {
          "type": "string",
          "title": "Mail Message ID",
          "description": "Internet message ID of the email message",
          "order": 2
        },
        "msg_uuid": {
          "type": "string",
          "title": "Message UUID",
          "description": "Unique ID of the email message",
          "order": 3
        },
        "mailbox": {
          "type": "string",
          "title": "Mailbox",
          "description": "Mailbox where the email message is",
          "order": 4
        },
        "mail_sender_ip": {
          "type": "string",
          "title": "Mail Sender IP",
          "description": "Source IP address of the email message",
          "order": 5
        },
        "mail_from_addresses": {
          "type": "array",
          "title": "Mail From Addresses",
          "description": "Sender email address of the email message",
          "items": {
            "type": "string"
          },
          "order": 6
        },
        "mail_whole_header": {
          "type": "array",
          "title": "Mail Whole Header",
          "description": "Information about the header of the email message",
          "items": {
            "type": "string"
          },
          "order": 7
        },
        "mail_to_addresses": {
          "type": "array",
          "title": "Mail To Addresses",
          "description": "A list of recipient email addresses of the email message",
          "items": {
            "type": "string"
          },
          "order": 8
        },
        "mail_source_domain": {
          "type": "string",
          "title": "Mail Source Domain",
          "description": "Source domain of the email message",
          "order": 9
        },
        "search_d_l": {
          "type": "string",
          "title": "Search Data Lake",
          "description": "Search data lake",
          "order": 10
        },
        "scan_type": {
          "type": "string",
          "title": "Scan Type",
          "description": "Scan type",
          "order": 11
        },
        "event_time": {
          "type": "integer",
          "title": "Event Time",
          "description": "Date and time UTC",
          "order": 12
        },
        "org_id": {
          "type": "string",
          "title": "Organization ID",
          "description": "Unique ID used to identify an organization",
          "order": 13
        },
        "mail_urls_visible_link": {
          "type": "array",
          "title": "Mail URLs Visible Link",
          "description": "Visible link in email message",
          "items": {
            "type": "string"
          },
          "order": 14
        },
        "mail_urls_real_link": {
          "type": "array",
          "title": "Mail URLs Real Link",
          "description": "Real link in email message",
          "items": {
            "type": "string"
          },
          "order": 15
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
