# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Updates a custom script. Supported file extensions are .ps1, .sh; Custom scripts must use UTF-8 encoding"


class Input:
    DESCRIPTION = "description"
    FILE = "file"
    FILE_TYPE = "file_type"
    SCRIPT_ID = "script_id"


class Output:
    RESULT_CODE = "result_code"


class UpdateCustomScriptInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Task Description",
      "order": 3
    },
    "file": {
      "$ref": "#/definitions/file",
      "title": "File",
      "description": "Custom Script (dict of {filename(string) & content(base64(bytes))})",
      "order": 4
    },
    "file_type": {
      "type": "string",
      "title": "File Type",
      "description": "File type of custom script",
      "default": "bash",
      "enum": [
        "powershell",
        "bash"
      ],
      "order": 2
    },
    "script_id": {
      "type": "string",
      "title": "Script ID",
      "description": "Unique alphanumeric string that identifies a script file",
      "order": 1
    }
  },
  "required": [
    "file_type",
    "script_id"
  ],
  "definitions": {
    "file": {
      "id": "file",
      "type": "object",
      "title": "File",
      "description": "File Object",
      "properties": {
        "filename": {
          "type": "string",
          "title": "Filename",
          "description": "Name of file"
        },
        "content": {
          "type": "string",
          "format": "bytes",
          "title": "Content",
          "description": "File contents"
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class UpdateCustomScriptOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "result_code": {
      "type": "string",
      "title": "Result Code",
      "description": "Result Code of the update request",
      "order": 1
    }
  },
  "required": [
    "result_code"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
