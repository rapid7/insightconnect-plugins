# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Block or unblock address or network by adding or removing from a blacklist network zone"


class Input:
    ADDRESS = "address"
    BLACKLISTSTATE = "blacklistState"
    NAME = "name"


class Output:
    ZONE = "zone"


class UpdateBlacklistZonesInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address": {
      "type": "string",
      "title": "Address",
      "description": "IP address, Network range, or CIDR to block or unblock",
      "order": 2
    },
    "blacklistState": {
      "type": "boolean",
      "title": "Blacklist State",
      "description": "True to block, false to unblock",
      "default": true,
      "order": 3
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "Name of blacklist zone",
      "order": 1
    }
  },
  "required": [
    "address",
    "name"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class UpdateBlacklistZonesOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "zone": {
      "$ref": "#/definitions/zone",
      "title": "Zone",
      "description": "Information about the updated zone",
      "order": 1
    }
  },
  "required": [
    "zone"
  ],
  "definitions": {
    "zone": {
      "type": "object",
      "title": "zone",
      "properties": {
        "links": {
          "$ref": "#/definitions/zoneLinks",
          "title": "Zone Links",
          "description": "Zone links",
          "order": 1
        },
        "created": {
          "type": "string",
          "title": "Created",
          "description": "Created",
          "order": 2
        },
        "gateways": {
          "type": "array",
          "title": "Gateways",
          "description": "Gateways",
          "items": {
            "$ref": "#/definitions/gateways"
          },
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 4
        },
        "lastUpdated": {
          "type": "string",
          "title": "Last Updated",
          "description": "Last updated",
          "order": 5
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name",
          "order": 6
        },
        "proxies": {
          "type": "array",
          "title": "Proxies",
          "description": "Proxies",
          "items": {
            "$ref": "#/definitions/gateways"
          },
          "order": 7
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status",
          "order": 8
        },
        "system": {
          "type": "boolean",
          "title": "System",
          "description": "System",
          "order": 9
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 10
        }
      }
    },
    "zoneLinks": {
      "type": "object",
      "title": "zoneLinks",
      "properties": {
        "deactivate": {
          "$ref": "#/definitions/deactivate",
          "title": "Deactivate",
          "description": "Deactivate",
          "order": 1
        },
        "self": {
          "$ref": "#/definitions/deactivate",
          "title": "Self",
          "description": "Self",
          "order": 2
        }
      }
    },
    "deactivate": {
      "type": "object",
      "title": "deactivate",
      "properties": {
        "hints": {
          "$ref": "#/definitions/hints",
          "title": "Hints",
          "description": "Hints",
          "order": 1
        },
        "href": {
          "type": "string",
          "title": "HREF",
          "description": "HREF",
          "order": 2
        }
      }
    },
    "hints": {
      "type": "object",
      "title": "hints",
      "properties": {
        "allow": {
          "type": "array",
          "title": "Allowed Methods",
          "description": "Allowed Methods",
          "items": {
            "type": "string"
          },
          "order": 1
        }
      }
    },
    "gateways": {
      "type": "object",
      "title": "gateways",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 1
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Value",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
