# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Submit a file for analysis via a URL"


class Input:
    URL = "url"
    

class Output:
    SUBMISSION = "submission"
    VERDICT = "verdict"
    

class SubmitFileFromUrlInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "url": {
      "type": "string",
      "title": "URL",
      "description": "URL to submit. The URL must contain the file name, for example http://paloaltonetworks.com/folder1/my-file.pdf",
      "order": 1
    }
  },
  "required": [
    "url"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SubmitFileFromUrlOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "submission": {
      "$ref": "#/definitions/filedata",
      "title": "Submission",
      "description": "Submission",
      "order": 1
    },
    "verdict": {
      "type": "string",
      "title": "Verdict",
      "description": "One of the following verdicts: Benign, Malware, Greyware, Pending, Error, or Not found",
      "order": 2
    }
  },
  "definitions": {
    "filedata": {
      "type": "object",
      "title": "filedata",
      "properties": {
        "filename": {
          "type": "string",
          "title": "Filename",
          "order": 3
        },
        "filetype": {
          "type": "string",
          "title": "File Type",
          "order": 2
        },
        "md5": {
          "type": "string",
          "title": "MD5",
          "description": "MD5 hash of file",
          "order": 5
        },
        "sha256": {
          "type": "string",
          "title": "SHA256",
          "description": "SHA256 hash of file",
          "order": 4
        },
        "size": {
          "type": "string",
          "title": "Size",
          "description": "File size",
          "order": 6
        },
        "supported_file_type": {
          "type": "boolean",
          "title": "Supported File",
          "description": "Boolean indicating whether the filetype of the sample is supported",
          "order": 7
        },
        "url": {
          "type": "string",
          "title": "URL",
          "order": 1
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
