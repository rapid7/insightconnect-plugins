# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Check whether a host is quarantined or not"


class Input:
    AGENT_ID = "agent_id"
    

class Output:
    RESULTS = "results"
    

class CheckHostQuarantineStatusInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "agent_id": {
      "type": "string",
      "title": "Agent ID",
      "description": "The ID of the agent you want to check",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CheckHostQuarantineStatusOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "results": {
      "$ref": "#/definitions/data",
      "title": "Results",
      "description": "Results obtained for a specific agent",
      "order": 1
    }
  },
  "definitions": {
    "data": {
      "type": "object",
      "title": "data",
      "properties": {
        "_id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 1
        },
        "contained_by_actor": {
          "$ref": "#/definitions/user",
          "title": "Contained By Actor",
          "description": "Contained by actor",
          "order": 5
        },
        "contained_on": {
          "type": "string",
          "title": "Contained On",
          "description": "Date this was contained on",
          "order": 6
        },
        "excluded": {
          "type": "boolean",
          "title": "Excluded",
          "description": "Excluded",
          "order": 8
        },
        "last_sysinfo": {
          "type": "string",
          "title": "Last System Info",
          "description": "Last system info",
          "order": 2
        },
        "missing_software": {
          "type": "boolean",
          "title": "Missing Software",
          "description": "Missing software",
          "order": 9
        },
        "queued": {
          "type": "boolean",
          "title": "Queued",
          "description": "Queued",
          "order": 7
        },
        "reported_clone": {
          "type": "boolean",
          "title": "Reported Clone",
          "description": "Reported clone",
          "order": 10
        },
        "requested_by_actor": {
          "$ref": "#/definitions/user",
          "title": "Requested By Actor",
          "description": "Requested by actor",
          "order": 3
        },
        "requested_on": {
          "type": "string",
          "title": "Requested On",
          "description": "Requested on",
          "order": 4
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "State",
          "order": 11
        },
        "state_update_time": {
          "type": "string",
          "title": "State Update Time",
          "description": "State update time",
          "order": 12
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "URL",
          "order": 13
        }
      },
      "definitions": {
        "user": {
          "type": "object",
          "title": "user",
          "properties": {
            "_id": {
              "type": "integer",
              "title": "ID",
              "description": "ID",
              "order": 1
            },
            "username": {
              "type": "string",
              "title": "Username",
              "description": "Username",
              "order": 2
            }
          }
        }
      }
    },
    "user": {
      "type": "object",
      "title": "user",
      "properties": {
        "_id": {
          "type": "integer",
          "title": "ID",
          "description": "ID",
          "order": 1
        },
        "username": {
          "type": "string",
          "title": "Username",
          "description": "Username",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
