# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieves list of all incidents with specified status"


class Input:
    ASSIGNED_TO = "assigned_to"
    CREATED_TIME = "created_time"
    LAST_UPDATE_TIME = "last_update_time"
    STATUS = "status"


class Output:
    INCIDENTS = "incidents"


class ListIncidentsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assigned_to": {
      "type": "string",
      "title": "Assigned To",
      "description": "Filters incidents by who they were assigned to",
      "order": 4
    },
    "created_time": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Created Time",
      "description": "Minimum time the incident was created in ISO format",
      "order": 2
    },
    "last_update_time": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Last Update Time",
      "description": "Minimum time the incident was updated in ISO format",
      "order": 3
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Specifies the current status of incidents to show",
      "default": "All",
      "enum": [
        "All",
        "Active",
        "InProgress",
        "Resolved",
        "Redirected"
      ],
      "order": 1
    }
  },
  "required": [
    "status"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListIncidentsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "incidents": {
      "type": "array",
      "title": "Incidents",
      "description": "List of all found incidents",
      "items": {
        "$ref": "#/definitions/incident"
      },
      "order": 1
    }
  },
  "required": [
    "incidents"
  ],
  "definitions": {
    "incident": {
      "type": "object",
      "title": "incident",
      "properties": {
        "incidentId": {
          "type": "integer",
          "title": "Incident ID",
          "description": "Identifier of incident",
          "order": 1
        },
        "incidentName": {
          "type": "string",
          "title": "Incident Name",
          "description": "String value containing incident's name",
          "order": 2
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Created Time",
          "description": "Time when incident was first created",
          "order": 3
        },
        "lastUpdateTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Last Updated Time",
          "description": "Time when incident was last updated on the backend",
          "order": 4
        },
        "assignedTo": {
          "type": "string",
          "title": "Assigned To",
          "description": "Owner of the incident",
          "order": 5
        },
        "classification": {
          "type": "string",
          "title": "Classification",
          "description": "Specification for the incident, where possible values are - Unknown, FalsePositive, and TruePositive",
          "order": 6
        },
        "determination": {
          "type": "string",
          "title": "Determination",
          "description": "Specifies the determination of the incident, where possible values are - NotAvailable, Apt, Malware, SecurityPersonnel, SecurityTesting, UnwantedSoftware, and Other",
          "order": 7
        },
        "detectionSource": {
          "type": "string",
          "title": "Detection Source",
          "description": "Specifies source of detection",
          "order": 8
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Categorize incidents, where possible values are - Active, InProgress, Resolved, and Redirected",
          "order": 9
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "Indicates the possible impact on assets, where possible values are - Informational, Low, Medium, and High",
          "order": 10
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "description": "Array of custom tags associated with an incident",
          "items": {
            "type": "string"
          },
          "order": 11
        },
        "comments": {
          "type": "array",
          "title": "Comments",
          "description": "Array of comments created by secops when managing the incident",
          "items": {
            "$ref": "#/definitions/comment"
          },
          "order": 12
        },
        "alerts": {
          "type": "array",
          "title": "Alerts",
          "description": "Array containing all of the alerts related to the incident",
          "items": {
            "$ref": "#/definitions/alert"
          },
          "order": 13
        }
      }
    },
    "comment": {
      "type": "object",
      "title": "comment",
      "properties": {
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "Content of comment's message",
          "order": 1
        },
        "createdBy": {
          "type": "string",
          "title": "Created By",
          "description": "Owner of comment",
          "order": 2
        },
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Created Time",
          "description": "Time comment has been created",
          "order": 3
        }
      }
    },
    "alert": {
      "type": "object",
      "title": "alert",
      "properties": {
        "alertId": {
          "type": "string",
          "title": "Alert ID",
          "description": "Unique identifier to represent the alert",
          "order": 1
        },
        "serviceSource": {
          "type": "string",
          "title": "Service Source",
          "description": "Service that the alert originates from",
          "order": 2
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Creation Time",
          "description": "Time when alert was first created",
          "order": 3
        },
        "lastUpdatedTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Last Updated Time",
          "description": "Time when alert was last updated at the backend",
          "order": 4
        },
        "resolvedTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Resolved Time",
          "description": "Time when alert was resolved",
          "order": 5
        },
        "firstActivity": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "First Activity",
          "description": "Time when alert first reported that activity was updated at the backend",
          "order": 6
        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Brief identifying string value available for alert",
          "order": 7
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "String value describing alert",
          "order": 8
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Categorize alert, where possible values are - New, Active, and Resolved",
          "order": 9
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "Indicates the possible impact on assets, where possible values are - Informational, Low, Medium, and High",
          "order": 10
        },
        "investigationId": {
          "type": "integer",
          "title": "Investigation ID",
          "description": "Identifier of investigation triggered by this alert",
          "order": 11
        },
        "investigationState": {
          "type": "string",
          "title": "Investigation State",
          "description": "Information on the investigation's current status, where possible values are - Unknown, Terminated, SuccessfullyRemediated, Benign, Failed, PartiallyRemediated, Running, PendingApproval, PendingResource, PartiallyInvestigated, TerminatedByUser, TerminatedBySystem, Queued, InnerFailure, PreexistingAlert, UnsupportedOs, UnsupportedAlertType, and SuppressedAlert",
          "order": 12
        },
        "actorName": {
          "type": "string",
          "title": "Actor Name",
          "description": "Activity group, if any, the associated with alert",
          "order": 13
        },
        "threatFamilyName": {
          "type": "string",
          "title": "Threat Family Name",
          "description": "Thread family associated with alert",
          "order": 14
        },
        "mitreTechniques": {
          "type": "array",
          "title": "MITRE Techniques",
          "description": "The attack techniques, as aligned with the MITRE ATT&CK framework",
          "items": {
            "type": "string"
          },
          "order": 15
        },
        "devices": {
          "type": "array",
          "title": "Devices",
          "description": "All devices where alerts related to the incident were sent",
          "items": {
            "$ref": "#/definitions/device"
          },
          "order": 16
        }
      }
    },
    "device": {
      "type": "object",
      "title": "device",
      "properties": {
        "deviceId": {
          "type": "string",
          "title": "Device ID",
          "description": "Identifier of device as designated in Microsoft Defender for Endpoint",
          "order": 1
        },
        "deviceDnsName": {
          "type": "string",
          "title": "Device DNS Name",
          "description": "Fully qualified domain name for the device",
          "order": 2
        },
        "osPlatform": {
          "type": "string",
          "title": "OS Platform",
          "description": "The OS platform the device is running",
          "order": 3
        },
        "osBuild": {
          "type": "integer",
          "title": "OS Build",
          "description": "Build version for the OS the device is running",
          "order": 4
        },
        "rbacGroupName": {
          "type": "string",
          "title": "Role-Based Access Control Group Name",
          "description": "The Role-Based Access Control Group associated with the device",
          "order": 5
        },
        "firstSeen": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "First Seen",
          "description": "Time when device was first seen",
          "order": 6
        },
        "healthStatus": {
          "type": "string",
          "title": "Health Status",
          "description": "Health state of the device",
          "order": 7
        },
        "riskScore": {
          "type": "string",
          "title": "Risk Score",
          "description": "Risk score for the device",
          "order": 8
        },
        "entities": {
          "type": "array",
          "title": "Entities",
          "description": "All entities that have been identified to be part of, or related to, a given alert",
          "items": {
            "$ref": "#/definitions/entity"
          },
          "order": 9
        }
      }
    },
    "entity": {
      "type": "object",
      "title": "entity",
      "properties": {
        "entityType": {
          "type": "string",
          "title": "Entity Type",
          "description": "Entities that have been identified to be part of, or related to a given alert, where possible values are - User, Ip, Url, File, Process, MailBox, MailMessage, MailCluster, and Registry",
          "order": 1
        },
        "sha1": {
          "type": "string",
          "title": "SHA1",
          "description": "Available if entityType is File, containing file hash for alerts associated with a file or process",
          "order": 2
        },
        "sha256": {
          "type": "string",
          "title": "SHA256",
          "description": "Available if entityType is File, containing file hash for alerts associated with a file or process",
          "order": 3
        },
        "fileName": {
          "type": "string",
          "title": "File Name",
          "description": "Available if entityType is File, containing file name for alerts associated with a file or process",
          "order": 4
        },
        "filePath": {
          "type": "string",
          "title": "File Path",
          "description": "Available if entityType is File, containing file path for alerts associated with a file or process",
          "order": 5
        },
        "processId": {
          "type": "string",
          "title": "Process ID",
          "description": "Available if entityType is Process, containing identifier of the process",
          "order": 6
        },
        "processCommandLine": {
          "type": "string",
          "title": "Process Command Line",
          "description": "Available if entityType is Process, containing command line of a process",
          "order": 7
        },
        "processCreationTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Process Creation Time",
          "description": "Available if entityType is Process, containing creation time of a process",
          "order": 8
        },
        "parentProcessId": {
          "type": "integer",
          "title": "Parent Process ID",
          "description": "Available if entityType is Process, containing identifier of process parent",
          "order": 9
        },
        "parentProcessCreationTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Parent Process Creation Time",
          "description": "Available if entityType is Process, containing creation time of process parent",
          "order": 10
        },
        "ipAddress": {
          "type": "string",
          "title": "IP Address",
          "description": "Available if entityType is IP, containing IP address associated with network event",
          "order": 11
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "Available if entityType is URL, containing URL for alerts associated to network events",
          "order": 12
        },
        "accountName": {
          "type": "string",
          "title": "Account Name",
          "description": "Available if entityType is User, containing user account name",
          "order": 13
        },
        "domainName": {
          "type": "string",
          "title": "Domain Name",
          "description": "Available if entityType is User, containing domain name",
          "order": 14
        },
        "userSid": {
          "type": "string",
          "title": "User SID",
          "description": "Available if entityType is User, containing user SID",
          "order": 15
        },
        "aadUserId": {
          "type": "string",
          "title": "AAD User ID",
          "description": "Available if entityType is User, containing AAD (Azure Active Directory) user ID",
          "order": 16
        },
        "userPrincipalName": {
          "type": "string",
          "title": "User Principal Name",
          "description": "Available if entityType is User/MailBox/MailMessage, containing user principal name",
          "order": 17
        },
        "mailboxDisplayName": {
          "type": "string",
          "title": "Mailbox Display Name",
          "description": "Available if entityType is MailBox, containing mailbox display name",
          "order": 18
        },
        "mailboxAddress": {
          "type": "string",
          "title": "Mailbox Address",
          "description": "Available if entityType is User/MailBox/MailMessage, containing address of mailbox",
          "order": 19
        },
        "clusterBy": {
          "type": "string",
          "title": "Cluster By",
          "description": "Available if entityType is MailCluster, containing mail cluster",
          "order": 20
        },
        "sender": {
          "type": "string",
          "title": "Sender",
          "description": "Available if entityType is User/MailBox/MailMessage, containing sender address",
          "order": 21
        },
        "recipient": {
          "type": "string",
          "title": "Recipient",
          "description": "Available if entityType is MailMessage, containing recipient address",
          "order": 22
        },
        "subject": {
          "type": "string",
          "title": "Subject",
          "description": "Available if entityType is MailMessage, containing mail subject",
          "order": 23
        },
        "deliveryAction": {
          "type": "string",
          "title": "Delivery Action",
          "description": "Available if entityType is MailMessage, containing delivery action",
          "order": 24
        },
        "securityGroupId": {
          "type": "string",
          "title": "Security Group ID",
          "description": "Available if entityType is SecurityGroup, containing security group identifier",
          "order": 25
        },
        "securityGroupName": {
          "type": "string",
          "title": "Security Group Name",
          "description": "Available if entityType is SecurityGroup, containing security group name",
          "order": 26
        },
        "registryHive": {
          "type": "string",
          "title": "Registry Hive",
          "description": "Available if entityType is Registry, containing registry hive",
          "order": 27
        },
        "registryKey": {
          "type": "string",
          "title": "Registry Key",
          "description": "Available if entityType is Registry, containing registry key",
          "order": 28
        },
        "registryValueType": {
          "type": "string",
          "title": "Registry Value Type",
          "description": "Available if entityType is Registry, containing type of registry value",
          "order": 29
        },
        "registryValue": {
          "type": "string",
          "title": "Registry Value",
          "description": "Available if entityType is Registry, containing registry key value",
          "order": 30
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
