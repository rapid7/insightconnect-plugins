# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Execute PowerShell script encoded as a base64 file on a remote host"


class Input:
    ADDRESS = "address"
    HOST_NAME = "host_name"
    SCRIPT = "script"
    SECRET_KEY = "secret_key"
    USERNAME_AND_PASSWORD = "username_and_password"
    

class Output:
    STDERR = "stderr"
    STDOUT = "stdout"
    

class ExecuteScriptInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address": {
      "type": "string",
      "title": "Address",
      "description": "IP address of the remote host e.g. 192.168.1.1. If address is left blank PowerShell will run locally",
      "order": 2
    },
    "host_name": {
      "type": "string",
      "title": "Host Name",
      "description": "Case-sensitive name of the remote host, eg. MyComputer for Kerberos connection only",
      "order": 3
    },
    "script": {
      "type": "string",
      "title": "Script",
      "displayType": "bytes",
      "description": "PowerShell script as base64",
      "format": "bytes",
      "order": 1
    },
    "secret_key": {
      "$ref": "#/definitions/credential_secret_key",
      "title": "Secret Key",
      "description": "Credential secret key available in script as PowerShell variable (`$secret_key`)",
      "order": 4
    },
    "username_and_password": {
      "$ref": "#/definitions/credential_username_password",
      "title": "Username and Password",
      "description": "Username and password available in script as PowerShell variables (`$username`, `$password`)",
      "order": 5
    }
  },
  "required": [
    "script"
  ],
  "definitions": {
    "credential_secret_key": {
      "id": "credential_secret_key",
      "type": "object",
      "title": "Credential: Secret Key",
      "description": "A shared secret key",
      "properties": {
        "secretKey": {
          "type": "string",
          "title": "Secret Key",
          "displayType": "password",
          "description": "The shared secret key",
          "format": "password"
        }
      },
      "required": [
        "secretKey"
      ]
    },
    "credential_username_password": {
      "id": "credential_username_password",
      "type": "object",
      "title": "Credential: Username and Password",
      "description": "A username and password combination",
      "properties": {
        "password": {
          "type": "string",
          "title": "Password",
          "displayType": "password",
          "description": "The password",
          "format": "password",
          "order": 2
        },
        "username": {
          "type": "string",
          "title": "Username",
          "description": "The username to log in with",
          "order": 1
        }
      },
      "required": [
        "username",
        "password"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ExecuteScriptOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "stderr": {
      "type": "string",
      "title": "PowerShell Standard Error",
      "description": "PowerShell standard error",
      "order": 2
    },
    "stdout": {
      "type": "string",
      "title": "PowerShell Standard Output",
      "description": "PowerShell standard output",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
