plugin_spec_version: v2
extension: plugin
products: [insightconnect]
name: powershell
title: PowerShell
description: "[PowerShell](https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-6) is a task-based command-line shell and scripting language from Microsoft that helps system administrators, power-users, and InsightConnect customers rapidly automate tasks that manage operating systems and processes. This plugin runs a PowerShell script on a remote host or locally on an InsightConnect Orchestrator"
version: 3.0.7
connection_version: 3
key_features:
  - "Run a PowerShell script to manage (remote) computers from the command line"
requirements:
  - "For local Orchestrator execution, ensure connectivity to any network resources the script will use"
  - "For remote server execution, a PowerShell-enabled server and administrative credentials"
  - "When adding a password for the script, try to avoid special or escape characters such as single or double quotes"
  - "The use of round-robin DNS lookups is not supported"
sdk:
  type: slim
  version: 6.2.3
  user: root
  custom_cmd:
    - "# Add any package dependencies here"
    - ENV DEBIAN_FRONTEND noninteractive
    - "# Kerberos dependencies"
    - "RUN apt-get update && apt-get install -y \\"
    - "    apt-transport-https \\"
    - "    curl \\"
    - "    gcc python-dev libkrb5-dev \\"
    - "    git \\"
    - "    gnupg \\"
    - "    krb5-user \\"
    - "    libssl1.1 \\"
    - "    ntp adcli sssd \\"
    - "    samba-common \\"
    - "    software-properties-common \\"
    - "    sudo \\"
    - "    realmd \\"
    - "    wget"
    - ""
    - "# Local PowerShell dependencies"
    - 'RUN echo "deb http://security.ubuntu.com/ubuntu bionic-security main" | sudo tee -a /etc/apt/sources.list.d/bionic.list && \'
    - "    sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32 && sudo apt-get update && apt-cache policy libssl1.0-dev && \\"
    - "    sudo apt-get install -y libssl1.0-dev && \\"
    - "    wget http://mirrors.kernel.org/ubuntu/pool/main/i/icu/libicu52_52.1-3ubuntu0.8_amd64.deb && \\"
    - "    sudo apt install -y ./libicu52_52.1-3ubuntu0.8_amd64.deb && \\"
    - "    rm ./libicu52_52.1-3ubuntu0.8_amd64.deb && \\"
    - "    wget https://github.com/PowerShell/PowerShell/releases/download/v7.4.6/powershell_7.4.6-1.deb_amd64.deb && \\"
    - "    sudo apt install -y ./powershell_7.4.6-1.deb_amd64.deb && \\"
    - "    rm ./powershell_7.4.6-1.deb_amd64.deb"
links:
  - "[InsightConnect Powershell Plugin Guide](https://docs.rapid7.com/insightconnect/mass-delete-with-PowerShell/)"
references:
  - "[pywinrm library](https://pypi.python.org/pypi/pywinrm)"
  - "[samba-common](https://packages.debian.org/sid/samba-common)"
  - "[krb5-user](https://packages.debian.org/search?keywords=krb5-user)"
  - "[realmd](https://packages.debian.org/jessie/admin/realmd)"
supported_versions: ["PowerShell 7.4.6"]
vendor: rapid7
support: community
status: []
resources:
  source_url: https://github.com/rapid7/insightconnect-plugins/tree/master/plugins/powershell
  license_url: https://github.com/rapid7/insightconnect-plugins/blob/master/LICENSE
  vendor_url: https://www.microsoft.com
  docs_url: https://docs.rapid7.com/insightconnect/mass-delete-with-powershell/
tags:
  - powershell
  - microsoft
hub_tags:
  use_cases: [data_utility]
  keywords: [powershell, microsoft]
  features: []
troubleshooting:
  - "The use of round-robin DNS lookups is not supported"
  - "If Auth Type is set to \"None\" the PowerShell script will execute locally on the Komand host. This can also be accomplished by leaving the address field blank."
  - "The username supplied must have local admin privileges on the remote host Windows computer."
  - "When using a domain account with NTLM the username must be in the following format MYDOMAIN\\username"
  - "When using the Kerberos connection option the username must be a domain account that has permission to join computers to the domain."
  - "This plugin can connect over HTTP, the default port for this is 5985.\nIt should be noted that this type of connection is not secure as all information passed is in plain text. In addition, Windows will not allow HTTP connections by default.\n\nThe following commands must be run on the Windows computer that you want to connect to.\n\nFor more information see [Compromising Yourself with WinRM's AllowUnencrypted = True](https://blogs.msdn.microsoft.com/PowerShell/2015/10/27/compromising-yourself-with-winrms-allowunencrypted-true/)\n\n```\nwinrm set winrm/config/client/auth '@{Basic=\"true\"}'\nwinrm set winrm/config/service/auth '@{Basic=\"true\"}'\nwinrm set winrm/config/service '@{AllowUnencrypted=\"true\"}'\n```\n"
  - "When using the Kerberos connection option, the username should not include an @example.com or other domain identifier. These will be added by the plugin as needed.\nThis plugin will join the Komand docker instance to the Windows domain as a computer if the Kerberos option is used.\nFor the Execute Script action PowerShell code should be submitted as base64. This can be done by copying a `.txt` file with the PowerShell code into the plugin.\n\n_This plugin does not validate the PowerShell code._\nAny errors generated on the remote computer by the PowerShell code are forwarded to the log file.\n\nRun this PowerShell command on a Windows host first to set up a unsigned certificate for authentication:\nThis will not be needed if the host already has a SSL certificate set up for Winrm\n\n```\nInvoke-Expression ((New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))\n```"
version_history:
  - "3.0.7 - Updated dependencies | Updated SDK to the latest version"
  - "3.0.6 - Bump SDK to 6.2.0"
  - "3.0.5 - Bump requirements.txt | Bump SDK to 6.1.4 | Update help.md to enforce that the use of round-robin DNS lookups is not supported"
  - "3.0.4 - Upgrade user from `nobody` to `root` | bump SDK to 6.0.1 and switch back to `Bullseye` based SDK image"
  - "3.0.3 - Fix decoding error in `Execute Script` action | Update SDK | Update packages for alpine image"
  - "3.0.2 - Updated the SDK version to include output masking | Updated all the dependencies to the newest versions"
  - "3.0.1 - Bug fix - Fix issue where single quotes in password causes parsing error"
  - "3.0.0 - Move custom script credentials to Connection | Update runtime to insightconnect_plugin_runtime"
  - "2.2.0 - Add custom credentials in Execute Script and PowerShell String actions | Update plugin to allow unencrypted connections when connection is targeting port 5985"
  - "2.1.4 - Update `docs_url` in plugin spec with a new link to [plugin setup guide](https://docs.rapid7.com/insightconnect/mass-delete-with-powershell/)"
  - "2.1.3 - Correct spelling in help.md"
  - "2.1.2 - Add `docs_url` to plugin spec with link to [plugin setup guide](https://insightconnect.help.rapid7.com/docs/mass-delete-with-powershell)"
  - "2.1.1 - New spec and help.md format for the Extension Library"
  - "2.1.0 - Add functionality to allow CredSSP connections"
  - "2.0.1 - Fix issue with unicode characters"
  - "2.0.0 - Update to v2 Python plugin architecture | Support web server mode | Update to new credential types"
  - "1.1.0 - Add functionality to allow PowerShell to execute locally"
  - "1.0.2 - Bug fix for NTLM version `stdout` output property name in String action"
  - "1.0.1 - Bug fix for `stdout` output property name in String action"
  - "1.0.0 - Updated PyWinrm, bugfixes, add PowerShell String action"
  - "0.2.1 - Bug fix and improved error handling"
  - "0.2.0 - Allow connections on a Windows domain with Kerberos"
  - "0.1.0 - Initial plugin"
enable_cache: false
language: python
types:
  kerberos:
    kdc:
      title: KDC
      description: IP address of the Active Directory server. If Auth Type is set
        to None then leave this blank
      type: string
      required: false
    domain_name:
      title: Domain Name
      description: The fully qualified domain name of the remote host e.g. example.com.
        If Auth Type is set to None then leave this blank
      type: string
      required: false
connection:
  credentials:
    type: credential_username_password
    title: Credentials
    description: Username and password
    required: false
    example: '{"username": "user", "password": "mypassword"}'
  port:
    title: Port
    description: Port number, defaults are 5986 for SSL and 5985 for unencrypted
    type: integer
    default: 5986
    required: false
    example: 5986
  auth:
    title: Auth Type
    description: Authentication type
    type: string
    enum:
      - NTLM
      - Kerberos
      - CredSSP
      - None
    default: None
    required: true
    example: Kerberos
  kerberos:
    title: Kerberos
    description: Connection information required for Kerberos
    type: kerberos
    required: false
    example: '{"kdc": "10.0.1.11", "domain": "EXAMPLE.domain"}'
  script_secret_key:
    title: Script Secret Key
    description: Credential secret key available in script as PowerShell variable (`$secret_key`)
    type: credential_secret_key
    required: false
    example: 9de5069c5afe602b2ea0a04b66beb2c0
  script_username_and_password:
    title: Script Username and Password
    description: Username and password available in script as PowerShell variables (`$username`, `$password`)
    type: credential_username_password
    required: false
    example: '{"username": "user", "password": "mypassword"}'
actions:
  execute_script:
    title: Execute Script
    description: Execute PowerShell script encoded as a base64 file on a remote host
    input:
      script:
        title: Script
        description: PowerShell script as base64. In this action you can use `$username`, `$password`, `$secret_key` variables if defined in connection
        type: bytes
        required: true
        example: R2V0LURhdGU=
      address:
        title: Address
        description: IP address of the remote host e.g. 192.168.1.1. If address is
          left blank PowerShell will run locally
        type: string
        required: false
        example: 10.0.1.15
      host_name:
        title: Host Name
        description: Case-sensitive name of the remote host, eg. MyComputer for Kerberos
          connection only
        type: string
        required: false
        example: windows
    output:
      stdout:
        title: PowerShell Standard Output
        description: PowerShell standard output
        type: string
        required: false
        example: Tuesday, January 11, 2022 5:05:42 AM
      stderr:
        title: PowerShell Standard Error
        description: PowerShell standard error
        type: string
        required: false
        example: "Fatal error." 
  powershell_string:
    title: PowerShell String
    description: Execute PowerShell script in the form of a string
    input:
      script:
        title: Script
        description: PowerShell script as a string. In this action you can use `$username`, `$password`, `$secret_key` variables if defined in connection
        type: string
        required: true
        example: Get-Date
      address:
        title: Address
        description: IP address of the remote host e.g. 192.168.1.1. If address is
          left blank PowerShell will run locally
        type: string
        required: false
        example: 10.0.1.17
      host_name:
        title: Host Name
        description: Case-sensitive name of the remote host, eg. MyComputer for Kerberos
          connection only
        type: string
        required: false
        example: windows
    output:
      stdout:
        title: PowerShell Standard Output
        description: PowerShell standard output
        type: string
        required: false
        example: Tuesday, January 11, 2022 5:05:42 AM
      stderr:
        title: PowerShell Standard Error
        description: PowerShell standard error
        type: string
        required: false
        example: "Fatal error."
