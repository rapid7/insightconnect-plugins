# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Lookup IP addresses"


class Input:
    ADDRESSES = "addresses"
    

class Output:
    ADDRESS_RECORDS = "address_records"
    FOUND_ADDRESSES = "found_addresses"
    

class LookupAddressesInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "addresses": {
      "type": "array",
      "title": "Addresses",
      "description": "IP Addresses",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "required": [
    "addresses"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class LookupAddressesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address_records": {
      "type": "array",
      "title": "Address Records",
      "description": "IP Address Records",
      "items": {
        "$ref": "#/definitions/address_record"
      },
      "order": 2
    },
    "found_addresses": {
      "type": "array",
      "title": "Found Addresses",
      "description": "IP Addresses Found",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "definitions": {
    "address_record": {
      "type": "object",
      "title": "address_record",
      "properties": {
        "autonomous_system_name": {
          "type": "string",
          "title": "Autonomous System Name",
          "description": "Autonomous System Name",
          "order": 2
        },
        "autonomous_system_number": {
          "type": "string",
          "title": "Autonomous System Number",
          "order": 8
        },
        "country": {
          "type": "string",
          "title": "Country",
          "description": "Country Code",
          "order": 3
        },
        "ever_compromised": {
          "type": "boolean",
          "title": "Ever Compromised",
          "description": "True if ever compromised",
          "order": 4
        },
        "latitude": {
          "type": "number",
          "title": "Latitude",
          "order": 6
        },
        "longitude": {
          "type": "number",
          "title": "Longitude",
          "order": 7
        },
        "network": {
          "type": "string",
          "title": "Network",
          "description": "Network subnet",
          "order": 1
        },
        "sinkhole": {
          "type": "boolean",
          "title": "Sinkhole",
          "description": "True if sinkholed",
          "order": 5
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "description": "Tags",
          "items": {
            "type": "string"
          },
          "order": 9
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
