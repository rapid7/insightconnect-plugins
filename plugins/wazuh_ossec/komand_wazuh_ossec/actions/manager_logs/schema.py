# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Returns the 3 last months of ossec.log"


class Input:
    CATEGORY = "category"
    LIMIT = "limit"
    OFFSET = "offset"
    SEARCH = "search"
    SORT = "sort"
    TYPE_LOG = "type_log"
    

class Output:
    ERROR = "error"
    LOGS = "logs"
    TOTALITEMS = "totalItems"
    

class ManagerLogsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "category": {
      "type": "string",
      "title": "Category",
      "description": "Filters by category of log",
      "order": 5
    },
    "limit": {
      "type": "integer",
      "title": "Limit",
      "description": "Maximum number of elements to return",
      "order": 2
    },
    "offset": {
      "type": "integer",
      "title": "Offset",
      "description": "First element to return in the collection",
      "order": 1
    },
    "search": {
      "type": "string",
      "title": "Search",
      "description": "Looks for elements with the specified string",
      "order": 4
    },
    "sort": {
      "type": "string",
      "title": "Sort",
      "description": "Sorts the collection by a field or fields (separated by comma). Use +/- at the beginning to ascending or descending order",
      "order": 3
    },
    "type_log": {
      "type": "string",
      "title": "Type of Log",
      "description": "Filters by type of log",
      "enum": [
        "All",
        "Error",
        "Info"
      ],
      "order": 6
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ManagerLogsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "error": {
      "type": "integer",
      "title": "Error Code",
      "description": "Error code",
      "order": 3
    },
    "logs": {
      "type": "array",
      "title": "Logs",
      "description": "Logs",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "totalItems": {
      "type": "integer",
      "title": "Total Items",
      "description": "Total items",
      "order": 1
    }
  },
  "required": [
    "error",
    "logs",
    "totalItems"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
