# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get Details of a GreyNoise Tag"


class Input:
    TAG_NAME = "tag_name"
    

class Output:
    CATEGORY = "category"
    CVES = "cves"
    DESCRIPTION = "description"
    INTENTION = "intention"
    NAME = "name"
    RECOMMEND_BLOCK = "recommend_block"
    REFERENCES = "references"
    

class GetTagDetailsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "tag_name": {
      "type": "string",
      "title": "Tag Name",
      "description": "Tag Name to get additional Details From",
      "order": 1
    }
  },
  "required": [
    "tag_name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetTagDetailsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "category": {
      "type": "string",
      "title": "Tag Category",
      "description": "Tag Category",
      "order": 2
    },
    "cves": {
      "type": "array",
      "title": "CVEs",
      "description": "CVEs associate with Tag",
      "items": {
        "type": "object"
      },
      "order": 7
    },
    "description": {
      "type": "string",
      "title": "Tag Description",
      "description": "Description of the Tag",
      "order": 4
    },
    "intention": {
      "type": "string",
      "title": "Tag Intention",
      "description": "Tag Intention",
      "order": 3
    },
    "name": {
      "type": "string",
      "title": "Tag Name",
      "description": "Name of GreyNoise Tag",
      "order": 1
    },
    "recommend_block": {
      "type": "boolean",
      "title": "Recommend Block",
      "description": "GreyNoise Recommends Blocking IPs associated with this Tag",
      "order": 6
    },
    "references": {
      "type": "array",
      "title": "References",
      "description": "References",
      "items": {
        "type": "object"
      },
      "order": 5
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
