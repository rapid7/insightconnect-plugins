import insightconnect_plugin_runtime
from .schema import VulnerabilityLookupInput, VulnerabilityLookupOutput, Input, Output, Component

# Custom imports below
from insightconnect_plugin_runtime.exceptions import PluginException
from greynoise.exceptions import RequestFailure


class VulnerabilityLookup(insightconnect_plugin_runtime.Action):
    def __init__(self):
        super(self.__class__, self).__init__(
            name="vulnerability_lookup",
            description=Component.DESCRIPTION,
            input=VulnerabilityLookupInput(),
            output=VulnerabilityLookupOutput(),
        )

    def run(self, params={}):
        # START INPUT BINDING - DO NOT REMOVE - ANY INPUTS BELOW WILL UPDATE WITH YOUR PLUGIN SPEC AFTER REGENERATION
        cve_id = params.get(Input.CVE_ID)
        # END INPUT BINDING - DO NOT REMOVE

        try:
            resp = self.connection.gn_client.cve(cve_id)

        except RequestFailure as error:
            raise PluginException(
                cause=f"API responded with ERROR: {error.args[0]} - {error.args[1]}.",
                assistance="Please check error and try again.",
            )

        except ValueError as error:
            raise PluginException(
                cause=f"Input does not appear to be valid: {cve_id}. Error Message: {error.args[0]}",
                assistance="Please provide a valid CVE ID.",
            )

        return {
            Output.DETAILS: resp.get("details"),
            Output.ID: resp.get("id"),
            Output.TIMELINE: resp.get("timeline"),
            Output.EXPLOITATION_STATS: resp.get("exploitation_stats"),
            Output.EXPLOITATION_DETAILS: resp.get("exploitation_details"),
            Output.EXPLOITATION_ACTIVITY: resp.get("exploitation_activity"),
        }
