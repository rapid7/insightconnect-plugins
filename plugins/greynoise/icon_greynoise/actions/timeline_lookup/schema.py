# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Query a routable IPv4 address in the GreyNoise for Scanner Daily Timeline details"


class Input:
    IP_ADDRESS = "ip_address"


class Output:
    ACTIVITY = "activity"
    IP = "ip"
    METADATA = "metadata"


class TimelineLookupInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "ip_address": {
      "type": "string",
      "title": "IP Address",
      "description": "Routable IPv4 address to query",
      "order": 1
    }
  },
  "required": [
    "ip_address"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class TimelineLookupOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "activity": {
      "type": "array",
      "title": "IP Timeline Activity",
      "description": "IP Timeline Activity Events",
      "items": {
        "$ref": "#/definitions/timeline_activity"
      },
      "order": 3
    },
    "ip": {
      "type": "string",
      "title": "IP Queried",
      "description": "Value that was Queried",
      "order": 1
    },
    "metadata": {
      "$ref": "#/definitions/timeline_metadata",
      "title": "IP Timeline Metadata",
      "description": "IP Timeline Metadata",
      "order": 2
    }
  },
  "definitions": {
    "timeline_metadata": {
      "type": "object",
      "title": "timeline_metadata",
      "properties": {
        "end_time": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Timeline Period End Time",
          "description": "Timeline Period End Time",
          "order": 1
        },
        "ip": {
          "type": "string",
          "title": "IP Address",
          "description": "IP Queried",
          "order": 2
        },
        "limit": {
          "type": "integer",
          "title": "Event Limit",
          "description": "Max number of events to return",
          "order": 3
        },
        "next_cursor": {
          "type": "string",
          "title": "Cursor Value",
          "description": "Cursor value for additional pages of details",
          "order": 4
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Timeline Period Start Time",
          "description": "Timeline Period Start Time",
          "order": 5
        }
      }
    },
    "timeline_activity": {
      "type": "object",
      "title": "timeline_activity",
      "properties": {
        "asn": {
          "type": "string",
          "title": "ASN",
          "description": "ASN",
          "order": 1
        },
        "category": {
          "type": "string",
          "title": "Category",
          "description": "Category",
          "order": 2
        },
        "city": {
          "type": "string",
          "title": "City",
          "description": "City",
          "order": 3
        },
        "classification": {
          "type": "string",
          "title": "GreyNoise Classification",
          "description": "GreyNoise Classification",
          "order": 4
        },
        "country": {
          "type": "string",
          "title": "Country",
          "description": "Country",
          "order": 5
        },
        "country_code": {
          "type": "string",
          "title": "Country Code",
          "description": "Country Code",
          "order": 6
        },
        "destinations": {
          "type": "array",
          "title": "Destinations",
          "description": "Destinations",
          "items": {
            "$ref": "#/definitions/destinations"
          },
          "order": 7
        },
        "hassh_fingerprints": {
          "type": "array",
          "title": "HASSH Fingerprints",
          "description": "HASSH Fingerprints",
          "items": {
            "type": "string"
          },
          "order": 8
        },
        "http_paths": {
          "type": "array",
          "title": "HTTP Web Paths",
          "description": "HTTP Web Paths",
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "http_user_agents": {
          "type": "array",
          "title": "HTTP User Agents",
          "description": "HTTP User Agents",
          "items": {
            "type": "string"
          },
          "order": 10
        },
        "ja3_fingerprints": {
          "type": "array",
          "title": "JA3 Fingerprints",
          "description": "JA3 Fingerprints",
          "items": {
            "type": "string"
          },
          "order": 11
        },
        "organization": {
          "type": "string",
          "title": "Organization",
          "description": "Organization",
          "order": 12
        },
        "protocols": {
          "type": "array",
          "title": "Protocols",
          "description": "Destinations",
          "items": {
            "$ref": "#/definitions/protocols"
          },
          "order": 13
        },
        "rdns": {
          "type": "string",
          "title": "rDNS",
          "description": "rDNS",
          "order": 14
        },
        "region": {
          "type": "string",
          "title": "Region",
          "description": "Region",
          "order": 15
        },
        "spoofable": {
          "type": "boolean",
          "title": "Spoofable",
          "description": "Spoofable",
          "order": 16
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "description": "Tags",
          "items": {
            "$ref": "#/definitions/tags"
          },
          "order": 17
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Event Timestamp",
          "description": "Event Timestamp",
          "order": 18
        },
        "tor": {
          "type": "boolean",
          "title": "Tor Exit Node",
          "description": "Tor Exit Node",
          "order": 19
        },
        "vpn": {
          "type": "boolean",
          "title": "VPN",
          "description": "VPN",
          "order": 20
        },
        "vpn_service": {
          "type": "string",
          "title": "VPN Service",
          "description": "VPN Service",
          "order": 21
        }
      }
    },
    "destinations": {
      "type": "object",
      "title": "destinations",
      "properties": {
        "country": {
          "type": "string",
          "title": "Country",
          "description": "Country",
          "order": 1
        },
        "country_code": {
          "type": "string",
          "title": "Country Code",
          "description": "Country Code",
          "order": 2
        }
      }
    },
    "protocols": {
      "type": "object",
      "title": "protocols",
      "properties": {
        "port": {
          "type": "integer",
          "title": "Port",
          "description": "Port",
          "order": 1
        },
        "transport_protocol": {
          "type": "string",
          "title": "Transport Protocol",
          "description": "Transport Protocol",
          "order": 2
        },
        "app_protocol": {
          "type": "string",
          "title": "App Protocol",
          "description": "App Protocol",
          "order": 3
        }
      }
    },
    "tags": {
      "type": "object",
      "title": "tags",
      "properties": {
        "category": {
          "type": "string",
          "title": "Tag Category",
          "description": "Tag Category",
          "order": 1
        },
        "description": {
          "type": "string",
          "title": "Tag Description",
          "description": "Tag Description",
          "order": 2
        },
        "intention": {
          "type": "string",
          "title": "Tag Intention",
          "description": "Tag Intention",
          "order": 3
        },
        "name": {
          "type": "string",
          "title": "Tag Name",
          "description": "Tag Name",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
