# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Scan Dynamo and return any objects found"


class Input:
    INDEX = "index"
    PARAMS = "params"
    TABLE = "table"
    

class Output:
    COUNT = "Count"
    ITEMS = "Items"
    RESPONSEMETADATA = "ResponseMetadata"
    SCANNEDCOUNT = "ScannedCount"
    

class ScanInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "index": {
      "type": "string",
      "title": "Index",
      "description": "The index to use. If empty, defaults to a full Scan of the table",
      "order": 2
    },
    "params": {
      "type": "object",
      "title": "Params",
      "description": "The params to query with, as key/value pairs",
      "order": 3
    },
    "table": {
      "type": "string",
      "title": "Table",
      "description": "The table name to search",
      "order": 1
    }
  },
  "required": [
    "table"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ScanOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "Count": {
      "type": "integer",
      "title": "Count",
      "description": "Items count",
      "order": 1
    },
    "Items": {
      "type": "array",
      "title": "Items",
      "description": "Database items",
      "items": {
        "type": "object"
      },
      "order": 2
    },
    "ResponseMetadata": {
      "$ref": "#/definitions/ResponseMetadata",
      "title": "Response Metadata",
      "description": "Response metadata",
      "order": 3
    },
    "ScannedCount": {
      "type": "integer",
      "title": "Scanned Count",
      "description": "Scanned count",
      "order": 4
    }
  },
  "required": [
    "Count",
    "Items"
  ],
  "definitions": {
    "HTTPHeaders": {
      "type": "object",
      "title": "HTTPHeaders",
      "properties": {
        "connection": {
          "type": "string",
          "title": "Connection",
          "description": "Connection",
          "order": 1
        },
        "content-length": {
          "type": "string",
          "title": "Content-Length",
          "description": "Content-length",
          "order": 2
        },
        "content-type": {
          "type": "string",
          "title": "Content-Type",
          "description": "Content-type",
          "order": 3
        },
        "date": {
          "type": "string",
          "title": "Date",
          "description": "Date",
          "order": 4
        },
        "server": {
          "type": "string",
          "title": "Server",
          "description": "Server",
          "order": 5
        },
        "x-amz-crc32": {
          "type": "string",
          "title": "X-Amz-Crc32",
          "description": "X-amz-crc32",
          "order": 6
        },
        "x-amzn-requestid": {
          "type": "string",
          "title": "X-Amzn-RequestID",
          "description": "X-amzn-requestID",
          "order": 7
        }
      }
    },
    "ResponseMetadata": {
      "type": "object",
      "title": "ResponseMetadata",
      "properties": {
        "HTTPHeaders": {
          "$ref": "#/definitions/HTTPHeaders",
          "title": "HTTP Headers",
          "description": "HTTP headers",
          "order": 1
        },
        "HTTPStatusCode": {
          "type": "integer",
          "title": "HTTP Status Code",
          "description": "HTTP status code",
          "order": 2
        },
        "RequestId": {
          "type": "string",
          "title": "Request ID",
          "description": "Request ID",
          "order": 3
        },
        "RetryAttempts": {
          "type": "integer",
          "title": "Retry Attempts",
          "description": "Retry attempts",
          "order": 4
        }
      },
      "definitions": {
        "HTTPHeaders": {
          "type": "object",
          "title": "HTTPHeaders",
          "properties": {
            "connection": {
              "type": "string",
              "title": "Connection",
              "description": "Connection",
              "order": 1
            },
            "content-length": {
              "type": "string",
              "title": "Content-Length",
              "description": "Content-length",
              "order": 2
            },
            "content-type": {
              "type": "string",
              "title": "Content-Type",
              "description": "Content-type",
              "order": 3
            },
            "date": {
              "type": "string",
              "title": "Date",
              "description": "Date",
              "order": 4
            },
            "server": {
              "type": "string",
              "title": "Server",
              "description": "Server",
              "order": 5
            },
            "x-amz-crc32": {
              "type": "string",
              "title": "X-Amz-Crc32",
              "description": "X-amz-crc32",
              "order": 6
            },
            "x-amzn-requestid": {
              "type": "string",
              "title": "X-Amzn-RequestID",
              "description": "X-amzn-requestID",
              "order": 7
            }
          }
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
