# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Launch remediation for patch and worklet remediations"


class Input:
    ACTION_SET_ID = "action_set_id"
    ACTIONS = "actions"
    ORG_ID = "org_id"


class Output:
    SUCCESS = "success"


class ExecuteVulnerabilitySyncActionsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "action_set_id": {
      "type": "integer",
      "title": "Action Set ID",
      "description": "Identifier of the action set",
      "order": 2
    },
    "actions": {
      "type": "array",
      "title": "Actions",
      "description": "List of remediations to execute",
      "items": {
        "$ref": "#/definitions/action_set_action"
      },
      "order": 3
    },
    "org_id": {
      "type": "integer",
      "title": "Organization ID",
      "description": "Identifier of organization",
      "order": 1
    }
  },
  "required": [
    "action_set_id",
    "actions",
    "org_id"
  ],
  "definitions": {
    "action_set_action": {
      "type": "object",
      "title": "action_set_action",
      "properties": {
        "action": {
          "type": "string",
          "title": "Action",
          "description": "The action to execute for the associated remediation",
          "default": "patch-now",
          "enum": [
            "patch-now",
            "patch-with-worklet"
          ],
          "order": 1
        },
        "solution_id": {
          "type": "integer",
          "title": "Solution ID",
          "description": "The solution ID associated with the action",
          "order": 2
        }
      },
      "required": [
        "action",
        "solution_id"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ExecuteVulnerabilitySyncActionsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Was operation successful",
      "order": 1
    }
  },
  "required": [
    "success"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
