# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieve the issues identified for a specified vulnerability sync action set"


class Input:
    ACTION_SET_ID = "action_set_id"
    ISSUE_TYPE_IN = "issue_type_in"
    ORG_ID = "org_id"


class Output:
    ISSUES = "issues"


class ListVulnerabilitySyncActionSetIssuesInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "action_set_id": {
      "type": "integer",
      "title": "Action Set ID",
      "description": "Identifier of the action set",
      "order": 2
    },
    "issue_type_in": {
      "type": "array",
      "title": "Issue Type In",
      "description": "Filter by issue type",
      "items": {
        "type": "string"
      },
      "order": 3
    },
    "org_id": {
      "type": "integer",
      "title": "Organization ID",
      "description": "Identifier of organization",
      "order": 1
    }
  },
  "required": [
    "action_set_id",
    "org_id"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListVulnerabilitySyncActionSetIssuesOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "issues": {
      "type": "array",
      "title": "Vulnerability Sync Action Set Issues",
      "description": "Issues associated with the specified vulnerability sync action_set",
      "items": {
        "$ref": "#/definitions/action_set_issue"
      },
      "order": 1
    }
  },
  "required": [
    "issues"
  ],
  "definitions": {
    "action_set_issue": {
      "type": "object",
      "title": "action_set_issue",
      "properties": {
        "id": {
          "type": "integer",
          "title": "Issue ID",
          "description": "Identifier of the issue",
          "order": 1
        },
        "issue_type": {
          "type": "string",
          "title": "Issue Type",
          "description": "Type of issue",
          "order": 2
        },
        "issue_details": {
          "type": "object",
          "title": "Issue Details",
          "description": "Details of the issue",
          "order": 3
        }
      },
      "required": [
        "id",
        "issue_details",
        "issue_type"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
