# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Update an Automox group"


class Input:
    COLOR = "color"
    GROUP_ID = "group_id"
    NAME = "name"
    NOTES = "notes"
    ORG_ID = "org_id"
    PARENT_SERVER_GROUP_ID = "parent_server_group_id"
    POLICIES = "policies"
    REFRESH_INTERVAL = "refresh_interval"
    

class Output:
    SUCCESS = "success"
    

class UpdateGroupInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "color": {
      "type": "string",
      "title": "Group Color",
      "description": "Automox console highlight color for the group. Value should be a valid Hex color code",
      "order": 6
    },
    "group_id": {
      "type": "integer",
      "title": "Group ID",
      "description": "Identifier of the Automox group",
      "order": 2
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "Name of the group",
      "order": 3
    },
    "notes": {
      "type": "string",
      "title": "Group Notes",
      "description": "Define notes for the group",
      "order": 7
    },
    "org_id": {
      "type": "integer",
      "title": "Organization ID",
      "description": "Identifier of organization",
      "order": 1
    },
    "parent_server_group_id": {
      "type": "integer",
      "title": "Parent Server Group ID",
      "description": "Name of the parent group. Defaults to Default Group ID if omitted",
      "order": 5
    },
    "policies": {
      "type": "array",
      "title": "Policies IDs",
      "description": "List of policy IDs to assign to group",
      "items": {
        "type": "integer"
      },
      "order": 8
    },
    "refresh_interval": {
      "type": "integer",
      "title": "Refresh Interval",
      "description": "Frequency of device refreshes in minutes",
      "default": 1440,
      "order": 4
    }
  },
  "required": [
    "group_id",
    "name",
    "refresh_interval"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class UpdateGroupOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Was operation successful",
      "order": 1
    }
  },
  "required": [
    "success"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
