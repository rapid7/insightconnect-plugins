# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Create a new EasyVista ticket. The only required input parameter is `catalog`. All other input parameters are optional, and you can only provide the ones you need"


class Input:
    ASSET_ID = "asset_id"
    ASSET_NAME = "asset_name"
    ASSET_TAG = "asset_tag"
    CATALOG = "catalog"
    CI_ASSET_TAG = "ci_asset_tag"
    CI_ID = "ci_id"
    CI_NAME = "ci_name"
    DEPARTMENT_CODE = "department_code"
    DEPARTMENT_ID = "department_id"
    DESCRIPTION = "description"
    EXTERNAL_REFERENCE = "external_reference"
    IMPACT_ID = "impact_id"
    LOCATION_CODE = "location_code"
    LOCATION_ID = "location_id"
    ORIGIN = "origin"
    PARENTREQUEST = "parentrequest"
    PHONE = "phone"
    RECIPIENT_ID = "recipient_id"
    RECIPIENT_IDENTIFICATION = "recipient_identification"
    RECIPIENT_MAIL = "recipient_mail"
    RECIPIENT_NAME = "recipient_name"
    REQUESTOR_IDENTIFICATION = "requestor_identification"
    REQUESTOR_MAIL = "requestor_mail"
    REQUESTOR_NAME = "requestor_name"
    SEVERITY_ID = "severity_id"
    SUBMIT_DATE = "submit_date"
    TITLE = "title"
    URGENCY_ID = "urgency_id"
    

class Output:
    RESULT = "result"
    

class CreateTicketInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "asset_id": {
      "type": "string",
      "title": "Asset ID",
      "description": "Identifier of the asset",
      "order": 2
    },
    "asset_name": {
      "type": "string",
      "title": "Asset Name",
      "description": "Name of the asset",
      "order": 4
    },
    "asset_tag": {
      "type": "string",
      "title": "Asset Tag",
      "description": "Tag of the asset",
      "order": 3
    },
    "catalog": {
      "type": "string",
      "title": "Catalog",
      "description": "Identifier (GUID) or code for the subject of the ticket",
      "order": 1
    },
    "ci_asset_tag": {
      "type": "string",
      "title": "CI Asset Tag",
      "description": "Asset tag of the Configuration Item",
      "order": 6
    },
    "ci_id": {
      "type": "string",
      "title": "CI ID",
      "description": "Identifier of the Configuration Item",
      "order": 5
    },
    "ci_name": {
      "type": "string",
      "title": "CI Name",
      "description": "Name of the Configuration Item",
      "order": 7
    },
    "department_code": {
      "type": "string",
      "title": "Department Code",
      "description": "Department code of the requestor",
      "order": 9
    },
    "department_id": {
      "type": "string",
      "title": "Department ID",
      "description": "Department ID of the requestor",
      "order": 8
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Description of the ticket",
      "order": 10
    },
    "external_reference": {
      "type": "string",
      "title": "External Reference",
      "description": "Identifier of the object attributed by an external application",
      "order": 12
    },
    "impact_id": {
      "type": "string",
      "title": "Impact ID",
      "description": "Identifier of the impact level",
      "order": 11
    },
    "location_code": {
      "type": "string",
      "title": "Location Code",
      "description": "Location code of the requestor",
      "order": 14
    },
    "location_id": {
      "type": "string",
      "title": "Location ID",
      "description": "Location ID of the requestor",
      "order": 13
    },
    "origin": {
      "type": "string",
      "title": "Origin",
      "description": "Identifier of the origin",
      "order": 15
    },
    "parentrequest": {
      "type": "string",
      "title": "Parent Request",
      "description": "Identifier of the related request (parent request) attached to the object",
      "order": 16
    },
    "phone": {
      "type": "string",
      "title": "Phone",
      "description": "Phone number of the requestor",
      "order": 17
    },
    "recipient_id": {
      "type": "string",
      "title": "Recipient ID",
      "description": "Identifier of the recipient",
      "order": 18
    },
    "recipient_identification": {
      "type": "string",
      "title": "Recipient Identification",
      "description": "Employee number of the recipient",
      "order": 19
    },
    "recipient_mail": {
      "type": "string",
      "title": "Recipient Mail",
      "description": "Email address of the recipient",
      "order": 20
    },
    "recipient_name": {
      "type": "string",
      "title": "Recipient Name",
      "description": "Name of the recipient",
      "order": 21
    },
    "requestor_identification": {
      "type": "string",
      "title": "Requestor Identification",
      "description": "Employee number of the requestor",
      "order": 22
    },
    "requestor_mail": {
      "type": "string",
      "title": "Requestor Mail",
      "description": "Email address of the requestor",
      "order": 23
    },
    "requestor_name": {
      "type": "string",
      "title": "Requestor Name",
      "description": "Name of the requestor",
      "order": 24
    },
    "severity_id": {
      "type": "string",
      "title": "Severity ID",
      "description": "Identifier of the severity level",
      "order": 25
    },
    "submit_date": {
      "type": "string",
      "title": "Submit Date",
      "description": "Creation date of the ticket",
      "order": 26
    },
    "title": {
      "type": "string",
      "title": "Title",
      "description": "Title of the ticket",
      "order": 27
    },
    "urgency_id": {
      "type": "string",
      "title": "Urgency ID",
      "description": "Identifier of the urgency level",
      "order": 28
    }
  },
  "required": [
    "catalog"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateTicketOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "result": {
      "$ref": "#/definitions/ticket_data",
      "title": "Result",
      "description": "Result that includes URL link (HREF) and reference number of the created ticket",
      "order": 1
    }
  },
  "required": [
    "result"
  ],
  "definitions": {
    "ticket_data": {
      "type": "object",
      "title": "ticket_data",
      "properties": {
        "href_hyperlink": {
          "type": "string",
          "title": "HREF Hyperlink",
          "description": "URL link (HREF) to the ticket",
          "order": 1
        },
        "reference_number": {
          "type": "string",
          "title": "Reference Number",
          "description": "Reference number of the ticket",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
