# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Update an EasyVista ticket"


class Input:
    ANALYTICAL_CHARGE_ID = "analytical_charge_id"
    ASSET_ID = "asset_id"
    ASSET_SERIAL = "asset_serial"
    ASSET_TAG = "asset_tag"
    CI = "ci"
    CI_ID = "ci_id"
    CI_SERIAL = "ci_serial"
    COMMENT = "comment"
    CONTINUITY_PLAN_ID = "continuity_plan_id"
    DESCRIPTION = "description"
    EXTERNAL_REFERENCE = "external_reference"
    IMPACT_ID = "impact_id"
    KNOWN_PROBLEMS_ID = "known_problems_id"
    NET_PRICE_CUR_ID = "net_price_cur_id"
    ORIGIN_TOOL_ID = "origin_tool_id"
    OWNER_ID = "owner_id"
    OWNING_GROUP_ID = "owning_group_id"
    RELEASE_ID = "release_id"
    RENTAL_NET_PRICE_CUR_ID = "rental_net_price_cur_id"
    REQUEST_ORIGIN_ID = "request_origin_id"
    REQUESTOR_PHONE = "requestor_phone"
    RFC_NUMBER = "rfc_number"
    ROOT_CAUSE_ID = "root_cause_id"
    SUBMIT_DATE_UT = "submit_date_ut"
    SYSTEM_ID = "system_id"
    TITLE = "title"
    URGENCY_ID = "urgency_id"
    

class Output:
    RESULT = "result"
    

class UpdateTicketInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "analytical_charge_id": {
      "type": "string",
      "title": "Analytical Charge ID",
      "description": "Analytical charge ID or code",
      "order": 2
    },
    "asset_id": {
      "type": "string",
      "title": "Asset ID",
      "description": "Identifier of the asset",
      "order": 3
    },
    "asset_serial": {
      "type": "string",
      "title": "Asset Serial",
      "description": "Serial number of the asset",
      "order": 4
    },
    "asset_tag": {
      "type": "string",
      "title": "Asset Tag",
      "description": "Tag of the asset",
      "order": 5
    },
    "ci": {
      "type": "string",
      "title": "CI",
      "description": "Name of the Configuration Item",
      "order": 6
    },
    "ci_id": {
      "type": "string",
      "title": "CI ID",
      "description": "Identifier of the Configuration Item",
      "order": 7
    },
    "ci_serial": {
      "type": "string",
      "title": "CI Serial",
      "description": "Serial number of the Configuration Item",
      "order": 8
    },
    "comment": {
      "type": "string",
      "title": "Comment",
      "description": "Comment that explains the reason for the update",
      "order": 9
    },
    "continuity_plan_id": {
      "type": "string",
      "title": "Continuity Plan ID",
      "description": "Continuity plan ID or code",
      "order": 10
    },
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Description of the ticket",
      "order": 11
    },
    "external_reference": {
      "type": "string",
      "title": "External Reference",
      "description": "Identifier of the object used by an external application",
      "order": 12
    },
    "impact_id": {
      "type": "string",
      "title": "Impact ID",
      "description": "Identifier of the impact level",
      "order": 13
    },
    "known_problems_id": {
      "type": "string",
      "title": "Known Problems ID",
      "description": "Identifier of the known problems",
      "order": 14
    },
    "net_price_cur_id": {
      "type": "string",
      "title": "Price Currency ID",
      "description": "Price currency or currency ID",
      "order": 15
    },
    "origin_tool_id": {
      "type": "string",
      "title": "Origin Tool ID",
      "description": "Identifier of the origin tool",
      "order": 16
    },
    "owner_id": {
      "type": "string",
      "title": "Owner ID",
      "description": "Identifier of the owner (Employee ID or name)",
      "order": 17
    },
    "owning_group_id": {
      "type": "string",
      "title": "Owning Group ID",
      "description": "Owning group ID or name",
      "order": 18
    },
    "release_id": {
      "type": "string",
      "title": "Release ID",
      "description": "Release ID or code",
      "order": 19
    },
    "rental_net_price_cur_id": {
      "type": "string",
      "title": "Rental Price Currency ID",
      "description": "Rental price currency or currency ID",
      "order": 20
    },
    "request_origin_id": {
      "type": "string",
      "title": "Request Origin ID",
      "description": "Request origin name or ID",
      "order": 21
    },
    "requestor_phone": {
      "type": "string",
      "title": "Requestor Phone",
      "description": "Phone number of the requestor",
      "order": 22
    },
    "rfc_number": {
      "type": "string",
      "title": "Reference Number",
      "description": "Reference number of the ticket to be updated",
      "order": 1
    },
    "root_cause_id": {
      "type": "string",
      "title": "Root Cause ID",
      "description": "Root Cause ID or name",
      "order": 23
    },
    "submit_date_ut": {
      "type": "string",
      "title": "Submit Date",
      "description": "Creation date of the ticket",
      "order": 24
    },
    "system_id": {
      "type": "string",
      "title": "System ID",
      "description": "System ID or name",
      "order": 25
    },
    "title": {
      "type": "string",
      "title": "Title",
      "description": "Title of the ticket",
      "order": 26
    },
    "urgency_id": {
      "type": "string",
      "title": "Urgency ID",
      "description": "Identifier of the urgency level",
      "order": 27
    }
  },
  "required": [
    "rfc_number"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class UpdateTicketOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "result": {
      "$ref": "#/definitions/ticket_data",
      "title": "Result",
      "description": "Result that includes URL link (HREF) and reference number of the updated ticket",
      "order": 1
    }
  },
  "required": [
    "result"
  ],
  "definitions": {
    "ticket_data": {
      "type": "object",
      "title": "ticket_data",
      "properties": {
        "href_hyperlink": {
          "type": "string",
          "title": "HREF Hyperlink",
          "description": "URL link (HREF) to the ticket",
          "order": 1
        },
        "reference_number": {
          "type": "string",
          "title": "Reference Number",
          "description": "Reference number of the ticket",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
