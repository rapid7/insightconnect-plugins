# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Monitor for new activities, events, and threats"


class Input:
    COLLECTACTIVITIES = "collectActivities"
    COLLECTEVENTS = "collectEvents"
    COLLECTTHREATS = "collectThreats"


class State:
    pass


class Output:
    LOGS = "logs"


class MonitorActivitiesAndEventsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "collectActivities": {
      "type": "boolean",
      "title": "Collect Activites",
      "description": "Whether to collect activity logs (note requires appropriate permissions assigned to user)",
      "default": true,
      "order": 1
    },
    "collectEvents": {
      "type": "boolean",
      "title": "Collect Events",
      "description": "Whether to collect device control events logs (note requires appropriate permissions assigned to user)",
      "default": true,
      "order": 2
    },
    "collectThreats": {
      "type": "boolean",
      "title": "Collect Threats",
      "description": "Whether to collect threats logs (note requires appropriate permissions assigned to user)",
      "default": true,
      "order": 3
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MonitorActivitiesAndEventsState(insightconnect_plugin_runtime.State):
    schema = json.loads(r"""
   {}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MonitorActivitiesAndEventsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "array",
  "title": "Logs",
  "description": "List of activity, event and threat logs within the specified time range",
  "items": {
    "type": "object"
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
