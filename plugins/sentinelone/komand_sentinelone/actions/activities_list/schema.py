# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get a list of activities"


class Input:
    ACCOUNTIDS = "accountIds"
    ACTIVITYTYPES = "activityTypes"
    AGENTIDS = "agentIds"
    COUNTONLY = "countOnly"
    CREATEDATBETWEEN = "createdAtBetween"
    CREATEDATGT = "createdAtGt"
    CREATEDATGTE = "createdAtGte"
    CREATEDATLT = "createdAtLt"
    CREATEDATLTE = "createdAtLte"
    GROUPIDS = "groupIds"
    IDS = "ids"
    INCLUDEHIDDEN = "includeHidden"
    LIMIT = "limit"
    SITEIDS = "siteIds"
    SKIP = "skip"
    SKIPCOUNT = "skipCount"
    SORTBY = "sortBy"
    SORTORDER = "sortOrder"
    THREATIDS = "threatIds"
    USEREMAIL = "userEmail"
    USERIDS = "userIds"


class Output:
    DATA = "data"
    TOTALITEMS = "totalItems"


class ActivitiesListInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "accountIds": {
      "type": "array",
      "title": "Account IDs",
      "description": "List of Account IDs to filter by",
      "items": {
        "type": "string"
      },
      "order": 14
    },
    "activityTypes": {
      "type": "array",
      "title": "Activity Types",
      "description": "Return only these activity codes",
      "items": {
        "type": "string"
      },
      "order": 17
    },
    "agentIds": {
      "type": "array",
      "title": "Agent IDs",
      "description": "Return activities related to specified agent IDs",
      "items": {
        "type": "string"
      },
      "order": 5
    },
    "countOnly": {
      "type": "boolean",
      "title": "Count Only",
      "description": "If true, only total number of items will be returned, without any of the actual objects",
      "order": 13
    },
    "createdAtBetween": {
      "type": "string",
      "title": "Between Dates",
      "description": "Return activities created within this range (inclusive), example 1514978764288-1514978999999",
      "order": 12
    },
    "createdAtGt": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Greater than Date",
      "description": "Return activities created after or at this date in ISO-8601, example 2020-12-18T18:49:26.257525Z",
      "order": 10
    },
    "createdAtGte": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Greater or Equal Date",
      "description": "Return activities created after or at this date in ISO-8601, example 2020-12-18T18:49:26.257525Z",
      "order": 11
    },
    "createdAtLt": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Less than Date",
      "description": "Return activities created before this date in ISO-8601",
      "order": 8
    },
    "createdAtLte": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "Less or Equal Date",
      "description": "Return activities created before or at this date in ISO-8601, example 2020-12-18T18:49:26.257525Z",
      "order": 9
    },
    "groupIds": {
      "type": "array",
      "title": "Group IDs",
      "description": "List of Group IDs",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "ids": {
      "type": "array",
      "title": "Activity IDs",
      "description": "List of Activity IDs",
      "items": {
        "type": "string"
      },
      "order": 7
    },
    "includeHidden": {
      "type": "boolean",
      "title": "Include Hidden",
      "description": "Include internal activities hidden from display",
      "order": 2
    },
    "limit": {
      "type": "integer",
      "title": "Limit",
      "description": "Limit number of returned items (1-1000)",
      "default": 10,
      "order": 15
    },
    "siteIds": {
      "type": "array",
      "title": "Site IDs",
      "description": "List of Site IDs to filter by",
      "items": {
        "type": "string"
      },
      "order": 4
    },
    "skip": {
      "type": "integer",
      "title": "Skip First N Items",
      "description": "Skip first number of items (0-1000). Will return the number entries specified in the 'limit' input (default is 10)",
      "order": 3
    },
    "skipCount": {
      "type": "boolean",
      "title": "Skip Count",
      "description": "If true, total number of items will not be calculated, which speeds up execution time",
      "order": 6
    },
    "sortBy": {
      "type": "string",
      "title": "Sort By",
      "description": "The column to sort the results by",
      "default": "createdAt",
      "enum": [
        "id",
        "activityType",
        "createdAt"
      ],
      "order": 16
    },
    "sortOrder": {
      "type": "string",
      "title": "Sort Order",
      "description": "Sort direction",
      "default": "asc",
      "enum": [
        "asc",
        "desc"
      ],
      "order": 19
    },
    "threatIds": {
      "type": "array",
      "title": "Threat IDs",
      "description": "Return activities related to specified threat IDs",
      "items": {
        "type": "string"
      },
      "order": 18
    },
    "userEmail": {
      "type": "string",
      "title": "User Email",
      "description": "Email of the user who invoked the activity (If applicable)",
      "order": 20
    },
    "userIds": {
      "type": "array",
      "title": "User IDs",
      "description": "The user who invoked the activity (If applicable)",
      "items": {
        "type": "string"
      },
      "order": 21
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ActivitiesListOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "array",
      "title": "Data",
      "description": "List of activities obtained for the given filters",
      "items": {
        "$ref": "#/definitions/activity"
      },
      "order": 1
    },
    "totalItems": {
      "type": "integer",
      "title": "Total Items",
      "description": "Total number of activities found matching your query",
      "order": 2
    }
  },
  "required": [
    "data"
  ],
  "definitions": {
    "activity": {
      "type": "object",
      "title": "activity",
      "properties": {
        "comments": {
          "type": "string",
          "title": "Comments",
          "description": "Comments",
          "order": 1
        },
        "userId": {
          "type": "string",
          "title": "UserId",
          "description": "The user who invoked the activity (If applicable)",
          "order": 2
        },
        "accountId": {
          "type": "string",
          "title": "Account ID",
          "description": "Related account (If applicable)",
          "order": 3
        },
        "accountName": {
          "type": "string",
          "title": "Account Name",
          "description": "Related account name (If applicable)",
          "order": 4
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Activity creation time (UTC)",
          "order": 5
        },
        "data": {
          "type": "object",
          "title": "Data",
          "description": "Extra activity specific data",
          "order": 6
        },
        "agentUpdatedVersion": {
          "type": "string",
          "title": "Agent Updated Version",
          "description": "Agent's new version (If applicable)",
          "order": 7
        },
        "siteId": {
          "type": "string",
          "title": "Site ID",
          "description": "Related site (If applicable)",
          "order": 8
        },
        "siteName": {
          "type": "string",
          "title": "Site Name",
          "description": "Related site name (If applicable)",
          "order": 9
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Activity ID",
          "order": 10
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Activity last updated time (UTC)",
          "order": 11
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Extra activity information",
          "order": 12
        },
        "primaryDescription": {
          "type": "string",
          "title": "Primary Description",
          "description": "Primary description",
          "order": 13
        },
        "agentId": {
          "type": "string",
          "title": "Agent ID",
          "description": "Related agent (If applicable)",
          "order": 14
        },
        "hash": {
          "type": "string",
          "title": "Hash",
          "description": "Threat file hash (If applicable)",
          "order": 15
        },
        "activityType": {
          "type": "integer",
          "title": "Activity Type",
          "description": "Activity type",
          "order": 16
        },
        "activityUuid": {
          "type": "string",
          "title": "Activity UUID",
          "description": "Activity UUID",
          "order": 17
        },
        "osFamily": {
          "type": "string",
          "title": "OS Family",
          "description": "Agent's OS type (if applicable)",
          "order": 18
        },
        "threatId": {
          "type": "string",
          "title": "Threat ID",
          "description": "Related threat (If applicable)",
          "order": 19
        },
        "groupId": {
          "type": "string",
          "title": "Group ID",
          "description": "Related group (If applicable)",
          "order": 20
        },
        "groupName": {
          "type": "string",
          "title": "Group Name",
          "description": "Related group name (If applicable)",
          "order": 21
        },
        "secondaryDescription": {
          "type": "string",
          "title": "Secondary Description",
          "description": "Secondary description",
          "order": 22
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
