# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Run a remote script"


class Input:
    IDS = "ids"
    INPUT_PARAMETERS = "input_parameters"
    OUTPUT_DESTINATION = "output_destination"
    OUTPUT_DIRECTORY = "output_directory"
    PASSWORD = "password"
    SCRIPT_ID = "script_id"
    TASK_DESCRIPTION = "task_description"
    TIMEOUT = "timeout"
    

class Output:
    AFFECTED = "affected"
    

class RunRemoteScriptInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "ids": {
      "type": "array",
      "title": "IDs",
      "description": "IDs of the agents to execute the script on. If no IDs provided, the script will run on ALL applicable agents. This id can be retrieved by using the get agent details action if neccessary",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "input_parameters": {
      "type": "string",
      "title": "Input Script Parameters",
      "description": "Parameters which will be passed to the remote script (may or may not be required, depending on script)",
      "order": 7
    },
    "output_destination": {
      "type": "string",
      "title": "Output Destination",
      "description": "Output destination of any script output",
      "enum": [
        "Local",
        "None",
        "SentinelCloud"
      ],
      "order": 4
    },
    "output_directory": {
      "type": "string",
      "title": "Output Directory",
      "description": "Output Directory (Only relevant if Local is selected for Output Destination)",
      "order": 5
    },
    "password": {
      "type": "string",
      "title": "Password",
      "description": "Password (Only relevant if SentinelCloud is selected for Output Destination). At least 10 characters and no whitespace",
      "order": 6
    },
    "script_id": {
      "type": "string",
      "title": "Script ID",
      "description": "ID of the script to run (select the ID of a SentinelOne or user script from SentinelOne console)",
      "order": 2
    },
    "task_description": {
      "type": "string",
      "title": "Task Description",
      "description": "Task Description",
      "order": 3
    },
    "timeout": {
      "type": "integer",
      "title": "Script Execution Timeout",
      "description": "Script runtime timeout (in seconds) for current execution (Value between 60 and 172800 seconds)",
      "default": 3600,
      "order": 8
    }
  },
  "required": [
    "output_destination",
    "script_id",
    "task_description"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RunRemoteScriptOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "affected": {
      "type": "integer",
      "title": "Affected",
      "description": "Number of entities affected by requested operation. For detailed output from running the script, log onto the SentinelOne console. Note this may be lower than the number of agent ids submitted if the script cannot be run on a particular agent e.g. due to OS type",
      "order": 1
    }
  },
  "required": [
    "affected"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
