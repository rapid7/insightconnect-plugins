# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Mark as threat detections that the Agent considers suspicious and that match the filter"


class Input:
    TARGETSCOPE = "targetScope"
    THREATID = "threatId"
    WHITENINGOPTION = "whiteningOption"


class Output:
    AFFECTED = "affected"


class MarkAsThreatInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "targetScope": {
      "type": "string",
      "title": "Target Scope",
      "description": "Scope to be used for exclusions",
      "enum": [
        "group",
        "site",
        "tenant"
      ],
      "order": 2
    },
    "threatId": {
      "type": "string",
      "title": "Threat ID",
      "description": "ID of a threat",
      "order": 1
    },
    "whiteningOption": {
      "type": "string",
      "title": "Whitening Option",
      "description": "Selected whitening option",
      "enum": [
        "",
        "browser-type",
        "certificate",
        "file-type",
        "file_hash",
        "path"
      ],
      "order": 3
    }
  },
  "required": [
    "targetScope",
    "threatId"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MarkAsThreatOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "affected": {
      "type": "integer",
      "title": "Affected",
      "description": "Number of entities affected by the requested operation",
      "order": 1
    }
  },
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
