# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Create a new indicator"


class Input:
    SOURCE = "source"
    STATUS = "status"
    TYPE = "type"
    VALUE = "value"
    

class Output:
    ID = "id"
    

class CreateIndicatorInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Source of the indicator",
      "order": 4
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Status of the indicator",
      "enum": [
        "Active",
        "Expired",
        "Indirect",
        "Review",
        "Whitelisted"
      ],
      "order": 3
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "Type of the indicator",
      "enum": [
        "CIDR Block",
        "Email Address",
        "Eamil Attachment",
        "Email Subject",
        "File Path",
        "Filename",
        "FQDN",
        "Fuzzy Hash",
        "GOST Hash",
        "IP Address",
        "MD5",
        "Mutex",
        "Password",
        "Registry Key",
        "SHA-1",
        "SHA-256",
        "SHA-384",
        "SHA-512",
        "String",
        "URL",
        "URL Path",
        "User-agent",
        "Username",
        "X-Mailer"
      ],
      "order": 2
    },
    "value": {
      "type": "string",
      "title": "Value",
      "description": "Value of the indicator",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateIndicatorOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "integer",
      "title": "ID",
      "description": "ID of the created indicator",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
