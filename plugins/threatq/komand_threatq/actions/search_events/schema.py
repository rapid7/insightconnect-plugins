# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "List all events"


class Input:
    EVENT = "event"
    

class Output:
    DATA = "data"
    TOTAL = "total"
    

class SearchEventsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "event": {
      "$ref": "#/definitions/event",
      "title": "Search Parameters",
      "description": "Parameters of an event on which to search",
      "order": 1
    }
  },
  "definitions": {
    "event": {
      "type": "object",
      "title": "event",
      "properties": {
        "created_at": {
          "type": "string",
          "title": "Created At",
          "displayType": "date",
          "description": "Date at which the event was created",
          "format": "date-time",
          "order": 4
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of the event",
          "order": 2
        },
        "happened_at": {
          "type": "string",
          "title": "Happened At",
          "displayType": "date",
          "description": "Date at which the event happened",
          "format": "date-time",
          "order": 7
        },
        "hash": {
          "type": "string",
          "title": "Hash",
          "description": "Hash of the event",
          "order": 1
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID of the event",
          "order": 8
        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Title of the event",
          "order": 3
        },
        "type_id": {
          "type": "integer",
          "title": "Type ID",
          "description": "ID of the event type",
          "order": 5
        },
        "updated_at": {
          "type": "string",
          "title": "Updated At",
          "displayType": "date",
          "description": "Date at which the event was updated",
          "format": "date-time",
          "order": 6
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchEventsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "array",
      "title": "Data",
      "description": "List of events that match query",
      "items": {
        "$ref": "#/definitions/event"
      },
      "order": 2
    },
    "total": {
      "type": "integer",
      "title": "Total",
      "description": "Total number of search results",
      "order": 1
    }
  },
  "definitions": {
    "event": {
      "type": "object",
      "title": "event",
      "properties": {
        "created_at": {
          "type": "string",
          "title": "Created At",
          "displayType": "date",
          "description": "Date at which the event was created",
          "format": "date-time",
          "order": 4
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of the event",
          "order": 2
        },
        "happened_at": {
          "type": "string",
          "title": "Happened At",
          "displayType": "date",
          "description": "Date at which the event happened",
          "format": "date-time",
          "order": 7
        },
        "hash": {
          "type": "string",
          "title": "Hash",
          "description": "Hash of the event",
          "order": 1
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID of the event",
          "order": 8
        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Title of the event",
          "order": 3
        },
        "type_id": {
          "type": "integer",
          "title": "Type ID",
          "description": "ID of the event type",
          "order": 5
        },
        "updated_at": {
          "type": "string",
          "title": "Updated At",
          "displayType": "date",
          "description": "Date at which the event was updated",
          "format": "date-time",
          "order": 6
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
