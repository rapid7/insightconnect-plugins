# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Search for a specific indicator"


class Input:
    INDICATOR = "indicator"
    

class Output:
    DATA = "data"
    TOTAL = "total"
    

class SearchIndicatorsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "indicator": {
      "$ref": "#/definitions/indicator",
      "title": "Search Parameters",
      "description": "Parameters of an indicator on which to search",
      "order": 1
    }
  },
  "definitions": {
    "indicator": {
      "type": "object",
      "title": "indicator",
      "properties": {
        "class": {
          "type": "string",
          "title": "Class",
          "description": "Class of the indicator",
          "order": 9
        },
        "created_at": {
          "type": "string",
          "title": "Created At",
          "displayType": "date",
          "description": "Date at which the indicator was created",
          "format": "date-time",
          "order": 4
        },
        "hash": {
          "type": "string",
          "title": "Hash",
          "description": "Hash of the indicator",
          "order": 2
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID of the indicator",
          "order": 8
        },
        "last_detected_at": {
          "type": "string",
          "title": "Last Detected At",
          "displayType": "date",
          "description": "Date at which the indicator was last detected",
          "format": "date-time",
          "order": 1
        },
        "status_id": {
          "type": "integer",
          "title": "Status ID",
          "description": "ID of the indicator status",
          "order": 3
        },
        "type_id": {
          "type": "integer",
          "title": "Type ID",
          "description": "ID of the indicator type",
          "order": 5
        },
        "updated_at": {
          "type": "string",
          "title": "Updated At",
          "displayType": "date",
          "description": "Date at which the indicator was updated",
          "format": "date-time",
          "order": 6
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Indicator Value",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchIndicatorsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "array",
      "title": "Data",
      "description": "List of indicators that match query",
      "items": {
        "$ref": "#/definitions/indicator"
      },
      "order": 2
    },
    "total": {
      "type": "integer",
      "title": "Total",
      "description": "Total number of search results",
      "order": 1
    }
  },
  "definitions": {
    "indicator": {
      "type": "object",
      "title": "indicator",
      "properties": {
        "class": {
          "type": "string",
          "title": "Class",
          "description": "Class of the indicator",
          "order": 9
        },
        "created_at": {
          "type": "string",
          "title": "Created At",
          "displayType": "date",
          "description": "Date at which the indicator was created",
          "format": "date-time",
          "order": 4
        },
        "hash": {
          "type": "string",
          "title": "Hash",
          "description": "Hash of the indicator",
          "order": 2
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID of the indicator",
          "order": 8
        },
        "last_detected_at": {
          "type": "string",
          "title": "Last Detected At",
          "displayType": "date",
          "description": "Date at which the indicator was last detected",
          "format": "date-time",
          "order": 1
        },
        "status_id": {
          "type": "integer",
          "title": "Status ID",
          "description": "ID of the indicator status",
          "order": 3
        },
        "type_id": {
          "type": "integer",
          "title": "Type ID",
          "description": "ID of the indicator type",
          "order": 5
        },
        "updated_at": {
          "type": "string",
          "title": "Updated At",
          "displayType": "date",
          "description": "Date at which the indicator was updated",
          "format": "date-time",
          "order": 6
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Indicator Value",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
