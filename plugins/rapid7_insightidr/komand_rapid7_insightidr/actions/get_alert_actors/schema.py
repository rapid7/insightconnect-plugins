# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Allows the user to retrieve actors for a single alert from an alert RRN"


class Input:
    ALERT_RRN = "alert_rrn"
    INDEX = "index"
    SIZE = "size"


class Output:
    ACTORS = "actors"
    METADATA = "metadata"


class GetAlertActorsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alert_rrn": {
      "type": "string",
      "title": "Alert RRN",
      "description": "The RRN of the alert",
      "order": 1
    },
    "index": {
      "type": "integer",
      "title": "Index",
      "description": "Zero-based index of the page to retrieve, where value must be greater than or equal to 0",
      "default": 0,
      "order": 3
    },
    "size": {
      "type": "integer",
      "title": "Size",
      "description": "Amount of data for a page to retrieve, where its value must be greater than 0 or less than or equal to 100",
      "default": 100,
      "order": 2
    }
  },
  "required": [
    "alert_rrn"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAlertActorsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "actors": {
      "type": "array",
      "title": "Actors",
      "description": "The alerts actors",
      "items": {
        "$ref": "#/definitions/actor_object"
      },
      "order": 1
    },
    "metadata": {
      "$ref": "#/definitions/investigation_metadata",
      "title": "Metadata",
      "description": "The pagination parameters used to generate this page result",
      "order": 2
    }
  },
  "required": [
    "metadata"
  ],
  "definitions": {
    "actor_object": {
      "type": "object",
      "title": "actor_object",
      "properties": {
        "rrn": {
          "type": "string",
          "title": "RRN",
          "description": "The unique RRN of the actor.",
          "order": 1
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The identifier of the actor.",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The type of actor (for example, ASSET, ACCOUNT, or IP_ADDRESS).",
          "order": 3
        },
        "user_id": {
          "type": "string",
          "title": "User ID",
          "description": "User ID for an actor.",
          "order": 4
        },
        "display_name": {
          "type": "string",
          "title": "Display Name",
          "description": "The display name of the actor (for example, John Doe or user@example.com).",
          "order": 5
        }
      }
    },
    "investigation_metadata": {
      "type": "object",
      "title": "investigation_metadata",
      "properties": {
        "index": {
          "type": "integer",
          "title": "Index",
          "description": "The zero-based index of the page retrieved",
          "order": 1
        },
        "size": {
          "type": "integer",
          "title": "Size",
          "description": "The size of the page requested",
          "order": 2
        },
        "total_data": {
          "type": "integer",
          "title": "Total Data",
          "description": "The total number of results available with the given filter parameters",
          "order": 3
        },
        "total_pages": {
          "type": "integer",
          "title": "Total Pages",
          "description": "The total number of pages available with the given filter parameters",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
