# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Allows the user to retrieve idr accounts that match the given criteria"


class Input:
    INDEX = "index"
    SEARCH = "search"
    SIZE = "size"
    SORT = "sort"


class Output:
    DATA = "data"
    METADATA = "metadata"


class SearchAccountsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "index": {
      "type": "integer",
      "title": "Index",
      "description": "Zero-based index of the page to retrieve, where value must be greater than or equal to 0",
      "default": 0,
      "order": 4
    },
    "search": {
      "type": "array",
      "title": "Search",
      "description": "The criteria for which entities to return",
      "items": {
        "$ref": "#/definitions/search_accounts_object"
      },
      "order": 1
    },
    "size": {
      "type": "integer",
      "title": "Size",
      "description": "Amount of data for a page to retrieve, where its value must be greater than 0 or less than or equal to 100",
      "default": 100,
      "order": 3
    },
    "sort": {
      "type": "array",
      "title": "Sort",
      "description": "The criteria and sorting information for searching",
      "items": {
        "$ref": "#/definitions/sort_accounts_object"
      },
      "order": 2
    }
  },
  "definitions": {
    "search_accounts_object": {
      "type": "object",
      "title": "search_accounts_object",
      "properties": {
        "field": {
          "type": "string",
          "title": "Field",
          "description": "The field to search within.",
          "order": 1
        },
        "operator": {
          "type": "string",
          "title": "Operator",
          "description": "The search operation to perform. All operators are case-insensitive when operating on Strings",
          "enum": [
            "EQUALS",
            "CONTAINS",
            "IN"
          ],
          "order": 2
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "The value to search for.",
          "order": 3
        }
      }
    },
    "sort_accounts_object": {
      "type": "object",
      "title": "sort_accounts_object",
      "properties": {
        "field": {
          "type": "string",
          "title": "Field",
          "description": "The field to sort by.",
          "order": 1
        },
        "order": {
          "type": "string",
          "title": "Order",
          "description": "The sorting direction. Sorting is case-insensitive when sorting Strings.",
          "enum": [
            "ASC",
            "DESC"
          ],
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchAccountsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "data": {
      "type": "array",
      "title": "Data",
      "description": "The list of account information",
      "items": {
        "$ref": "#/definitions/account_object"
      },
      "order": 1
    },
    "metadata": {
      "$ref": "#/definitions/investigation_metadata",
      "title": "Metadata",
      "description": "The pagination parameters used to generate this page result",
      "order": 2
    }
  },
  "required": [
    "data",
    "metadata"
  ],
  "definitions": {
    "account_object": {
      "type": "object",
      "title": "account_object",
      "properties": {
        "rrn": {
          "type": "string",
          "title": "RRN",
          "description": "The unique RRN of the account.",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name for this account.",
          "order": 2
        },
        "domain": {
          "type": "string",
          "title": "Domain",
          "description": "The domain that this account is associated with.",
          "order": 3
        },
        "disabled": {
          "type": "boolean",
          "title": "Disabled",
          "description": "The unique RRN of the account.",
          "order": 4
        },
        "authentication_service": {
          "type": "string",
          "title": "Authentication Service",
          "description": "The service to which this account is tied, which is responsible for authenticating this account.",
          "order": 5
        },
        "user": {
          "$ref": "#/definitions/user_object",
          "title": "User",
          "description": "The user this account is associated with.",
          "order": 6
        }
      },
      "required": [
        "authentication_service",
        "disabled",
        "name",
        "rrn",
        "user"
      ]
    },
    "user_object": {
      "type": "object",
      "title": "user_object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name for this user.",
          "order": 1
        },
        "rrn": {
          "type": "string",
          "title": "RRN",
          "description": "The unique RRN of the user.",
          "order": 2
        }
      },
      "required": [
        "name",
        "rrn"
      ]
    },
    "investigation_metadata": {
      "type": "object",
      "title": "investigation_metadata",
      "properties": {
        "index": {
          "type": "integer",
          "title": "Index",
          "description": "The zero-based index of the page retrieved",
          "order": 1
        },
        "size": {
          "type": "integer",
          "title": "Size",
          "description": "The size of the page requested",
          "order": 2
        },
        "total_data": {
          "type": "integer",
          "title": "Total Data",
          "description": "The total number of results available with the given filter parameters",
          "order": 3
        },
        "total_pages": {
          "type": "integer",
          "title": "Total Pages",
          "description": "The total number of pages available with the given filter parameters",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
