# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Creates a new member object by inviting a user to the organization"


class Input:
    ACCESSALL = "accessAll"
    COLLECTIONS = "collections"
    EMAIL = "email"
    EXTERNALID = "externalId"
    TYPE = "type"
    

class Output:
    MEMBER = "member"
    

class CreateMemberInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "accessAll": {
      "type": "boolean",
      "title": "Access All",
      "description": "Determines if this member can access all collections within the organization, or only the associated collections. If set to 'true', this option overrides any collection assignments",
      "order": 2
    },
    "collections": {
      "type": "array",
      "title": "Collections",
      "description": "The associated collections that this member can access",
      "items": {
        "$ref": "#/definitions/collection"
      },
      "order": 4
    },
    "email": {
      "type": "string",
      "title": "Email",
      "description": "The member's email address",
      "order": 5
    },
    "externalId": {
      "type": "string",
      "title": "External Id",
      "description": "External identifier for reference or linking this member to another system, such as a user directory",
      "order": 3
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "Organization user type",
      "enum": [
        "0-Owner",
        "1-Admin",
        "2-User",
        "3-Manager"
      ],
      "order": 1
    }
  },
  "required": [
    "accessAll",
    "email",
    "type"
  ],
  "definitions": {
    "collection": {
      "type": "object",
      "title": "collection",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The associated object's unique identifier",
          "order": 1
        },
        "readOnly": {
          "type": "boolean",
          "title": "Read Only",
          "description": "When true, the read only permission will not allow the user or group to make changes to items",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateMemberOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "member": {
      "$ref": "#/definitions/member",
      "title": "Member",
      "description": "An organization member",
      "order": 1
    }
  },
  "definitions": {
    "collection": {
      "type": "object",
      "title": "collection",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The associated object's unique identifier",
          "order": 1
        },
        "readOnly": {
          "type": "boolean",
          "title": "Read Only",
          "description": "When true, the read only permission will not allow the user or group to make changes to items",
          "order": 2
        }
      }
    },
    "member": {
      "type": "object",
      "title": "member",
      "properties": {
        "accessAll": {
          "type": "boolean",
          "title": "Access All",
          "description": "Determines if this member can access all collections within the organization, or only the associated collections. If set to 'true', this option overrides any collection assignments",
          "order": 2
        },
        "collections": {
          "type": "array",
          "title": "Collections",
          "description": "The associated collections that this member can access",
          "items": {
            "$ref": "#/definitions/collection"
          },
          "order": 12
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "The member's email address",
          "order": 9
        },
        "externalId": {
          "type": "string",
          "title": "External ID",
          "description": "External identifier for reference or linking this member to another system, such as a user directory",
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The member's unique identifier within the organization",
          "order": 6
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The member's name, set from their user account profile",
          "order": 8
        },
        "object": {
          "type": "string",
          "title": "Object",
          "description": "String representing the object's type. Objects of the same type share the same properties",
          "order": 5
        },
        "resetPasswordEnrolled": {
          "type": "boolean",
          "title": "Reset Password Enrolled",
          "description": "Returns 'true' if the member has enrolled in Password Reset assistance within the organization",
          "order": 4
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Organization user status type",
          "enum": [
            "-1-Revoked",
            "0-Invited",
            "1-Accepted",
            "2-Confirmed"
          ],
          "order": 11
        },
        "twoFactorEnabled": {
          "type": "boolean",
          "title": "Two Factor Enabled",
          "description": "Returns 'true' if the member has a two-step login method enabled on their user account",
          "order": 10
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Organization user type",
          "enum": [
            "0-Owner",
            "1-Admin",
            "2-User",
            "3-Manager"
          ],
          "order": 1
        },
        "userId": {
          "type": "string",
          "title": "User ID",
          "description": "The member's unique identifier across Bitwarden",
          "order": 7
        }
      },
      "definitions": {
        "collection": {
          "type": "object",
          "title": "collection",
          "properties": {
            "id": {
              "type": "string",
              "title": "ID",
              "description": "The associated object's unique identifier",
              "order": 1
            },
            "readOnly": {
              "type": "boolean",
              "title": "Read Only",
              "description": "When true, the read only permission will not allow the user or group to make changes to items",
              "order": 2
            }
          }
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
