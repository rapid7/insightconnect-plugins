# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "View information about all groups in the account"


class Input:
    pass


class Output:
    GROUPS = "groups"


class ListAllGroupsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListAllGroupsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "groups": {
      "type": "array",
      "title": "Groups",
      "description": "Information about all groups in the account",
      "items": {
        "$ref": "#/definitions/group"
      },
      "order": 1
    }
  },
  "definitions": {
    "group": {
      "type": "object",
      "title": "group",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID of the group",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the group",
          "order": 2
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of the group",
          "order": 3
        },
        "businessHoursId": {
          "type": "integer",
          "title": "Business Hours ID",
          "description": "Unique ID of the business hours configuration associated with the group",
          "order": 4
        },
        "unassignedFor": {
          "type": "string",
          "title": "Unassigned For",
          "description": "The time after which an escalation email is sent if a ticket in the group remains unassigned",
          "order": 5
        },
        "escalateTo": {
          "type": "integer",
          "title": "Escalate To",
          "description": "The Unique ID of the user to whom an escalation email is sent if a ticket in this group is unassigned",
          "order": 6
        },
        "agentIds": {
          "type": "array",
          "title": "Agent IDs",
          "description": "List of agent user IDs separated by commas",
          "items": {
            "type": "integer"
          },
          "order": 7
        },
        "members": {
          "type": "array",
          "title": "Members",
          "description": "A comma separated list of user IDs of agents who are members of this group",
          "items": {
            "type": "integer"
          },
          "order": 8
        },
        "observers": {
          "type": "array",
          "title": "Observers",
          "description": "A comma separated list of user IDs of agents who are observers of this group",
          "items": {
            "type": "integer"
          },
          "order": 9
        },
        "restricted": {
          "type": "boolean",
          "title": "Restricted",
          "description": "Whether a group is marked as restricted",
          "order": 10
        },
        "leaders": {
          "type": "array",
          "title": "Leaders",
          "description": "A comma separated list of user IDs of agents who are leaders of this group",
          "items": {
            "type": "integer"
          },
          "order": 11
        },
        "membersPendingApproval": {
          "type": "array",
          "title": "Members Pending Approval",
          "description": "A comma-separated list of user IDs of agents whose member access to the group is pending approval by a group leader",
          "items": {
            "type": "integer"
          },
          "order": 12
        },
        "observersPendingApproval": {
          "type": "array",
          "title": "Observers Pending Approval",
          "description": "A comma-separated list of user IDs of agents whose observer access to the group is pending approval by a group leader",
          "items": {
            "type": "integer"
          },
          "order": 13
        },
        "leadersPendingApproval": {
          "type": "array",
          "title": "Leaders Pending Approval",
          "description": "A comma-separated list of user IDs of agents whose leader access to the group is pending approval by an existing group leader",
          "items": {
            "type": "integer"
          },
          "order": 14
        },
        "approvalRequired": {
          "type": "boolean",
          "title": "Approval Required",
          "description": "Whether the restricted group requires approvals for membership changes",
          "order": 15
        },
        "autoTicketAssign": {
          "type": "boolean",
          "title": "Auto Ticket Assign",
          "description": "Describes the automatic ticket assignment type",
          "order": 16
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Date and time when the agent group was created",
          "order": 17
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Date and time when the agent group was last updated",
          "order": 18
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
