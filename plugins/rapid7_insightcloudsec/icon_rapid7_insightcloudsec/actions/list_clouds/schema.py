# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "List available configured clouds"


class Input:
    ADVANCED_SEARCH = "advanced_search"
    BADGE_FILTER_OPERATOR = "badge_filter_operator"
    BADGES = "badges"
    EMPTY_BADGES = "empty_badges"
    EXCLUSION_BADGES = "exclusion_badges"
    FILTERS = "filters"
    LIMIT = "limit"
    OFFSET = "offset"
    ORDER_BY = "order_by"
    SEARCH_STRING = "search_string"


class Output:
    CLOUDS = "clouds"
    TOTAL_COUNT = "total_count"


class ListCloudsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(
        r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "advanced_search": {
      "type": "boolean",
      "title": "Advanced Search",
      "description": "A toggle on whether you want to use an Advanced Search",
      "order": 8
    },
    "badge_filter_operator": {
      "type": "string",
      "title": "Badge Filter Operator",
      "description": "Operator to filter Badges on?",
      "enum": [
        "OR",
        "AND"
      ],
      "order": 6
    },
    "badges": {
      "type": "array",
      "title": "Badges",
      "description": "Badges of a cloud account to query by?",
      "items": {
        "$ref": "#/definitions/badges"
      },
      "order": 5
    },
    "empty_badges": {
      "type": "boolean",
      "title": "Empty Badges",
      "description": "Whether or not to filter on cloud accounts which have zero badges (cloud accounts only)",
      "order": 9
    },
    "exclusion_badges": {
      "type": "array",
      "title": "Exclusion Badges",
      "description": "Used to filter based on badges you don't want returned",
      "items": {
        "$ref": "#/definitions/badges"
      },
      "order": 10
    },
    "filters": {
      "type": "array",
      "title": "Filters",
      "description": "Filter Clouds based on `field_name`, `filter_type` and `filter_value`",
      "items": {
        "$ref": "#/definitions/filters"
      },
      "order": 1
    },
    "limit": {
      "type": "integer",
      "title": "Limit",
      "description": "The limit on the amount of clouds you wish to received",
      "order": 2
    },
    "offset": {
      "type": "integer",
      "title": "Offset",
      "description": "Offset for cloud results, specifying the starting point for clouds returned",
      "order": 3
    },
    "order_by": {
      "type": "string",
      "title": "Order By",
      "description": "Sort the output based on `field` and `order`. Specified by field name followed by a space then 'ASC' or 'DESC'",
      "order": 4
    },
    "search_string": {
      "type": "string",
      "title": "Search String",
      "description": "Search String?",
      "order": 7
    }
  },
  "definitions": {
    "filters": {
      "type": "object",
      "title": "filters",
      "properties": {
        "field_name": {
          "type": "string",
          "title": "Field Name",
          "description": "Field Name of value to be filtered by",
          "order": 1
        },
        "filter_type": {
          "type": "string",
          "title": "Filter Type",
          "description": "Filter Type based on Field Name",
          "enum": [
            "EXACT",
            "LIKE",
            "NOT",
            "IN",
            "NOT_IN",
            "BETWEEN"
          ],
          "order": 2
        },
        "filter_value": {
          "type": "string",
          "title": "Filter Value",
          "description": "Value to filter by",
          "order": 3
        },
        "filter_list_value": {
          "title": "Filter List Value",
          "description": "Value to filter the list by",
          "order": 4
        }
      }
    },
    "badges": {
      "type": "object",
      "title": "badges",
      "properties": {
        "key": {
          "type": "string",
          "title": "Key",
          "description": "Key for Badge",
          "order": 1
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Description for Badge",
          "order": 2
        }
      }
    }
  }
}
    """
    )

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListCloudsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(
        r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "clouds": {
      "type": "array",
      "title": "Clouds",
      "description": "Clouds retrieved",
      "items": {
        "type": "object"
      },
      "order": 1
    },
    "total_count": {
      "type": "integer",
      "title": "Total Count",
      "description": "Total count of clouds retrieved",
      "order": 2
    }
  },
  "required": [
    "clouds",
    "total_count"
  ],
  "definitions": {}
}
    """
    )

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
