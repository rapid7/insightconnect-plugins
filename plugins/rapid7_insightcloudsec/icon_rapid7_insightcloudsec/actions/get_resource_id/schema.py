# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Gets a InsightCloudSec resource ID from a given search string"


class Input:
    LIMIT = "limit"
    OFFSET = "offset"
    SEARCH_STRING = "search_string"


class Output:
    RESOURCES = "resources"
    TOTALCOUNT = "totalCount"


class GetResourceIdInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "limit": {
      "type": "integer",
      "title": "Limit",
      "description": "The maximum number of resources returned if resources match the provided criteria. The value can be between 1 and 1000",
      "order": 1
    },
    "offset": {
      "type": "integer",
      "title": "Offset",
      "description": "The number of entries to skip over before returning anything",
      "order": 2
    },
    "search_string": {
      "type": "string",
      "title": "Search String",
      "description": "Partial or full literal string to search for. f.e. you could search for an instance ID, image ID, or resource name",
      "order": 3
    }
  },
  "required": [
    "search_string"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetResourceIdOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "resources": {
      "type": "array",
      "title": "Resources",
      "description": "List of the resource IDs",
      "items": {
        "$ref": "#/definitions/resource"
      },
      "order": 1
    },
    "totalCount": {
      "type": "integer",
      "title": "Total Count",
      "description": "Number of resources retrieved",
      "order": 2
    }
  },
  "definitions": {
    "resource": {
      "type": "object",
      "title": "resource",
      "properties": {
        "resourceId": {
          "type": "string",
          "title": "Resource ID",
          "description": "Resource of the resource ID",
          "order": 1
        },
        "resourceType": {
          "type": "string",
          "title": "Resource Type",
          "description": "Resource type of the resource",
          "order": 2
        },
        "providerId": {
          "type": "string",
          "title": "Provider ID",
          "description": "Provider ID of the resource",
          "order": 3
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the resource",
          "order": 4
        },
        "accountId": {
          "type": "string",
          "title": "Account ID",
          "description": "Account ID of the resource",
          "order": 5
        },
        "cloudTypeId": {
          "type": "string",
          "title": "Cloud type ID",
          "description": "Cloud type ID of the resource",
          "order": 6
        },
        "account": {
          "type": "string",
          "title": "Account",
          "description": "Account of the resource",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
