# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Return a list of issues (groups) bound to a project"


class Input:
    ORGANIZATION_SLUG = "organization_slug"
    PROJECT_SLUG = "project_slug"
    QUERY = "query"
    SHORTIDLOOKUP = "shortIdLookup"
    STATSPERIOD = "statsPeriod"
    

class Output:
    ISSUES = "issues"
    

class ListProjectIssuesInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "organization_slug": {
      "type": "string",
      "title": "Organization Slug",
      "description": "The slug of the organization the issues belong to",
      "order": 1
    },
    "project_slug": {
      "type": "string",
      "title": "Project Slug",
      "description": "The slug of the project the issues belong to",
      "order": 2
    },
    "query": {
      "type": "string",
      "title": "Query",
      "description": "An optional Sentry structured search query. If not provided an implied 'is:unresolved; is assumed",
      "order": 5
    },
    "shortIdLookup": {
      "type": "boolean",
      "title": "Short ID Lookup",
      "description": "If this is set to true then short IDs are looked up by this function as well. This can cause the return value of the function to return an event issue of a different project which is why this is an opt-in. Set to 1 to enable",
      "order": 4
    },
    "statsPeriod": {
      "type": "string",
      "title": "Stats Period",
      "description": "An optional stat period (can be one of '24h', '14d', and '')",
      "default": "",
      "enum": [
        "24h",
        "14d",
        ""
      ],
      "order": 3
    }
  },
  "required": [
    "organization_slug",
    "project_slug"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ListProjectIssuesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "issues": {
      "type": "array",
      "title": "Issues",
      "description": "A list of issues (groups) bound to a project",
      "items": {
        "$ref": "#/definitions/Issue"
      },
      "order": 1
    }
  },
  "required": [
    "issues"
  ],
  "definitions": {
    "Issue": {
      "type": "object",
      "title": "Issue",
      "properties": {
        "annotations": {
          "type": "array",
          "title": "Annotations",
          "items": {
            "type": "string"
          },
          "order": 13
        },
        "assignedTo": {
          "type": "string",
          "title": "AssignedTo",
          "order": 23
        },
        "count": {
          "type": "string",
          "title": "Count",
          "order": 6
        },
        "culprit": {
          "type": "string",
          "title": "Culprit",
          "order": 9
        },
        "firstSeen": {
          "type": "string",
          "title": "FirstSeen",
          "displayType": "date",
          "format": "date-time",
          "order": 2
        },
        "hasSeen": {
          "type": "boolean",
          "title": "HasSeen",
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "Id",
          "order": 4
        },
        "isBookmarked": {
          "type": "boolean",
          "title": "IsBookmarked",
          "order": 17
        },
        "isPublic": {
          "type": "boolean",
          "title": "IsPublic",
          "order": 15
        },
        "isSubscribed": {
          "type": "boolean",
          "title": "IsSubscribed",
          "order": 16
        },
        "lastSeen": {
          "type": "string",
          "title": "LastSeen",
          "displayType": "date",
          "format": "date-time",
          "order": 1
        },
        "level": {
          "type": "string",
          "title": "Level",
          "order": 19
        },
        "logger": {
          "type": "string",
          "title": "Logger",
          "order": 24
        },
        "metadata": {
          "type": "object",
          "title": "Metadata",
          "order": 18
        },
        "numComments": {
          "type": "integer",
          "title": "NumComments",
          "order": 11
        },
        "permalink": {
          "type": "string",
          "title": "Permalink",
          "order": 21
        },
        "project": {
          "type": "object",
          "title": "Project",
          "order": 20
        },
        "shareId": {
          "type": "string",
          "title": "ShareId",
          "order": 26
        },
        "shortId": {
          "type": "string",
          "title": "ShortId",
          "order": 5
        },
        "stats": {
          "type": "object",
          "title": "Stats",
          "order": 8
        },
        "status": {
          "type": "string",
          "title": "Status",
          "order": 14
        },
        "statusDetails": {
          "type": "object",
          "title": "StatusDetails",
          "order": 22
        },
        "subscriptionDetails": {
          "type": "object",
          "title": "SubscriptionDetails",
          "order": 25
        },
        "title": {
          "type": "string",
          "title": "Title",
          "order": 10
        },
        "type": {
          "type": "string",
          "title": "Type",
          "order": 12
        },
        "userCount": {
          "type": "integer",
          "title": "UserCount",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
