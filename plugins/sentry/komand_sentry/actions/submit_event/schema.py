# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Create new Sentry event"


class Input:
    DSN = "dsn"
    EVENT_JSON = "event_json"
    SENTRY_VERSION = "sentry_version"
    

class Output:
    ID = "id"
    

class SubmitEventInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "dsn": {
      "type": "string",
      "title": "DSN",
      "description": "DSN configuration of a Sentry project (e.g. 'https://public:secret@sentry.example.com/1')",
      "order": 2
    },
    "event_json": {
      "$ref": "#/definitions/EventJSON",
      "title": "Event JSON",
      "description": "Data describing the event",
      "order": 1
    },
    "sentry_version": {
      "type": "integer",
      "title": "Sentry Version",
      "description": "The protocol version. The current version of the protocol is '7'",
      "default": 7,
      "order": 3
    }
  },
  "required": [
    "dsn",
    "event_json"
  ],
  "definitions": {
    "EventJSON": {
      "type": "object",
      "title": "EventJSON",
      "properties": {
        "culprit": {
          "type": "string",
          "title": "Culprit",
          "order": 2
        },
        "event_id": {
          "type": "string",
          "title": "Event Id",
          "order": 1
        },
        "exception": {
          "type": "array",
          "title": "Exception",
          "items": {
            "$ref": "#/definitions/Exception"
          },
          "order": 5
        },
        "tags": {
          "type": "object",
          "title": "Tags",
          "order": 4
        },
        "timestamp": {
          "type": "string",
          "title": "Timestamp",
          "displayType": "date",
          "format": "date-time",
          "order": 3
        }
      },
      "definitions": {
        "Exception": {
          "type": "object",
          "title": "Exception",
          "properties": {
            "module": {
              "type": "string",
              "title": "Module",
              "order": 3
            },
            "type": {
              "type": "string",
              "title": "Type",
              "order": 1
            },
            "value": {
              "type": "string",
              "title": "Value",
              "order": 2
            }
          }
        }
      }
    },
    "Exception": {
      "type": "object",
      "title": "Exception",
      "properties": {
        "module": {
          "type": "string",
          "title": "Module",
          "order": 3
        },
        "type": {
          "type": "string",
          "title": "Type",
          "order": 1
        },
        "value": {
          "type": "string",
          "title": "Value",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SubmitEventOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "string",
      "title": "ID",
      "description": "ID of a newly created event",
      "order": 1
    }
  },
  "required": [
    "id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
