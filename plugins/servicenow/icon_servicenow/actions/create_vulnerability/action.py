import insightconnect_plugin_runtime
from .schema import CreateVulnerabilityInput, CreateVulnerabilityOutput, Input, Output, Component

# Custom imports below
from insightconnect_plugin_runtime.exceptions import PluginException
from insightconnect_plugin_runtime.helper import clean

from icon_servicenow.util.constants import RISK_RATING_MAP


class CreateVulnerability(insightconnect_plugin_runtime.Action):
    def __init__(self):
        super(self.__class__, self).__init__(
            name="create_vulnerability",
            description=Component.DESCRIPTION,
            input=CreateVulnerabilityInput(),
            output=CreateVulnerabilityOutput(),
        )

    def run(self, params={}):
        data = clean(
            {
                "state": params.get(Input.STATE, ""),
                "risk_rating": RISK_RATING_MAP.get(params.get(Input.RISK_RATING, "").lower()),
                "first_found": params.get(Input.FIRST_FOUND),
                "assigned_to": params.get(Input.ASSIGNED_TO),
                "short_description": params.get(Input.SHORT_DESCRIPTION),
                "steps_to_reproduce": params.get(Input.STEPS_TO_REPRODUCE),
                "technical_details": params.get(Input.TECHNICAL_DETAILS),
            }
        )
        data.update(params.get(Input.ADDITIONAL_FIELDS, {}))

        response = self.connection.request.make_request(
            endpoint=self.connection.vulnerability_url, method="POST", payload=data
        )

        try:
            result = response["resource"].get("result")
        except KeyError as error:
            raise PluginException(preset=PluginException.Preset.UNKNOWN, data=response.text) from error

        sys_id = result.get("sys_id", "")
        number = result.get("number", "")

        if not sys_id:
            raise PluginException(
                cause="Error: Create Vulnerability failed - no system_id returned.",
                assistance=f"Response: {response.text}",
            )

        return {
            Output.SYSTEM_ID: sys_id,
            Output.NUMBER: number,
            Output.VULNERABILITY_URL: f"{self.connection.base_url}sn_vul_app_vulnerable_item.do?sys_id={sys_id}",
        }
