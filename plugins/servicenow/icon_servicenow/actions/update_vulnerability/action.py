import insightconnect_plugin_runtime
from .schema import UpdateVulnerabilityInput, UpdateVulnerabilityOutput, Input, Output, Component

# Custom imports below
from insightconnect_plugin_runtime.helper import clean


class UpdateVulnerability(insightconnect_plugin_runtime.Action):
    def __init__(self):
        super(self.__class__, self).__init__(
            name="update_vulnerability",
            description=Component.DESCRIPTION,
            input=UpdateVulnerabilityInput(),
            output=UpdateVulnerabilityOutput(),
        )

    def run(self, params={}):
        data = clean(
            {
                "state": params.get(Input.STATE, ""),
                "vulnerability": params.get(Input.VULNERABILITY, ""),
                "source": params.get(Input.SOURCE),
                "ip_address": params.get(Input.IP_ADDRESS),
                "dns": params.get(Input.DNS),
                "first_found": params.get(Input.FIRST_FOUND),
                "last_found": params.get(Input.LAST_FOUND),
                "assigned_to": params.get(Input.ASSIGNED_TO),
                "short_description": params.get(Input.SHORT_DESCRIPTION),
            }
        )
        data.update(params.get(Input.ADDITIONAL_FIELDS, {}))

        response = self.connection.request.make_request(
            endpoint=f"{self.connection.vulnerability_url}/{params.get(Input.SYSTEM_ID, '')}",
            method="PUT",
            payload=data,
        )

        success = False
        if response.get("status", 0) in range(200, 299):
            success = True

        return {Output.SUCCESS: success}
