# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Download a resource for an analysis. This can be a full report, binaries, screenshots, etc"


class Input:
    RUN = "run"
    TYPE = "type"
    WEBID = "webid"


class Output:
    RESOURCE_CONTENT = "resource_content"
    RESOURCE_NAME = "resource_name"


class DownloadAnalysisInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "run": {
      "type": "integer",
      "title": "Run",
      "description": "The number of the run. If not specified, Joe Sandbox will choose one automatically",
      "order": 3
    },
    "type": {
      "type": "string",
      "title": "Type",
      "description": "The report type, e.g. 'html', 'bins'",
      "default": "html",
      "enum": [
        "bins",
        "binstrings",
        "classhtml",
        "classxml",
        "clusterxml",
        "cookbook",
        "executive",
        "graphreports",
        "html",
        "ida",
        "irjson",
        "irjsonfixed",
        "irxml",
        "ishots",
        "json",
        "jsonfixed",
        "lighthtml",
        "lightjson",
        "lightjsonfixed",
        "lightxml",
        "maec",
        "memdumps",
        "memstrings",
        "misp",
        "openioc",
        "pcap",
        "pcapslim",
        "pdf",
        "sample",
        "shoots",
        "unpack",
        "unpackpe",
        "xml",
        "yara"
      ],
      "order": 2
    },
    "webid": {
      "type": "string",
      "title": "WebID",
      "description": "The web ID of the analysis",
      "order": 1
    }
  },
  "required": [
    "webid"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class DownloadAnalysisOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "resource_content": {
      "type": "string",
      "format": "bytes",
      "displayType": "bytes",
      "title": "Resource Content",
      "description": "Content of the resource associated with the analysis in base64",
      "order": 2
    },
    "resource_name": {
      "type": "string",
      "title": "Resource Name",
      "description": "Name of the resource associated with the analysis",
      "order": 1
    }
  },
  "required": [
    "resource_content",
    "resource_name"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
