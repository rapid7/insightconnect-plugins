# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get assets that match the specified filter criteria. If no inputs are given, all assets will be returned"


class Input:
    ASSET_LABELS = "asset_labels"
    ASSET_STATE = "asset_state"
    ASSET_TYPE = "asset_type"
    ASSET_UNIQUE_ID = "asset_unique_id"
    CLOUD_PROVIDER_ID = "cloud_provider_id"
    COMPUTE_REGIONS = "compute_regions"
    COMPUTE_VPCS = "compute_vpcs"
    INTERNET_FACING = "internet_facing"
    STATE_SCORE = "state_score"
    STATE_SEVERITY = "state_severity"
    

class Output:
    ASSETS = "assets"
    TOTAL_ITEMS = "total_items"
    TOTAL_SUPPORTED_ITEMS = "total_supported_items"
    TOTAL_UNGROUPED_ITEMS = "total_ungrouped_items"
    

class GetAssetsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "asset_labels": {
      "type": "string",
      "title": "Asset Label",
      "description": "The label of the asset",
      "order": 5
    },
    "asset_state": {
      "type": "string",
      "title": "Asset State",
      "description": "The state of the asset",
      "order": 4
    },
    "asset_type": {
      "type": "string",
      "title": "Asset Type",
      "description": "The type of the asset",
      "order": 3
    },
    "asset_unique_id": {
      "type": "string",
      "title": "Asset Unique ID",
      "description": "Unique ID of the asset for which information will be obtained",
      "order": 1
    },
    "cloud_provider_id": {
      "type": "string",
      "title": "Cloud Provider ID",
      "description": "ID of the cloud provider for which the assets will be returned",
      "order": 2
    },
    "compute_regions": {
      "type": "string",
      "title": "Region",
      "description": "The region for which the assets will be returned",
      "order": 7
    },
    "compute_vpcs": {
      "type": "string",
      "title": "VPC",
      "description": "The virtual private cloud",
      "order": 8
    },
    "internet_facing": {
      "type": "string",
      "title": "Internet Facing",
      "description": "Whether asset is accessible from the internet",
      "order": 6
    },
    "state_score": {
      "type": "string",
      "title": "Score",
      "description": "The score of the asset",
      "order": 9
    },
    "state_severity": {
      "type": "string",
      "title": "Severity",
      "description": "The severity of the asset",
      "order": 10
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAssetsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assets": {
      "type": "array",
      "title": "Assets",
      "description": "Results containing information about assets",
      "items": {
        "$ref": "#/definitions/asset"
      },
      "order": 1
    },
    "total_items": {
      "type": "integer",
      "title": "Total Items",
      "description": "Total number of assets",
      "order": 2
    },
    "total_supported_items": {
      "type": "integer",
      "title": "Total Supported Items",
      "description": "Total number of supported assets",
      "order": 4
    },
    "total_ungrouped_items": {
      "type": "integer",
      "title": "Total Ungrouped Items",
      "description": "Total number of ungrouped assets",
      "order": 3
    }
  },
  "required": [
    "total_items"
  ],
  "definitions": {
    "asset": {
      "type": "object",
      "title": "asset",
      "properties": {
        "account_name": {
          "type": "string",
          "title": "Account Name",
          "description": "Account name",
          "order": 1
        },
        "asset_category": {
          "type": "string",
          "title": "Asset Category",
          "description": "Asset category",
          "order": 2
        },
        "asset_name": {
          "type": "string",
          "title": "Asset Name",
          "description": "Asset name",
          "order": 3
        },
        "asset_state": {
          "type": "string",
          "title": "Asset State",
          "description": "Asset state",
          "order": 4
        },
        "asset_subcategory": {
          "type": "string",
          "title": "Asset Subcategory",
          "description": "Asset subcategory",
          "order": 5
        },
        "asset_type_string": {
          "type": "string",
          "title": "Asset Type String",
          "description": "Asset type string",
          "order": 6
        },
        "asset_unique_id": {
          "type": "string",
          "title": "Asset Unique ID",
          "description": "Asset unique ID",
          "order": 7
        },
        "asset_vendor_id": {
          "type": "string",
          "title": "Asset Vendor ID",
          "description": "Asset vendor ID",
          "order": 8
        },
        "cloud_account_id": {
          "type": "string",
          "title": "Cloud Account ID",
          "description": "Cloud account ID",
          "order": 9
        },
        "cloud_provider": {
          "type": "string",
          "title": "Cloud Provider",
          "description": "Cloud provider",
          "order": 10
        },
        "cloud_provider_id": {
          "type": "string",
          "title": "Cloud Provider ID",
          "description": "Cloud provider ID",
          "order": 11
        },
        "cloud_vendor_id": {
          "type": "string",
          "title": "Cloud Vendor ID",
          "description": "Cloud vendor ID",
          "order": 12
        },
        "cluster_name": {
          "type": "string",
          "title": "Cluster Name",
          "description": "Cluster name",
          "order": 13
        },
        "configuration": {
          "type": "object",
          "title": "Configuration",
          "description": "Configuration",
          "order": 14
        },
        "group_name": {
          "type": "string",
          "title": "Group Name",
          "description": "Group name",
          "order": 15
        },
        "group_unique_id": {
          "type": "string",
          "title": "Group Unique ID",
          "description": "Group unique ID",
          "order": 16
        },
        "group_val": {
          "type": "string",
          "title": "Group Value",
          "description": "Group value",
          "order": 17
        },
        "model": {
          "type": "object",
          "title": "Model",
          "description": "Model",
          "order": 18
        },
        "organization_id": {
          "type": "string",
          "title": "Organization ID",
          "description": "Organization ID",
          "order": 19
        },
        "organization_name": {
          "type": "string",
          "title": "Organization Name",
          "description": "Organization name",
          "order": 20
        },
        "state": {
          "type": "object",
          "title": "State",
          "description": "State",
          "order": 21
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 22
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
