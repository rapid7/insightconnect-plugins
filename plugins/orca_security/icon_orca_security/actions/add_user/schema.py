# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Create an invitation to the organization for the specified user. Administrator privileges are required to perform this action"


class Input:
    ALL_CLOUD_ACCOUNTS = "all_cloud_accounts"
    CLOUD_ACCOUNTS = "cloud_accounts"
    INVITE_USER_EMAIL = "invite_user_email"
    ROLE = "role"
    SHOULD_SEND_EMAIL = "should_send_email"
    

class Output:
    STATUS = "status"
    

class AddUserInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "all_cloud_accounts": {
      "type": "boolean",
      "title": "All Cloud Accounts",
      "description": "Whether the user will have access to all cloud accounts",
      "order": 3
    },
    "cloud_accounts": {
      "type": "array",
      "title": "Cloud Accounts",
      "description": "A list of cloud accounts to which the user will have access",
      "items": {
        "type": "string"
      },
      "order": 4
    },
    "invite_user_email": {
      "type": "string",
      "title": "User Email",
      "description": "Email address of the user for whom the invitation will be created",
      "order": 1
    },
    "role": {
      "type": "string",
      "title": "Role",
      "description": "Role name or ID",
      "order": 2
    },
    "should_send_email": {
      "type": "boolean",
      "title": "Should Send Email",
      "description": "Whether the email should be sent",
      "order": 5
    }
  },
  "required": [
    "all_cloud_accounts",
    "invite_user_email",
    "role",
    "should_send_email"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddUserOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Status of the action performed",
      "order": 1
    }
  },
  "required": [
    "status"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
