# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Returns a single user, identified by ID"


class Input:
    ID = "id"
    

class Output:
    USER_FOUND = "user_found"
    USER_INFORMATION = "user_information"
    

class ShowUserInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "integer",
      "title": "ID",
      "description": "User ID",
      "order": 1
    }
  },
  "required": [
    "id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ShowUserOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "user_found": {
      "type": "boolean",
      "title": "User Found",
      "description": "Returns true if user with specified ID found",
      "order": 1
    },
    "user_information": {
      "$ref": "#/definitions/user",
      "title": "User_Information",
      "description": "Information on the user",
      "order": 2
    }
  },
  "definitions": {
    "user": {
      "type": "object",
      "title": "user",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email",
          "description": "User's Email",
          "order": 4
        },
        "first_name": {
          "type": "string",
          "title": "First Name",
          "description": "User's first name",
          "order": 2
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "User ID number",
          "order": 1
        },
        "last_name": {
          "type": "string",
          "title": "Last Name",
          "description": "User's last name",
          "order": 3
        },
        "role": {
          "type": "string",
          "title": "Role",
          "description": "User's role",
          "order": 5
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
