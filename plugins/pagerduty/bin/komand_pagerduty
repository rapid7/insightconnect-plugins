#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "PagerDuty"
Vendor = "rapid7"
Version = "3.0.1"
Description = "[PagerDuty](https://www.pagerduty.com/) provides enterprise-grade incident management that helps you orchestrate the ideal response to create better customer, employee, and business value. Use this plugin to manage users and incidents within workflows. The PagerDuty plugin makes requests to the V2 API"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_pagerduty import connection, actions, triggers, tasks

    class ICONPagerduty(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.GetOnCall())
        
            self.add_action(actions.GetUserById())
        
            self.add_action(actions.GetUserByEmail())
        
            self.add_action(actions.CreateUser())
        
            self.add_action(actions.DeleteUserById())
        
            self.add_action(actions.SendTriggerEvent())
        
            self.add_action(actions.SendAcknowledgeEvent())
        
            self.add_action(actions.SendResolveEvent())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONPagerduty())
    cli.run()


if __name__ == "__main__":
    main()
