# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Create a branch of an existing project"


class Input:
    ID = "id"
    PROJECT = "project"
    

class Output:
    ID = "id"
    LINK = "link"
    

class CreateBranchedProjectInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "integer",
      "title": "ID",
      "description": "ID of the project off which to create a branch",
      "order": 1
    },
    "project": {
      "$ref": "#/definitions/project",
      "title": "Project",
      "description": "Details of the project",
      "order": 2
    }
  },
  "required": [
    "id",
    "project"
  ],
  "definitions": {
    "link": {
      "type": "object",
      "title": "link",
      "properties": {
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "Relation of the link",
          "order": 1
        },
        "uri": {
          "type": "string",
          "title": "URI",
          "description": "Relative URL of the project",
          "order": 2
        }
      }
    },
    "project": {
      "type": "object",
      "title": "project",
      "properties": {
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID of the project",
          "order": 1
        },
        "is_public": {
          "type": "boolean",
          "title": "Is Public",
          "description": "Whether or not the project is public",
          "order": 4
        },
        "link": {
          "$ref": "#/definitions/link",
          "title": "Link",
          "description": "Metadata about the project",
          "order": 6
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the project",
          "order": 3
        },
        "sourceSettingsLink": {
          "$ref": "#/definitions/source_settings_link",
          "title": "Source Settings Link",
          "order": 5
        },
        "team_id": {
          "type": "string",
          "title": "Team ID",
          "description": "ID of the team to which this project belongs",
          "order": 2
        }
      },
      "definitions": {
        "link": {
          "type": "object",
          "title": "link",
          "properties": {
            "rel": {
              "type": "string",
              "title": "Rel",
              "description": "Relation of the link",
              "order": 1
            },
            "uri": {
              "type": "string",
              "title": "URI",
              "description": "Relative URL of the project",
              "order": 2
            }
          }
        },
        "source_settings_link": {
          "type": "object",
          "title": "source_settings_link",
          "properties": {
            "rel": {
              "type": "string",
              "title": "Rel",
              "description": "Relation of the link",
              "order": 2
            },
            "type": {
              "type": "string",
              "title": "Type",
              "description": "Type of Source Control Repository",
              "order": 1
            },
            "uri": {
              "type": "string",
              "title": "URI",
              "description": "Relative URL of the project",
              "order": 3
            }
          }
        }
      }
    },
    "source_settings_link": {
      "type": "object",
      "title": "source_settings_link",
      "properties": {
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "Relation of the link",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type of Source Control Repository",
          "order": 1
        },
        "uri": {
          "type": "string",
          "title": "URI",
          "description": "Relative URL of the project",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateBranchedProjectOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "id": {
      "type": "integer",
      "title": "ID",
      "description": "ID of the created project",
      "order": 1
    },
    "link": {
      "$ref": "#/definitions/link",
      "title": "Link",
      "description": "Metadata about the project",
      "order": 2
    }
  },
  "definitions": {
    "link": {
      "type": "object",
      "title": "link",
      "properties": {
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "Relation of the link",
          "order": 1
        },
        "uri": {
          "type": "string",
          "title": "URI",
          "description": "Relative URL of the project",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
