# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Checks to see if an IP address, CIDR IP address, or domain is in a Group"


class Input:
    ADDRESS = "address"
    ENABLE_SEARCH = "enable_search"
    GROUP = "group"
    

class Output:
    ADDRESS_OBJECTS = "address_objects"
    FOUND = "found"
    

class CheckIfAddressObjectInGroupInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address": {
      "type": "string",
      "title": "Address",
      "description": "IP, CIDR, or domain name when Enable Search is off or Address Object name, object ID, IP, CIDR, or domain name if Enable Search is on",
      "order": 2
    },
    "enable_search": {
      "type": "boolean",
      "title": "Enable Search",
      "description": "Set to true to search contents of object by its name, ID, IP, CIDR, or domain name",
      "default": false,
      "order": 3
    },
    "group": {
      "type": "string",
      "title": "Group",
      "description": "Name of address group to check",
      "order": 1
    }
  },
  "required": [
    "address",
    "enable_search",
    "group"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CheckIfAddressObjectInGroupOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "address_objects": {
      "type": "array",
      "title": "Address Objects",
      "description": "List of found address objects",
      "items": {
        "$ref": "#/definitions/address_objects"
      },
      "order": 2
    },
    "found": {
      "type": "boolean",
      "title": "Found",
      "description": "Was address found in group",
      "order": 1
    }
  },
  "required": [
    "found"
  ],
  "definitions": {
    "address_objects": {
      "type": "object",
      "title": "address_objects",
      "properties": {
        "host": {
          "$ref": "#/definitions/host",
          "title": "Host",
          "description": "Host",
          "order": 1
        },
        "kind": {
          "type": "string",
          "title": "Kind",
          "description": "Kind",
          "order": 2
        },
        "name": {
          "type": "string",
          "title": "Object Name",
          "description": "The name of the object",
          "order": 3
        },
        "objectId": {
          "type": "string",
          "title": "Object ID",
          "description": "Object ID",
          "order": 4
        },
        "selfLink": {
          "type": "string",
          "title": "Self Link",
          "description": "Self link",
          "order": 5
        }
      },
      "definitions": {
        "host": {
          "type": "object",
          "title": "host",
          "properties": {
            "kind": {
              "type": "string",
              "title": "Kind",
              "description": "Kind is the type of object e.g. IPv4Address, IPv4FQDN, etc.",
              "order": 1
            },
            "value": {
              "type": "string",
              "title": "Value",
              "description": "The value of the object. This will be the actual IPv4, IPv6, FQDN, etc. address the object refers to.",
              "order": 2
            }
          }
        }
      }
    },
    "host": {
      "type": "object",
      "title": "host",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind",
          "description": "Kind is the type of object e.g. IPv4Address, IPv4FQDN, etc.",
          "order": 1
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "The value of the object. This will be the actual IPv4, IPv6, FQDN, etc. address the object refers to.",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
