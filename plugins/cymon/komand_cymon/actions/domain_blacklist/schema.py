# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Retrieve Blacklisted Domains"


class Input:
    DAYS = "days"
    LIMIT = "limit"
    TAG = "tag"
    

class Output:
    ADDR = "addr"
    COUNT = "count"
    URL = "url"
    

class DomainBlacklistInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "days": {
      "type": "integer",
      "title": "Days",
      "description": "Age of Data in Days",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14
      ],
      "order": 2
    },
    "limit": {
      "type": "integer",
      "title": "Limit",
      "description": "Number of Results, 1-5000",
      "default": 10,
      "order": 1
    },
    "tag": {
      "type": "string",
      "title": "Tag",
      "description": "Tag",
      "enum": [
        "blacklist",
        "malware",
        "botnet",
        "spam",
        "phishing",
        "malicious activity",
        "dnsbl"
      ],
      "order": 3
    }
  },
  "required": [
    "days",
    "limit",
    "tag"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class DomainBlacklistOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "addr": {
      "type": "array",
      "title": "Blacklisted Domains",
      "description": "Blacklisted domains",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "count": {
      "type": "integer",
      "title": "Blacklist Count",
      "description": "Blacklist count",
      "order": 1
    },
    "url": {
      "type": "array",
      "title": "Cymon URL References",
      "description": "Cymon URL references",
      "items": {
        "type": "string"
      },
      "order": 3
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
