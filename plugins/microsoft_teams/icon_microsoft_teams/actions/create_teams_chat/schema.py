# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Create a chat in Microsoft Teams"


class Input:
    MEMBERS = "members"
    TOPIC = "topic"


class Output:
    CHAT = "chat"


class CreateTeamsChatInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "members": {
      "type": "array",
      "title": "Members",
      "description": "A list of usernames to set as members",
      "items": {
        "$ref": "#/definitions/itemMember"
      },
      "order": 2
    },
    "topic": {
      "type": "string",
      "title": "Group Topic",
      "description": "Topic of chat to be added (only available for group chats)",
      "order": 1
    }
  },
  "required": [
    "members"
  ],
  "definitions": {
    "itemMember": {
      "type": "object",
      "title": "itemMember",
      "properties": {
        "user_info": {
          "type": "string",
          "title": "User Info",
          "description": "The ID or Email address",
          "order": 1
        },
        "role": {
          "type": "string",
          "title": "Role",
          "description": "The role of the user to be added to the chat",
          "enum": [
            "owner",
            "guest"
          ],
          "order": 2
        }
      },
      "required": [
        "role",
        "user_info"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateTeamsChatOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "chat": {
      "$ref": "#/definitions/itemChat",
      "title": "Chat",
      "description": "Information about the chat that was created",
      "order": 1
    }
  },
  "definitions": {
    "itemChat": {
      "type": "object",
      "title": "itemChat",
      "properties": {
        "@odata.context": {
          "type": "string",
          "title": "Data Context",
          "description": "The context of the newly created chat",
          "order": 1
        },
        "chatType": {
          "type": "string",
          "title": "Chat Type",
          "description": "The type of the newly created chat",
          "order": 2
        },
        "createdDateTime": {
          "type": "string",
          "title": "Created Date Time",
          "description": "Created date time",
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "Chat ID",
          "description": "The ID of the newly created chat",
          "order": 4
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "title": "Last Updated Date Time",
          "description": "Last updated date time",
          "order": 5
        },
        "tenantId": {
          "type": "string",
          "title": "Tenant ID",
          "description": "The ID the directory that he newly created chat is in",
          "order": 6
        },
        "webUrl": {
          "type": "string",
          "title": "Web URL",
          "description": "The URL of the newly created chat",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
