# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Find groups that match a given query"


class Input:
    QUERY = "query"
    SOURCE = "source"
    

class Output:
    GROUPS = "groups"
    

class FindGroupsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "query": {
      "type": "string",
      "title": "Query",
      "description": "A string to query for",
      "order": 1
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "A group source to filter on, either \\"cloud\\" or \\"ldap\\"",
      "default": "cloud",
      "enum": [
        "cloud",
        "ldap"
      ],
      "order": 2
    }
  },
  "required": [
    "source"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class FindGroupsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "groups": {
      "type": "array",
      "title": "Groups",
      "description": "A list of groups that mach the query",
      "items": {
        "$ref": "#/definitions/group"
      },
      "order": 1
    }
  },
  "definitions": {
    "group": {
      "type": "object",
      "title": "group",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description",
          "description": "The name of the group",
          "order": 1
        },
        "folder_count": {
          "type": "integer",
          "title": "Folder Count",
          "order": 3
        },
        "id": {
          "type": "string",
          "title": "Id",
          "order": 5
        },
        "parent_id": {
          "type": "string",
          "title": "Parent Id",
          "order": 4
        },
        "source": {
          "type": "string",
          "title": "Source",
          "order": 2
        },
        "user_count": {
          "type": "integer",
          "title": "User Count",
          "order": 6
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
