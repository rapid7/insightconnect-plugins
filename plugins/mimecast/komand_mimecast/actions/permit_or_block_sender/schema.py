# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Permits or blocks a sender"


class Input:
    ACTION = "action"
    SENDER = "sender"
    TO = "to"
    

class Output:
    RESPONSE = "response"
    

class PermitOrBlockSenderInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "action": {
      "type": "string",
      "title": "Action",
      "description": "Either 'permit' (to bypass spam checks) or 'block' (to reject the email)",
      "default": "block",
      "enum": [
        "block",
        "permit"
      ],
      "order": 1
    },
    "sender": {
      "type": "string",
      "title": "Sender",
      "description": "The email address of the external sender",
      "order": 3
    },
    "to": {
      "type": "string",
      "title": "To",
      "description": "The email address of the internal recipient",
      "order": 2
    }
  },
  "required": [
    "action",
    "sender",
    "to"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class PermitOrBlockSenderOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "type": "array",
      "title": "Managed Sender",
      "description": "The Managed Sender that was created",
      "items": {
        "$ref": "#/definitions/managed_sender"
      },
      "order": 1
    }
  },
  "definitions": {
    "managed_sender": {
      "type": "object",
      "title": "managed_sender",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The Mimecast secure ID of the managed sender object",
          "order": 4
        },
        "sender": {
          "type": "string",
          "title": "Sender",
          "description": "The email address of the external sender",
          "order": 3
        },
        "to": {
          "type": "string",
          "title": "To",
          "description": "The email address of the internal recipient",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Either 'permit' (to bypass spam checks) or 'block' (to reject the email)",
          "order": 1
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
