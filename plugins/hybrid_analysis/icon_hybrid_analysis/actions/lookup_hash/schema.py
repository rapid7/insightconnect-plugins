# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get summary information for a given hash"


class Input:
    HASH = "hash"


class Output:
    FOUND = "found"
    REPORTS = "reports"


class LookupHashInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(
        r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "hash": {
      "type": "string",
      "title": "Hash",
      "description": "Hash to lookup. Must be MD5, SHA1, or SHA256",
      "order": 1
    }
  },
  "required": [
    "hash"
  ],
  "definitions": {}
}
    """
    )

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class LookupHashOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(
        r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "found": {
      "type": "boolean",
      "title": "Found",
      "description": "True if found",
      "order": 1
    },
    "reports": {
      "type": "array",
      "title": "Reports",
      "description": "Reports",
      "items": {
        "$ref": "#/definitions/report"
      },
      "order": 2
    }
  },
  "definitions": {
    "report": {
      "type": "object",
      "title": "report",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID which is generated by server",
          "order": 1
        },
        "environment_id": {
          "type": "integer",
          "title": "Environment ID",
          "description": "The environment that was used for analysis",
          "order": 2
        },
        "environment_description": {
          "type": "string",
          "title": "Environment Description",
          "description": "Environment description",
          "order": 3
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "State in which the analysis is in",
          "order": 4
        },
        "error_type": {
          "type": "string",
          "title": "Error Type",
          "description": "Type of error that occurred",
          "order": 5
        },
        "error_origin": {
          "type": "string",
          "title": "Error Origin",
          "description": "Error origin",
          "order": 6
        }
      }
    }
  }
}
    """
    )

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
