# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieve report by providing SHA256 generated by the Submit File action"


class Input:
    HASH = "hash"
    

class Output:
    ERROR = "error"
    ERROR_ORIGIN = "error_origin"
    ERROR_TYPE = "error_type"
    RELATED_REPORTS = "related_reports"
    STATE = "state"
    

class ReportInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "hash": {
      "type": "string",
      "title": "Hash",
      "description": "SHA256 hash",
      "order": 1
    }
  },
  "required": [
    "hash"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ReportOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "error": {
      "type": "string",
      "title": "Error",
      "description": "An error that occurred during the analysis",
      "order": 4
    },
    "error_origin": {
      "type": "string",
      "title": "Error Origin",
      "description": "Error origin",
      "order": 3
    },
    "error_type": {
      "type": "string",
      "title": "Error Type",
      "description": "Type of error that occurred",
      "order": 2
    },
    "related_reports": {
      "type": "array",
      "title": "Related Reports",
      "description": "Related reports which contained analysis information on linked data",
      "items": {
        "$ref": "#/definitions/related_reports"
      },
      "order": 5
    },
    "state": {
      "type": "string",
      "title": "State",
      "description": "State in which the analysis is in",
      "order": 1
    }
  },
  "required": [
    "state"
  ],
  "definitions": {
    "related_reports": {
      "type": "object",
      "title": "related_reports",
      "properties": {
        "environment_id": {
          "type": "integer",
          "title": "Environment ID",
          "description": "The environment that was used for analysis",
          "order": 1
        },
        "error_origin": {
          "type": "string",
          "title": "Error Origin",
          "description": "Error origin",
          "order": 2
        },
        "error_type": {
          "type": "string",
          "title": "Error Type",
          "description": "Type of error that occurred",
          "order": 3
        },
        "job_id": {
          "type": "string",
          "title": "Job ID",
          "description": "Job ID which is generated by server",
          "order": 4
        },
        "sha256": {
          "type": "string",
          "title": "SHA256",
          "description": "SHA256",
          "order": 5
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "State in which the analysis is in",
          "order": 6
        },
        "verdict": {
          "type": "string",
          "title": "Verdict",
          "description": "Verdict",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
