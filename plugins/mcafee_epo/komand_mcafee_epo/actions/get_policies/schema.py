# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get policies assigned to a user"


class Input:
    SEARCH_TEXT = "search_text"
    

class Output:
    POLICIES_RETURNED = "policies_returned"
    

class GetPoliciesInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "search_text": {
      "type": "string",
      "title": "Search Text",
      "description": "Finds all policies that the user is permitted to see that match the given search text",
      "order": 1
    }
  },
  "required": [
    "search_text"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetPoliciesOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "policies_returned": {
      "type": "array",
      "title": "Policies Returned",
      "description": "All policies that match to the given search text",
      "items": {
        "$ref": "#/definitions/policies_returned"
      },
      "order": 1
    }
  },
  "required": [
    "policies_returned"
  ],
  "definitions": {
    "policies_returned": {
      "type": "object",
      "title": "policies_returned",
      "properties": {
        "featureId": {
          "type": "string",
          "title": "Feature ID",
          "description": "Feature ID",
          "order": 1
        },
        "featureName": {
          "type": "string",
          "title": "Feature Name",
          "description": "Feature name",
          "order": 2
        },
        "objectId": {
          "type": "integer",
          "title": "Object ID",
          "description": "Object ID",
          "order": 3
        },
        "objectName": {
          "type": "string",
          "title": "Object Name",
          "description": "Object name",
          "order": 4
        },
        "objectNotes": {
          "type": "string",
          "title": "Object Notes",
          "description": "Object notes",
          "order": 5
        },
        "productId": {
          "type": "string",
          "title": "Product ID",
          "description": "Product ID",
          "order": 6
        },
        "productName": {
          "type": "string",
          "title": "Product Name",
          "description": "Product name",
          "order": 7
        },
        "typeId": {
          "type": "integer",
          "title": "Type ID",
          "description": "Type ID",
          "order": 8
        },
        "typeName": {
          "type": "string",
          "title": "Type Name",
          "description": "Type name",
          "order": 9
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
