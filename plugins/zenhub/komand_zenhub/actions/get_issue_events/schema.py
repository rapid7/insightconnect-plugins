# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Get the ZenHub Events for a GitHub Issue"


class Input:
    ISSUE_NUMBER = "issue_number"
    REPO_ID = "repo_id"
    

class Output:
    EVENTS = "events"
    

class GetIssueEventsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "issue_number": {
      "type": "integer",
      "title": "Issue Number",
      "description": "GitHub Issue Number",
      "order": 2
    },
    "repo_id": {
      "type": "integer",
      "title": "Repository ID",
      "description": "GitHub Repository ID e.g. 24237263",
      "order": 1
    }
  },
  "required": [
    "issue_number",
    "repo_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetIssueEventsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "events": {
      "type": "array",
      "title": "Issue Events",
      "description": "List of ZenHub Issue Events",
      "items": {
        "$ref": "#/definitions/issue_event"
      },
      "order": 1
    }
  },
  "definitions": {
    "issue_event": {
      "type": "object",
      "title": "issue_event",
      "properties": {
        "created_at": {
          "type": "string",
          "title": "Created At",
          "displayType": "date",
          "description": "Date of creation",
          "format": "date-time",
          "order": 3
        },
        "from_estimate_value": {
          "type": "integer",
          "title": "From Estimate Value",
          "description": "From estimate value",
          "order": 6
        },
        "from_pipeline_name": {
          "type": "string",
          "title": "From Pipeline Name",
          "description": "From pipeline name",
          "order": 4
        },
        "to_estimate_value": {
          "type": "integer",
          "title": "To Estimate Value",
          "order": 7
        },
        "to_pipeline_name": {
          "type": "string",
          "title": "To Pipeline Name",
          "description": "To pipeline name",
          "order": 5
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 2
        },
        "user_id": {
          "type": "integer",
          "title": "User ID",
          "description": "User id",
          "order": 1
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
