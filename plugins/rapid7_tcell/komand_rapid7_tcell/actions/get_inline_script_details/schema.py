# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Fetch details for the inline script with the given ID"


class Input:
    APP_ID = "app_id"
    INLINE_SCRIPT_ID = "inline_script_id"
    

class Output:
    INLINE_SCRIPT = "inline_script"
    

class GetInlineScriptDetailsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "app_id": {
      "type": "string",
      "title": "App ID",
      "description": "App ID",
      "order": 1
    },
    "inline_script_id": {
      "type": "string",
      "title": "Inline Script ID",
      "description": "Inline Script ID",
      "order": 2
    }
  },
  "required": [
    "app_id",
    "inline_script_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetInlineScriptDetailsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "inline_script": {
      "$ref": "#/definitions/inline_script",
      "title": "Inline Script",
      "description": "Details for the given inline script, including approved: whether the script is marked as intended; template: the script text with literals replaced by ?; created_at: when the script was added to the tCell database; last_reported_at: when the jsagent last reported this script",
      "order": 1
    }
  },
  "definitions": {
    "inline_script": {
      "type": "object",
      "title": "inline_script",
      "properties": {
        "approved": {
          "type": "boolean",
          "title": "Approved",
          "description": "Is the script approved",
          "order": 2
        },
        "created_at": {
          "type": "integer",
          "title": "Created At",
          "description": "Timestamp representing the date of creation",
          "order": 4
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "The ID of the script",
          "order": 1
        },
        "last_reported_at": {
          "type": "integer",
          "title": "Last Reported At",
          "description": "Timestamp representing the date when script was last reported",
          "order": 5
        },
        "template": {
          "type": "string",
          "title": "Template",
          "description": "Template",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
