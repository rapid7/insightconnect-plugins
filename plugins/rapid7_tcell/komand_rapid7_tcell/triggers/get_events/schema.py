# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Fetch events of the provided type"


class Input:
    
    APP_ID = "app_id"
    FILTER = "filter"
    FREQUENCY = "frequency"
    SOURCE = "source"
    

class Output:
    
    EVENT = "event"
    

class GetEventsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "app_id": {
      "type": "string",
      "title": "App ID",
      "description": "App ID",
      "order": 1
    },
    "filter": {
      "type": "string",
      "title": "Filter",
      "description": "Filters out events based on a predicate. The syntax is filter=field:operator:value, where: field is a field present in the data operator is one of include (equals), exclude (not equals), gt (greater than), and lt (less than) value is the value to apply the operator to",
      "order": 4
    },
    "frequency": {
      "type": "integer",
      "title": "Frequency",
      "description": "How often the trigger should check for new detections in seconds",
      "default": 5,
      "order": 3
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "The type of events to fetch",
      "enum": [
        "appfirewall",
        "inline",
        "login",
        "csp"
      ],
      "order": 2
    }
  },
  "required": [
    "app_id",
    "frequency",
    "source"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetEventsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "event": {
      "$ref": "#/definitions/event",
      "title": "Event",
      "description": "Matching event",
      "order": 1
    }
  },
  "definitions": {
    "event": {
      "type": "object",
      "title": "event",
      "properties": {
        "app_id": {
          "type": "string",
          "title": "App ID",
          "description": "App ID",
          "order": 10
        },
        "browser": {
          "type": "string",
          "title": "Browser",
          "description": "Browser",
          "order": 18
        },
        "city": {
          "type": "string",
          "title": "City",
          "description": "City",
          "order": 3
        },
        "country": {
          "type": "string",
          "title": "Country",
          "description": "Country",
          "order": 4
        },
        "detection_point": {
          "type": "string",
          "title": "Detection Point",
          "description": "Detection Point",
          "order": 21
        },
        "document_uri": {
          "type": "string",
          "title": "Document URI",
          "description": "Document URI",
          "order": 17
        },
        "from": {
          "type": "integer",
          "title": "From",
          "description": "From",
          "order": 13
        },
        "full_uri": {
          "type": "string",
          "title": "Full URI",
          "description": "Full URI",
          "order": 5
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 1
        },
        "ip": {
          "type": "string",
          "title": "IP",
          "description": "IP address",
          "order": 6
        },
        "location": {
          "$ref": "#/definitions/location",
          "title": "Location",
          "description": "Location",
          "order": 23
        },
        "method": {
          "type": "string",
          "title": "Method",
          "description": "Method",
          "order": 2
        },
        "path": {
          "type": "string",
          "title": "Path",
          "description": "Path",
          "order": 12
        },
        "route": {
          "type": "string",
          "title": "Route",
          "description": "Route",
          "order": 8
        },
        "route_id": {
          "type": "string",
          "title": "Route ID",
          "description": "Route ID",
          "order": 9
        },
        "script_id": {
          "type": "string",
          "title": "Script ID",
          "description": "Script ID",
          "order": 20
        },
        "script_pod": {
          "type": "string",
          "title": "Script Pos",
          "description": "Script pos",
          "order": 22
        },
        "session_id": {
          "type": "string",
          "title": "Session ID",
          "description": "Session ID",
          "order": 11
        },
        "static_hash": {
          "type": "string",
          "title": "Static Hash",
          "description": "Static hash",
          "order": 19
        },
        "stripped_uri": {
          "type": "string",
          "title": "Stripped URI",
          "description": "Stripped URI",
          "order": 16
        },
        "tags": {
          "type": "array",
          "title": "Tags",
          "description": "Tags",
          "items": {
            "type": "string"
          },
          "order": 15
        },
        "time": {
          "type": "integer",
          "title": "Time",
          "description": "Time (timestamp)",
          "order": 7
        },
        "to": {
          "type": "integer",
          "title": "To",
          "description": "To",
          "order": 14
        }
      },
      "definitions": {
        "location": {
          "type": "object",
          "title": "location",
          "properties": {
            "city": {
              "type": "string",
              "title": "City",
              "description": "City",
              "order": 3
            },
            "country": {
              "type": "string",
              "title": "Country",
              "description": "Country",
              "order": 4
            },
            "iso": {
              "type": "string",
              "title": "ISO",
              "description": "ISO code",
              "order": 5
            },
            "latitude": {
              "type": "number",
              "title": "Latitude",
              "description": "Latitude",
              "order": 1
            },
            "longitude": {
              "type": "number",
              "title": "Longitude",
              "description": "Longitude",
              "order": 2
            }
          }
        }
      }
    },
    "location": {
      "type": "object",
      "title": "location",
      "properties": {
        "city": {
          "type": "string",
          "title": "City",
          "description": "City",
          "order": 3
        },
        "country": {
          "type": "string",
          "title": "Country",
          "description": "Country",
          "order": 4
        },
        "iso": {
          "type": "string",
          "title": "ISO",
          "description": "ISO code",
          "order": 5
        },
        "latitude": {
          "type": "number",
          "title": "Latitude",
          "description": "Latitude",
          "order": 1
        },
        "longitude": {
          "type": "number",
          "title": "Longitude",
          "description": "Longitude",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
