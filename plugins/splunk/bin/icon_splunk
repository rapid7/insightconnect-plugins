#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "Splunk"
Vendor = "rapid7"
Version = "3.0.5"
Description = "[Splunk](https://www.splunk.com/) captures, indexes, and correlates real-time data in a searchable repository from which it can generate graphs, reports, alerts, dashboards, and visualizations. This plugin allows you to interact with Splunk by hooking alerts to trigger InsightConnect workflows, run (saved) searches, retrieve search results, and even insert data back into Splunk from a workflow"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from icon_splunk import connection, actions, triggers, tasks

    class ICONSplunk(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.Insert())
        
            self.add_action(actions.Search())
        
            self.add_action(actions.ListSavedSearches())
        
            self.add_action(actions.GetSavedSearchJobHistory())
        
            self.add_action(actions.RunSavedSearch())
        
            self.add_action(actions.DisplaySearchResults())
        
            self.add_action(actions.CreateSavedSearch())
        
            self.add_action(actions.DeleteSavedSearch())
        
            self.add_action(actions.ViewSavedSearchProperties())
        
            self.add_action(actions.ModifySavedSearchProperties())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONSplunk())
    cli.run()


if __name__ == "__main__":
    main()
