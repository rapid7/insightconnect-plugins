# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Delete assets/devices from the Console"


class Input:
    AGENTS = "agents"
    WHITELIST = "whitelist"


class Output:
    DELETED = "deleted"
    NOT_DELETED = "not_deleted"
    SUCCESS = "success"


class DeleteAssetInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "agents": {
      "type": "array",
      "title": "Agents",
      "description": "Device(s) to delete. Accepts IP address, MAC address, hostname, or device ID",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "whitelist": {
      "type": "array",
      "title": "Whitelist",
      "description": "This list contains a set of hosts that should not be deleted. This can include IPs, hostnames or device IDs",
      "items": {
        "type": "string"
      },
      "order": 2
    }
  },
  "required": [
    "agents"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class DeleteAssetOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "deleted": {
      "type": "array",
      "title": "Devices Deleted",
      "description": "List of assets that were deleted",
      "items": {
        "type": "string"
      },
      "order": 3
    },
    "not_deleted": {
      "type": "array",
      "title": "Devices Not Deleted",
      "description": "List of assets that were not deleted, either because of whitelist or because they were not found",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Return true if at least one device was deleted",
      "order": 1
    }
  },
  "required": [
    "success"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
