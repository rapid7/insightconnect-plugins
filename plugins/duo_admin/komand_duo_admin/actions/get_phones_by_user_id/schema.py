# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Gets a list of phones associated with the user ID"


class Input:
    USERID = "userId"


class Output:
    PHONELIST = "phoneList"


class GetPhonesByUserIdInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "userId": {
      "type": "string",
      "title": "User ID",
      "description": "The identifier of the user",
      "order": 1
    }
  },
  "required": [
    "userId"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetPhonesByUserIdOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "phoneList": {
      "type": "array",
      "title": "Phone List",
      "description": "List of phones associated with the user's ID",
      "items": {
        "$ref": "#/definitions/phoneUser"
      },
      "order": 1
    }
  },
  "definitions": {
    "phoneUser": {
      "type": "object",
      "title": "phoneUser",
      "properties": {
        "activated": {
          "type": "boolean",
          "title": "Activated",
          "description": "Whether the phone has already been activated for Duo Mobile",
          "order": 1
        },
        "capabilities": {
          "type": "array",
          "title": "Capabilities",
          "description": "List of factors that can be used with the phone",
          "items": {
            "type": "string"
          },
          "order": 2
        },
        "encrypted": {
          "type": "string",
          "title": "Encrypted",
          "description": "The encryption status of an Android or iOS device file system",
          "order": 3
        },
        "extension": {
          "type": "string",
          "title": "Extension",
          "description": "Extension of the phone",
          "order": 4
        },
        "fingerprint": {
          "type": "string",
          "title": "Fingerprint",
          "description": "Whether an Android or iOS phone is configured for biometric verification",
          "order": 5
        },
        "lastSeen": {
          "type": "string",
          "title": "Last Seen",
          "description": "An integer indicating the timestamp of the last contact between Duo's service and the activated Duo Mobile app installed on the phone",
          "order": 6
        },
        "model": {
          "type": "string",
          "title": "Model",
          "description": "The phone's model",
          "order": 7
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Free-form label for the phone",
          "order": 8
        },
        "number": {
          "type": "string",
          "title": "Number",
          "description": "Number",
          "order": 9
        },
        "phoneId": {
          "type": "string",
          "title": "Phone ID",
          "description": "The phone's ID",
          "order": 10
        },
        "platform": {
          "type": "string",
          "title": "Platform",
          "description": "The phone platform",
          "order": 11
        },
        "postdelay": {
          "type": "string",
          "title": "Postdelay",
          "description": "The time (in seconds) to wait after the extension is dialed and before the speaking the prompt",
          "order": 12
        },
        "predelay": {
          "type": "string",
          "title": "Predelay",
          "description": "The time (in seconds) to wait after the number picks up and before dialing the extension",
          "order": 13
        },
        "screenLock": {
          "type": "string",
          "title": "Screen Lock",
          "description": "Whether screen lock is enabled on an Android or iOS phone",
          "order": 14
        },
        "smsPasscodesSent": {
          "type": "boolean",
          "title": "SMS Passcodes Sent",
          "description": "Whether the SMS passcodes has been sent to this phone",
          "order": 15
        },
        "tampered": {
          "type": "string",
          "title": "Type",
          "description": "Whether an iOS or Android device is jailbroken or rooted",
          "order": 16
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "The type of phone",
          "order": 17
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
