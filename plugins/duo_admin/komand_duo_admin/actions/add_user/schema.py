# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Add a user in Duo Admin"


class Input:
    ALIAS = "alias"
    EMAIL = "email"
    FIRSTNAME = "firstname"
    LASTNAME = "lastname"
    NOTES = "notes"
    REALNAME = "realname"
    STATUS = "status"
    USERNAME = "username"
    

class Output:
    RESPONSE = "response"
    

class AddUserInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alias": {
      "type": "array",
      "title": "Alias",
      "description": "User alias. May have up to 4 unique amongst users",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "email": {
      "type": "string",
      "title": "Email",
      "description": "Email of the user",
      "order": 4
    },
    "firstname": {
      "type": "string",
      "title": "First Name",
      "description": "The users given name. Required for Duo's ID Proofing feature",
      "order": 7
    },
    "lastname": {
      "type": "string",
      "title": "Last Name",
      "description": "The users surname. Required for Duo's ID Proofing feature",
      "order": 8
    },
    "notes": {
      "type": "string",
      "title": "Notes",
      "description": "An optional description or notes field. Can be viewed in the Admin Panel",
      "order": 6
    },
    "realname": {
      "type": "string",
      "title": "Real Name",
      "description": "User's real name",
      "order": 3
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "User status, e.g. active, bypass, disabled",
      "default": "disabled",
      "enum": [
        "active",
        "bypass",
        "disabled"
      ],
      "order": 5
    },
    "username": {
      "type": "string",
      "title": "Username",
      "description": "The name of the user to create",
      "order": 1
    }
  },
  "required": [
    "username"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddUserOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "$ref": "#/definitions/response",
      "title": "Response",
      "description": "Response",
      "order": 1
    }
  },
  "definitions": {
    "group": {
      "type": "object",
      "title": "group",
      "properties": {
        "desc": {
          "type": "string",
          "title": "Desc",
          "order": 2
        },
        "name": {
          "type": "string",
          "title": "Name",
          "order": 1
        }
      }
    },
    "phone_user": {
      "type": "object",
      "title": "phone_user",
      "properties": {
        "activated": {
          "type": "boolean",
          "title": "Activated",
          "description": "Activated",
          "order": 1
        },
        "capabilities": {
          "type": "array",
          "title": "Capabilities",
          "description": "Capabilities",
          "items": {
            "type": "string"
          },
          "order": 2
        },
        "extension": {
          "type": "string",
          "title": "Extension",
          "description": "Extension",
          "order": 3
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name",
          "order": 4
        },
        "number": {
          "type": "string",
          "title": "Number",
          "description": "Number",
          "order": 5
        },
        "phone_id": {
          "type": "string",
          "title": "Phone ID",
          "description": "Phone ID",
          "order": 6
        },
        "platform": {
          "type": "string",
          "title": "Platform",
          "description": "Platform",
          "order": 7
        },
        "postdelay": {
          "type": "string",
          "title": "Post delay",
          "description": "Post delay",
          "order": 8
        },
        "predelay": {
          "type": "string",
          "title": "Predelay",
          "description": "Predelay",
          "order": 9
        },
        "sms_passcodes_sent": {
          "type": "boolean",
          "title": "SMS Passcodes Sent",
          "description": "SMS passcodes sent",
          "order": 10
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 11
        }
      }
    },
    "response": {
      "type": "object",
      "title": "response",
      "properties": {
        "alias1": {
          "type": "string",
          "title": "Alias 1",
          "description": "Alias 1",
          "order": 1
        },
        "alias2": {
          "type": "string",
          "title": "Alias 2",
          "description": "Alias 2",
          "order": 2
        },
        "alias3": {
          "type": "string",
          "title": "Alias 3",
          "description": "Alias 3",
          "order": 3
        },
        "alias4": {
          "type": "string",
          "title": "Alias 4",
          "description": "Alias 4",
          "order": 4
        },
        "email": {
          "type": "string",
          "title": "Email",
          "description": "Email",
          "order": 5
        },
        "firstname": {
          "type": "string",
          "title": "First Name",
          "description": "First name",
          "order": 6
        },
        "groups": {
          "type": "array",
          "title": "Groups",
          "description": "Groups",
          "items": {
            "$ref": "#/definitions/group"
          },
          "order": 7
        },
        "last_login": {
          "type": "integer",
          "title": "Last Login",
          "description": "Last login",
          "order": 8
        },
        "lastname": {
          "type": "string",
          "title": "Last Name",
          "description": "Last name",
          "order": 9
        },
        "notes": {
          "type": "string",
          "title": "Notes",
          "description": "Notes",
          "order": 10
        },
        "phones": {
          "type": "array",
          "title": "Phones",
          "description": "Phones",
          "items": {
            "$ref": "#/definitions/phone_user"
          },
          "order": 11
        },
        "realname": {
          "type": "string",
          "title": "Real Name",
          "description": "Real name",
          "order": 12
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status",
          "order": 13
        },
        "tokens": {
          "type": "array",
          "title": "Tokens",
          "description": "Tokens",
          "items": {
            "$ref": "#/definitions/token"
          },
          "order": 14
        },
        "user_id": {
          "type": "string",
          "title": "User ID",
          "description": "User ID",
          "order": 15
        },
        "username": {
          "type": "string",
          "title": "Username",
          "description": "Username",
          "order": 16
        }
      },
      "definitions": {
        "group": {
          "type": "object",
          "title": "group",
          "properties": {
            "desc": {
              "type": "string",
              "title": "Desc",
              "order": 2
            },
            "name": {
              "type": "string",
              "title": "Name",
              "order": 1
            }
          }
        },
        "phone_user": {
          "type": "object",
          "title": "phone_user",
          "properties": {
            "activated": {
              "type": "boolean",
              "title": "Activated",
              "description": "Activated",
              "order": 1
            },
            "capabilities": {
              "type": "array",
              "title": "Capabilities",
              "description": "Capabilities",
              "items": {
                "type": "string"
              },
              "order": 2
            },
            "extension": {
              "type": "string",
              "title": "Extension",
              "description": "Extension",
              "order": 3
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Name",
              "order": 4
            },
            "number": {
              "type": "string",
              "title": "Number",
              "description": "Number",
              "order": 5
            },
            "phone_id": {
              "type": "string",
              "title": "Phone ID",
              "description": "Phone ID",
              "order": 6
            },
            "platform": {
              "type": "string",
              "title": "Platform",
              "description": "Platform",
              "order": 7
            },
            "postdelay": {
              "type": "string",
              "title": "Post delay",
              "description": "Post delay",
              "order": 8
            },
            "predelay": {
              "type": "string",
              "title": "Predelay",
              "description": "Predelay",
              "order": 9
            },
            "sms_passcodes_sent": {
              "type": "boolean",
              "title": "SMS Passcodes Sent",
              "description": "SMS passcodes sent",
              "order": 10
            },
            "type": {
              "type": "string",
              "title": "Type",
              "description": "Type",
              "order": 11
            }
          }
        },
        "token": {
          "type": "object",
          "title": "token",
          "properties": {
            "serial": {
              "type": "string",
              "title": "Serial",
              "description": "Serial",
              "order": 1
            },
            "token_id": {
              "type": "string",
              "title": "Token ID",
              "description": "Token ID",
              "order": 2
            },
            "type": {
              "type": "string",
              "title": "Type",
              "description": "Type",
              "order": 3
            }
          }
        }
      }
    },
    "token": {
      "type": "object",
      "title": "token",
      "properties": {
        "serial": {
          "type": "string",
          "title": "Serial",
          "description": "Serial",
          "order": 1
        },
        "token_id": {
          "type": "string",
          "title": "Token ID",
          "description": "Token ID",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
