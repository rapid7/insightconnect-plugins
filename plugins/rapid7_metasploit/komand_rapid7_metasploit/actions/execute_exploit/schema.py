# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Run selected Metasploit exploit"


class Input:
    MODULE = "module"
    OPTIONS = "options"
    

class Output:
    CONSOLE_OUTPUT = "console_output"
    SESSION_INFORMATION = "session_information"
    

class ExecuteExploitInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "module": {
      "type": "string",
      "title": "Metasploit Module",
      "description": "A Metasploit module e.g exploit/multi/misc/java_rmi_server",
      "order": 2
    },
    "options": {
      "type": "object",
      "title": "Options",
      "description": "Metasploit module options e.g {\\"RHOST\\":\\"10.0.2.5\\", \\"RPORT\\":\\"1099\\", \\"LHOST\\":\\"10.0.2.15\\", \\"payload\\":\\"java/meterpreter/reverse_tcp\\"}",
      "order": 1
    }
  },
  "required": [
    "module"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ExecuteExploitOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "console_output": {
      "type": "array",
      "title": "Console Information",
      "description": "Information from the console when a module is executed",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "session_information": {
      "$ref": "#/definitions/session_info",
      "title": "Session Information",
      "description": "Session information provided when a module is executed",
      "order": 2
    }
  },
  "definitions": {
    "session_info": {
      "type": "object",
      "title": "session_info",
      "properties": {
        "desc": {
          "type": "string",
          "title": "Description",
          "description": "Description",
          "order": 16
        },
        "exploit_uuid": {
          "type": "string",
          "title": "Exploit UUID",
          "description": "Exploit UUID",
          "order": 9
        },
        "info": {
          "type": "string",
          "title": "Information",
          "description": "Information about session",
          "order": 2
        },
        "routes": {
          "type": "string",
          "title": "Routes",
          "description": "Routes",
          "order": 12
        },
        "session_host": {
          "type": "string",
          "title": "Session Host",
          "description": "Session host",
          "order": 15
        },
        "session_id": {
          "type": "integer",
          "title": "Session ID",
          "description": "Session ID",
          "order": 1
        },
        "session_port": {
          "type": "integer",
          "title": "Session Port",
          "description": "Session port",
          "order": 4
        },
        "target_host": {
          "type": "string",
          "title": "Target Host",
          "description": "Target host",
          "order": 13
        },
        "tunnel_local": {
          "type": "string",
          "title": "Tunnel Local",
          "description": "Tunnel local",
          "order": 7
        },
        "tunnel_peer": {
          "type": "string",
          "title": "Tunnel Peer",
          "description": "Tunnel peer",
          "order": 10
        },
        "type": {
          "type": "string",
          "title": "Session Type",
          "description": "Session Type e.g. meterpreter or shell",
          "order": 14
        },
        "username": {
          "type": "string",
          "title": "Username",
          "description": "Username of the session",
          "order": 3
        },
        "uuid": {
          "type": "string",
          "title": "UUID",
          "description": "UUID of session",
          "order": 6
        },
        "via_exploit": {
          "type": "string",
          "title": "Via Exploit",
          "description": "Exploit used to gain access",
          "order": 8
        },
        "via_payload": {
          "type": "string",
          "title": "Via Payload",
          "description": "Payload used to create session",
          "order": 5
        },
        "workspace": {
          "type": "string",
          "title": "Workspace",
          "description": "Metasploit workspace",
          "order": 11
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
