# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Proxies all calls to the actual datasource"


class Input:
    DATASOURCE_ID = "datasource_id"
    PARAMETERS = "parameters"
    PATH = "path"
    

class Output:
    RESPONSE = "response"
    

class DoProxiedDatasourceCallInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "datasource_id": {
      "type": "integer",
      "title": "Datasource ID",
      "description": "Unique ID of the Datasource eg. 123",
      "order": 1
    },
    "parameters": {
      "type": "object",
      "title": "Query Parameters",
      "description": "Query Parameters, if any, to be used for the request",
      "order": 3
    },
    "path": {
      "type": "string",
      "title": "Call Path",
      "description": "Path to be called at datasource eg. `/logstash/_search`",
      "order": 2
    }
  },
  "required": [
    "datasource_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class DoProxiedDatasourceCallOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "type": "object",
      "title": "Response Data",
      "description": "Data returned from the datasource",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
