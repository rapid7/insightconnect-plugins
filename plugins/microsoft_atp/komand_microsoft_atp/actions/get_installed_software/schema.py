# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Retrieves a collection of installed software related to a given machine IP address, hostname, or machine ID"


class Input:
    MACHINE = "machine"
    

class Output:
    SOFTWARE = "software"
    

class GetInstalledSoftwareInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "machine": {
      "type": "string",
      "title": "Machine",
      "description": "Machine IP address, hostname, or machine ID",
      "order": 1
    }
  },
  "required": [
    "machine"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetInstalledSoftwareOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "software": {
      "type": "array",
      "title": "Software",
      "description": "List of installed software on the machine",
      "items": {
        "$ref": "#/definitions/software"
      },
      "order": 1
    }
  },
  "required": [
    "software"
  ],
  "definitions": {
    "software": {
      "type": "object",
      "title": "software",
      "properties": {
        "activeAlert": {
          "type": "boolean",
          "title": "Active Alert",
          "description": "Active alert",
          "order": 1
        },
        "exposedMachines": {
          "type": "integer",
          "title": "Exposed Machines",
          "description": "Exposed machines",
          "order": 2
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 3
        },
        "impactScore": {
          "type": "number",
          "title": "Impact Score",
          "description": "Impact score",
          "order": 4
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name",
          "order": 5
        },
        "publicExploit": {
          "type": "boolean",
          "title": "Public Exploit",
          "description": "Public exploit",
          "order": 6
        },
        "vendor": {
          "type": "string",
          "title": "Vendor",
          "description": "Vendor",
          "order": 7
        },
        "weaknesses": {
          "type": "integer",
          "title": "Weaknesses",
          "description": "Weaknesses",
          "order": 8
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
