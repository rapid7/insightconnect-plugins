# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Add or remove machine tags"


class Input:
    MACHINE = "machine"
    TAG = "tag"
    TYPE = "type"
    

class Output:
    MANAGE_TAGS_RESPONSE = "manage_tags_response"
    

class ManageTagsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "machine": {
      "type": "string",
      "title": "Machine",
      "description": "Machine IP address, hostname, or machine ID",
      "order": 1
    },
    "tag": {
      "type": "string",
      "title": "Tag",
      "description": "The tag value",
      "order": 2
    },
    "type": {
      "type": "boolean",
      "title": "Type",
      "description": "True to add tag, false to remove it",
      "default": true,
      "order": 3
    }
  },
  "required": [
    "machine",
    "tag",
    "type"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ManageTagsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "manage_tags_response": {
      "$ref": "#/definitions/manage_tags_response",
      "title": "Manage Tags Response",
      "description": "A response that includes updated tags and supplemental information about the machine",
      "order": 1
    }
  },
  "required": [
    "manage_tags_response"
  ],
  "definitions": {
    "manage_tags_response": {
      "type": "object",
      "title": "manage_tags_response",
      "properties": {
        "@odata.context": {
          "type": "string",
          "title": "@Odata.Context",
          "description": "@odata.context",
          "order": 1
        },
        "agentVersion": {
          "type": "string",
          "title": "Agent Version",
          "description": "Agent version",
          "order": 2
        },
        "computerDnsName": {
          "type": "string",
          "title": "Computer DNS Name",
          "description": "Computer DNS name",
          "order": 3
        },
        "deviceValue": {
          "type": "string",
          "title": "Device Value",
          "description": "Device value",
          "order": 4
        },
        "exposureLevel": {
          "type": "string",
          "title": "Exposure Level",
          "description": "Exposure level",
          "order": 5
        },
        "firstSeen": {
          "type": "string",
          "title": "First Seen",
          "description": "First seen",
          "order": 6
        },
        "healthStatus": {
          "type": "string",
          "title": "Health Status",
          "description": "Health status",
          "order": 7
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 8
        },
        "isAadJoined": {
          "type": "boolean",
          "title": "Is AAD Joined",
          "description": "Is AAD joined",
          "order": 9
        },
        "lastExternalIpAddress": {
          "type": "string",
          "title": "Last External IP Address",
          "description": "Last external IP address",
          "order": 10
        },
        "lastIpAddress": {
          "type": "string",
          "title": "Last IP Address",
          "description": "Last IP address",
          "order": 11
        },
        "lastSeen": {
          "type": "string",
          "title": "Last Seen",
          "description": "Last seen",
          "order": 12
        },
        "machineTags": {
          "type": "array",
          "title": "Machine Tags",
          "description": "Machine tags",
          "items": {
            "type": "string"
          },
          "order": 13
        },
        "osBuild": {
          "type": "integer",
          "title": "OS Build",
          "description": "OS build",
          "order": 14
        },
        "osPlatform": {
          "type": "string",
          "title": "OS Platform",
          "description": "OS platform",
          "order": 15
        },
        "osProcessor": {
          "type": "string",
          "title": "OS Processor",
          "description": "OS Processor",
          "order": 16
        },
        "rbacGroupId": {
          "type": "integer",
          "title": "RBAC Group ID",
          "description": "RBAC group ID",
          "order": 17
        },
        "riskScore": {
          "type": "string",
          "title": "Risk Score",
          "description": "Risk score",
          "order": 18
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Version",
          "order": 19
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
