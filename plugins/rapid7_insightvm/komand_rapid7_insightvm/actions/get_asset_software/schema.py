# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get software found on an asset. Can only be used if the asset has first been scanned"


class Input:
    ASSET_ID = "asset_id"
    

class Output:
    SOFTWARE = "software"
    

class GetAssetSoftwareInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "asset_id": {
      "type": "integer",
      "title": "Asset ID",
      "description": "ID of the asset for which to find software",
      "order": 1
    }
  },
  "required": [
    "asset_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAssetSoftwareOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "software": {
      "type": "array",
      "title": "Software",
      "description": "Software found on the asset",
      "items": {
        "$ref": "#/definitions/software"
      },
      "order": 1
    }
  },
  "definitions": {
    "configuration": {
      "type": "object",
      "title": "configuration",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Name of the configuration value",
          "order": 1
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "Configuration value",
          "order": 2
        }
      }
    },
    "cpe": {
      "type": "object",
      "title": "cpe",
      "properties": {
        "edition": {
          "type": "string",
          "title": "Edition",
          "description": "Edition-related terms applied by the vendor to the product",
          "order": 1
        },
        "language": {
          "type": "string",
          "title": "Language",
          "description": "Defines the language supported in the user interface of the product being described. The format of the language tag adheres to RFC 5646",
          "order": 2
        },
        "other": {
          "type": "string",
          "title": "Other",
          "description": "Captures any other general descriptive or identifying information which is vendor- or product-specific and which does not logically fit in any other attribute value",
          "order": 3
        },
        "part": {
          "type": "string",
          "title": "Part",
          "description": "A single letter code that designates the particular platform part that is being identified",
          "order": 4
        },
        "product": {
          "type": "string",
          "title": "Product",
          "description": "Most common and recognizable title or name of the product",
          "order": 5
        },
        "swEdition": {
          "type": "string",
          "title": "Software Edition",
          "description": "Characterizes how the product is tailored to a particular market or class of end users",
          "order": 6
        },
        "targetHW": {
          "type": "string",
          "title": "Target Hardware",
          "description": "Characterize the instruction set architecture on which the product operates",
          "order": 7
        },
        "targetSW": {
          "type": "string",
          "title": "Target Software",
          "description": "Characterizes the software computing environment within which the product operates",
          "order": 8
        },
        "update": {
          "type": "string",
          "title": "Update",
          "description": "Vendor-specific alphanumeric strings characterizing the particular update, service pack, or point release of the product",
          "order": 9
        },
        "v2.2": {
          "type": "string",
          "title": "Version 2.2",
          "description": "The full CPE string in the CPE 2.2 format",
          "order": 10
        },
        "v2.3": {
          "type": "string",
          "title": "Version 2.3",
          "description": "The full CPE string in the CPE 2.3 format",
          "order": 11
        },
        "vendor": {
          "type": "string",
          "title": "Vendor",
          "description": "The person or organization that manufactured or created the product",
          "order": 12
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Vendor-specific alphanumeric strings characterizing the particular release version of the product",
          "order": 13
        }
      }
    },
    "software": {
      "type": "object",
      "title": "software",
      "properties": {
        "configurations": {
          "type": "array",
          "title": "Configurations",
          "description": "Configurations",
          "items": {
            "$ref": "#/definitions/configuration"
          },
          "order": 1
        },
        "cpe": {
          "$ref": "#/definitions/cpe",
          "title": "CPE",
          "description": "CPE",
          "order": 2
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "Description of the software",
          "order": 3
        },
        "family": {
          "type": "string",
          "title": "Family",
          "description": "Family of the software",
          "order": 4
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID",
          "order": 5
        },
        "product": {
          "type": "string",
          "title": "Product",
          "description": "Product of the software",
          "order": 6
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type of the software",
          "order": 7
        },
        "vendor": {
          "type": "string",
          "title": "Vendor",
          "description": "Vendor of the software",
          "order": 8
        },
        "version": {
          "type": "string",
          "title": "Version",
          "description": "Version of the software",
          "order": 9
        }
      },
      "definitions": {
        "configuration": {
          "type": "object",
          "title": "configuration",
          "properties": {
            "name": {
              "type": "string",
              "title": "Name",
              "description": "Name of the configuration value",
              "order": 1
            },
            "value": {
              "type": "string",
              "title": "Value",
              "description": "Configuration value",
              "order": 2
            }
          }
        },
        "cpe": {
          "type": "object",
          "title": "cpe",
          "properties": {
            "edition": {
              "type": "string",
              "title": "Edition",
              "description": "Edition-related terms applied by the vendor to the product",
              "order": 1
            },
            "language": {
              "type": "string",
              "title": "Language",
              "description": "Defines the language supported in the user interface of the product being described. The format of the language tag adheres to RFC 5646",
              "order": 2
            },
            "other": {
              "type": "string",
              "title": "Other",
              "description": "Captures any other general descriptive or identifying information which is vendor- or product-specific and which does not logically fit in any other attribute value",
              "order": 3
            },
            "part": {
              "type": "string",
              "title": "Part",
              "description": "A single letter code that designates the particular platform part that is being identified",
              "order": 4
            },
            "product": {
              "type": "string",
              "title": "Product",
              "description": "Most common and recognizable title or name of the product",
              "order": 5
            },
            "swEdition": {
              "type": "string",
              "title": "Software Edition",
              "description": "Characterizes how the product is tailored to a particular market or class of end users",
              "order": 6
            },
            "targetHW": {
              "type": "string",
              "title": "Target Hardware",
              "description": "Characterize the instruction set architecture on which the product operates",
              "order": 7
            },
            "targetSW": {
              "type": "string",
              "title": "Target Software",
              "description": "Characterizes the software computing environment within which the product operates",
              "order": 8
            },
            "update": {
              "type": "string",
              "title": "Update",
              "description": "Vendor-specific alphanumeric strings characterizing the particular update, service pack, or point release of the product",
              "order": 9
            },
            "v2.2": {
              "type": "string",
              "title": "Version 2.2",
              "description": "The full CPE string in the CPE 2.2 format",
              "order": 10
            },
            "v2.3": {
              "type": "string",
              "title": "Version 2.3",
              "description": "The full CPE string in the CPE 2.3 format",
              "order": 11
            },
            "vendor": {
              "type": "string",
              "title": "Vendor",
              "description": "The person or organization that manufactured or created the product",
              "order": 12
            },
            "version": {
              "type": "string",
              "title": "Version",
              "description": "Vendor-specific alphanumeric strings characterizing the particular release version of the product",
              "order": 13
            }
          }
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
