# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Check for new InsightVM vulnerability exceptions"


class Input:
    FREQUENCY = "frequency"
    STATUS_FILTER = "status_filter"


class Output:
    EXCEPTION = "exception"


class NewExceptionRequestInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "frequency": {
      "type": "integer",
      "title": "Frequency",
      "description": "How often the trigger should check for new vulnerability exception requests",
      "default": 5,
      "order": 1
    },
    "status_filter": {
      "type": "array",
      "title": "Status Filter",
      "description": "List of vulnerability statuses to match against. Options include: Under Review and Approved",
      "default": "[\"Under Review\"]",
      "items": {
        "type": "string"
      },
      "order": 2
    }
  },
  "required": [
    "frequency"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class NewExceptionRequestOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "exception": {
      "$ref": "#/definitions/vulnerability_exception",
      "title": "Vulnerability Exception",
      "description": "InsightVM vulnerability exception",
      "order": 1
    }
  },
  "definitions": {
    "vulnerability_exception": {
      "type": "object",
      "title": "vulnerability_exception",
      "properties": {
        "expires": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Expires",
          "description": "The date and time the vulnerability exception is set to expire",
          "order": 1
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "The state of the vulnerability exception",
          "enum": [
            "deleted",
            "expired",
            "approved",
            "rejected",
            "under review"
          ],
          "order": 2
        },
        "id": {
          "type": "integer",
          "title": "Vulnerability Exception ID",
          "description": "The ID uniquely identifying the vulnerability exception",
          "order": 3
        },
        "scope": {
          "type": "object",
          "title": "Exception Scope",
          "description": "Details of the scope of the exception",
          "order": 4
        },
        "submit": {
          "type": "object",
          "title": "Submission Details",
          "description": "Details of the exception submission",
          "order": 5
        },
        "review": {
          "type": "object",
          "title": "Review Details",
          "description": "Details of the exception review",
          "order": 6
        },
        "links": {
          "type": "array",
          "title": "Links",
          "description": "Hypermedia links to corresponding or related resources",
          "items": {
            "$ref": "#/definitions/link"
          },
          "order": 7
        }
      },
      "required": [
        "id",
        "scope",
        "state",
        "submit"
      ]
    },
    "link": {
      "type": "object",
      "title": "link",
      "properties": {
        "href": {
          "type": "string",
          "title": "URL",
          "description": "A hypertext reference, which is either a URI (see RFC 3986) or URI template (see RFC 6570)",
          "order": 1
        },
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "Link relation type following RFC 5988",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
