# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Check for new InsightVM scans by site and scan status"


class Input:
    FREQUENCY = "frequency"
    MOST_RECENT_SCAN = "most_recent_scan"
    SITE_NAME_FILTER = "site_name_filter"
    STATUS_FILTER = "status_filter"


class Output:
    SCAN = "scan"


class NewScansInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "frequency": {
      "type": "integer",
      "title": "Frequency",
      "description": "How often the trigger should check for new scans in minutes",
      "default": 5,
      "order": 1
    },
    "most_recent_scan": {
      "type": "boolean",
      "title": "Most Recent Scan Only",
      "description": "Only process the most recent scan for a site since the last time the trigger was run",
      "default": true,
      "order": 3
    },
    "site_name_filter": {
      "type": "string",
      "title": "Site Name Filter",
      "description": "Regular expression to match sites where new scans should be triggered",
      "default": ".*",
      "order": 2
    },
    "status_filter": {
      "type": "array",
      "title": "Status Filter",
      "description": "List of scan statuses to match for trigger; options include: Aborted, Successful, Running, Stopped, Failed, Paused, Unknown",
      "default": "[\"Successful\"]",
      "items": {
        "type": "string"
      },
      "order": 4
    }
  },
  "required": [
    "frequency",
    "most_recent_scan",
    "site_name_filter"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class NewScansOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "scan": {
      "$ref": "#/definitions/scan",
      "title": "Scan",
      "description": "InsightVM Scan",
      "order": 1
    }
  },
  "definitions": {
    "scan": {
      "type": "object",
      "title": "scan",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Scan status (aborted, unknown, running, finished, stopped, error, paused, dispatched, integrating)",
          "order": 1
        },
        "scanType": {
          "type": "string",
          "title": "Scan Type",
          "description": "Type of scan (automated, manual, scheduled)",
          "order": 2
        },
        "assets": {
          "type": "integer",
          "title": "Assets",
          "description": "Count of assets identified during the scan",
          "order": 3
        },
        "links": {
          "type": "array",
          "title": "Links",
          "description": "List of hypermedia links to corresponding resources",
          "items": {
            "$ref": "#/definitions/link"
          },
          "order": 4
        },
        "siteName": {
          "type": "string",
          "title": "Site Name",
          "description": "Name of the site scanned",
          "order": 5
        },
        "vulnerabilities": {
          "$ref": "#/definitions/vulnerabilities_count",
          "title": "Vulnerabilities",
          "description": "Counts of vulnerabilities identified during the scan",
          "order": 6
        },
        "startedBy": {
          "type": "string",
          "title": "Started By",
          "description": "User that started the scan",
          "order": 7
        },
        "engineId": {
          "type": "integer",
          "title": "Engine ID",
          "description": "ID for the scan engine/scan engine pool used for the scan",
          "order": 8
        },
        "siteId": {
          "type": "integer",
          "title": "Site ID",
          "description": "ID of the site scanned",
          "order": 9
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Start Time",
          "description": "Start time for the scan",
          "order": 10
        },
        "duration": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "Duration",
          "description": "Duration of the scan",
          "order": 11
        },
        "engineName": {
          "type": "string",
          "title": "Engine Name",
          "description": "Name of the scan engine/scan engine pool used for the scan",
          "order": 12
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description": "Scan status message",
          "order": 13
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "displayType": "date",
          "title": "End Time",
          "description": "End time of the scan",
          "order": 14
        },
        "id": {
          "type": "integer",
          "title": "ID",
          "description": "ID of the scan",
          "order": 15
        },
        "scanName": {
          "type": "string",
          "title": "Scan Name",
          "description": "Name of the scan",
          "order": 16
        }
      }
    },
    "link": {
      "type": "object",
      "title": "link",
      "properties": {
        "href": {
          "type": "string",
          "title": "URL",
          "description": "A hypertext reference, which is either a URI (see RFC 3986) or URI template (see RFC 6570)",
          "order": 1
        },
        "rel": {
          "type": "string",
          "title": "Rel",
          "description": "Link relation type following RFC 5988",
          "order": 2
        }
      }
    },
    "vulnerabilities_count": {
      "type": "object",
      "title": "vulnerabilities_count",
      "properties": {
        "critical": {
          "type": "integer",
          "title": "Critical",
          "description": "Number of critical vulnerabilities",
          "order": 1
        },
        "moderate": {
          "type": "integer",
          "title": "Moderate",
          "description": "Number of moderate vulnerabilities",
          "order": 2
        },
        "severe": {
          "type": "integer",
          "title": "Severe",
          "description": "Number of severe vulnerabilities",
          "order": 3
        },
        "total": {
          "type": "integer",
          "title": "Total number of vulnerabilities",
          "description": "Total",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
