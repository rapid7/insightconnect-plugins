# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Run a workflow and wait for results"


class Input:
    COMPLETION_CHECKS = "completion_checks"
    INPUT = "input"
    TIMEOUT = "timeout"
    WORKFLOW_NAME = "workflow_name"
    WORKFLOW_UID = "workflow_uid"
    

class Output:
    CREATED_AT = "created_at"
    ENDED_AT = "ended_at"
    GROUP_ID = "group_id"
    JOB_ID = "job_id"
    NAME = "name"
    STATUS = "status"
    STEPS = "steps"
    UPDATED_AT = "updated_at"
    URL = "url"
    WORKFLOW_UID = "workflow_uid"
    

class RunSynchronouslyInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "completion_checks": {
      "type": "number",
      "title": "Completion Checks",
      "description": "How many times the executed workflow should be checked for completion during the timeout period. Higher numbers should result in quicker job turnover. Leave blank if timeout is set to 0",
      "default": 10,
      "order": 4
    },
    "input": {
      "type": "object",
      "title": "Input",
      "description": "Input object to supply to the workflow job",
      "order": 5
    },
    "timeout": {
      "type": "number",
      "title": "Timeout",
      "description": "Timeout for executed workflow to finish, in seconds. Use 0 for no timeout",
      "default": 150,
      "order": 3
    },
    "workflow_name": {
      "type": "string",
      "title": "Workflow Name",
      "description": "Workflow name to run. Either this or UID should be provided",
      "order": 1
    },
    "workflow_uid": {
      "type": "string",
      "title": "Workflow UID",
      "description": "Workflow UID to run. Either this or name should be provided",
      "order": 2
    }
  },
  "required": [
    "timeout"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RunSynchronouslyOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "created_at": {
      "type": "string",
      "title": "Created At",
      "description": "Created at",
      "order": 7
    },
    "ended_at": {
      "type": "string",
      "title": "Ended At",
      "description": "Ended at",
      "order": 9
    },
    "group_id": {
      "type": "string",
      "title": "Group ID",
      "description": "Job Group ID",
      "order": 3
    },
    "job_id": {
      "type": "string",
      "title": "Job ID",
      "description": "Job ID",
      "order": 2
    },
    "name": {
      "type": "string",
      "title": "Name",
      "description": "Name",
      "order": 5
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Job Status",
      "order": 1
    },
    "steps": {
      "type": "array",
      "title": "Steps",
      "description": "Step outputs",
      "items": {
        "type": "object"
      },
      "order": 6
    },
    "updated_at": {
      "type": "string",
      "title": "Updated At",
      "description": "Updated at",
      "order": 8
    },
    "url": {
      "type": "string",
      "title": "URL",
      "description": "Job URL",
      "order": 10
    },
    "workflow_uid": {
      "type": "string",
      "title": "Workflow UID",
      "description": "Workflow UID",
      "order": 4
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
