# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get rule"


class Input:
    RULE_ID = "rule_id"
    RULESET_ID = "ruleset_id"
    

class Output:
    RULE = "rule"
    

class GetRuleInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "rule_id": {
      "type": "string",
      "title": "Rule ID",
      "description": "Rule ID",
      "order": 1
    },
    "ruleset_id": {
      "type": "string",
      "title": "Ruleset ID",
      "description": "Ruleset ID for which the rule ID belongs",
      "order": 2
    }
  },
  "required": [
    "rule_id",
    "ruleset_id"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetRuleOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "rule": {
      "$ref": "#/definitions/rule",
      "title": "Rule",
      "description": "Rule",
      "order": 1
    }
  },
  "required": [
    "rule"
  ],
  "definitions": {
    "rule": {
      "type": "object",
      "title": "rule",
      "properties": {
        "alertDescription": {
          "type": "string",
          "title": "Alert Description",
          "description": "Alert description",
          "order": 9
        },
        "createdAt": {
          "type": "string",
          "title": "Created At",
          "description": "Created at",
          "order": 5
        },
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enabled",
          "order": 14
        },
        "filter": {
          "type": "string",
          "title": "Filter",
          "description": "Filter",
          "order": 10
        },
        "id": {
          "type": "string",
          "title": "ID",
          "description": "Event ID",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Rule Name",
          "description": "Rule name",
          "order": 3
        },
        "rulesetId": {
          "type": "string",
          "title": "Ruleset ID",
          "description": "Ruleset ID",
          "order": 2
        },
        "severityOfAlerts": {
          "type": "number",
          "title": "Severity of Alerts",
          "description": "Severity of alerts, between 1 and 3",
          "order": 8
        },
        "suppressions": {
          "type": "array",
          "title": "Suppressions",
          "description": "Suppressions",
          "items": {
            "type": "string"
          },
          "order": 13
        },
        "threshold": {
          "type": "number",
          "title": "Threshold",
          "description": "Threshold",
          "order": 12
        },
        "title": {
          "type": "string",
          "title": "Title",
          "description": "Rule title",
          "order": 7
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Type",
          "order": 4
        },
        "updatedAt": {
          "type": "string",
          "title": "Updated At",
          "description": "Updated at",
          "order": 6
        },
        "window": {
          "type": "number",
          "title": "Window",
          "description": "Window",
          "order": 11
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
