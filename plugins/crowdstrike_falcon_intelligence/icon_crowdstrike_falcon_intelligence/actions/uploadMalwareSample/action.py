import insightconnect_plugin_runtime
from .schema import UploadMalwareSampleInput, UploadMalwareSampleOutput, Input, Output, Component

# Custom imports below


class UploadMalwareSample(insightconnect_plugin_runtime.Action):
    def __init__(self):
        super(self.__class__, self).__init__(
            name="uploadMalwareSample",
            description=Component.DESCRIPTION,
            input=UploadMalwareSampleInput(),
            output=UploadMalwareSampleOutput(),
        )

    def run(self, params={}):
        # START INPUT BINDING - DO NOT REMOVE - ANY INPUTS BELOW WILL UPDATE WITH YOUR PLUGIN SPEC AFTER REGENERATION
        sample = params.get(Input.SAMPLE, {})
        filename = params.get(Input.FILENAME, "")
        comment = params.get(Input.COMMENT, "")
        is_confidential = params.get(Input.ISCONFIDENTIAL, True)
        # END INPUT BINDING - DO NOT REMOVE

        response = self.connection.api_client.upload_malware_sample(sample, filename, comment, is_confidential).get(
            "resources", []
        )
        result = next(iter(response), {})

        return {
            Output.SHA256: result.get("sha256", ""),
            Output.FILENAME: result.get("file_name", ""),
        }
