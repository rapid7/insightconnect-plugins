# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Submit an uploaded file or a URL for sandbox analysis. Time required for analysis varies but is usually less than 15 minutes"


class Input:
    ACTIONSCRIPT = "actionScript"
    COMMANDLINE = "commandLine"
    DOCUMENTPASSWORD = "documentPassword"
    ENVIRONMENTID = "environmentId"
    NETWORKSETTINGS = "networkSettings"
    SHA256 = "sha256"
    SUBMITNAME = "submitName"
    SYSTEMDATETIME = "systemDateTime"
    URL = "url"


class Output:
    SUBMISSION = "submission"


class SubmitAnalysisInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "actionScript": {
      "type": "string",
      "title": "Action Script",
      "description": "Runtime script for sandbox analysis",
      "enum": [
        "",
        "default",
        "default_maxantievasion",
        "default_randomfiles",
        "default_randomtheme",
        "default_openie"
      ],
      "order": 4
    },
    "commandLine": {
      "type": "string",
      "title": "Command Line",
      "description": "Command line script passed to the submitted file at runtime. Max length is 2048 characters",
      "order": 5
    },
    "documentPassword": {
      "$ref": "#/definitions/password",
      "title": "Document Password",
      "description": "Auto-filled for Adobe or Office files that prompt for a password. Max length is 32 characters",
      "order": 6
    },
    "environmentId": {
      "type": "integer",
      "title": "Environment ID",
      "description": "Specifies the sandbox environment used for analysis. Example values 300 - Linux Ubuntu 16.04, 64-bit; 200 - Android (static analysis); 160 - Windows 10, 64-bit; 110 - Windows 7, 64-bit; 100 - Windows 7, 32-bit",
      "enum": [
        100,
        110,
        160,
        200,
        300
      ],
      "order": 1
    },
    "networkSettings": {
      "type": "string",
      "title": "Network Settings",
      "description": "Specifies the sandbox network_settings used for analysis",
      "enum": [
        "",
        "default",
        "tor",
        "simulated",
        "offline"
      ],
      "order": 7
    },
    "sha256": {
      "type": "string",
      "title": "SHA256",
      "description": "ID of the sample, which is a SHA256 hash value. Find a sample ID from the response when uploading a malware sample or search with `Get Submissions IDs` action. The `url` parameter must be unset if `sha256` is used",
      "order": 2
    },
    "submitName": {
      "type": "string",
      "title": "Submit Name",
      "description": "Name of the malware sample that's used for file type detection and analysis",
      "order": 8
    },
    "systemDateTime": {
      "type": "string",
      "format": "date-time",
      "displayType": "date",
      "title": "System Date Time",
      "description": "System date and time",
      "order": 9
    },
    "url": {
      "type": "string",
      "title": "URL",
      "description": "A web page or file URL. It can be HTTP(S) or FTP. The `SHA256` parameter must be unset if `url` is used",
      "order": 3
    }
  },
  "required": [
    "environmentId"
  ],
  "definitions": {
    "password": {
      "type": "string",
      "format": "password",
      "displayType": "password"
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SubmitAnalysisOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "submission": {
      "$ref": "#/definitions/submission",
      "title": "Submission",
      "description": "Submission",
      "order": 1
    }
  },
  "required": [
    "submission"
  ],
  "definitions": {
    "submission": {
      "type": "object",
      "title": "submission",
      "properties": {
        "id": {
          "type": "string",
          "title": "ID",
          "description": "ID",
          "order": 1
        },
        "cid": {
          "type": "string",
          "title": "Cid",
          "description": "Cid",
          "order": 2
        },
        "userId": {
          "type": "string",
          "title": "User ID",
          "description": "User ID",
          "order": 3
        },
        "userName": {
          "type": "string",
          "title": "User Name",
          "description": "User name",
          "order": 4
        },
        "userUuid": {
          "type": "string",
          "title": "User UUID",
          "description": "User UUID",
          "order": 5
        },
        "origin": {
          "type": "string",
          "title": "Origin",
          "description": "Origin",
          "order": 6
        },
        "state": {
          "type": "string",
          "title": "State",
          "description": "State",
          "order": 7
        },
        "createdTimestamp": {
          "type": "string",
          "title": "Created Timestamp",
          "description": "Created timestamp",
          "order": 8
        },
        "sandbox": {
          "type": "array",
          "title": "Sandbox",
          "description": "Sandbox",
          "items": {
            "$ref": "#/definitions/sandboxShort"
          },
          "order": 9
        },
        "userTags": {
          "type": "array",
          "title": "User Tags",
          "description": "User tags",
          "items": {
            "type": "string"
          },
          "order": 10
        }
      }
    },
    "sandboxShort": {
      "type": "object",
      "title": "sandboxShort",
      "properties": {
        "sha256": {
          "type": "string",
          "title": "SHA256",
          "description": "SHA256",
          "order": 1
        },
        "submitUrl": {
          "type": "string",
          "title": "Submit URL",
          "description": "Submit URL",
          "order": 2
        },
        "url": {
          "type": "string",
          "title": "URL",
          "description": "URL",
          "order": 3
        },
        "actionScript": {
          "type": "string",
          "title": "Action Script",
          "description": "Action script",
          "order": 4
        },
        "systemDate": {
          "type": "string",
          "title": "System Date",
          "description": "System date",
          "order": 5
        },
        "systemTime": {
          "type": "string",
          "title": "System Time",
          "description": "System time",
          "order": 6
        },
        "networkSettings": {
          "type": "string",
          "title": "Network Settings",
          "description": "Network settings",
          "order": 7
        },
        "environmentId": {
          "type": "integer",
          "title": "Environment ID",
          "description": "Environment ID",
          "order": 8
        },
        "environmentDescription": {
          "type": "string",
          "title": "Environment Description",
          "description": "Environment description",
          "order": 9
        },
        "fileType": {
          "type": "string",
          "title": "File Type",
          "description": "File type",
          "order": 10
        },
        "submitName": {
          "type": "string",
          "title": "Submit Name",
          "description": "Submit name",
          "order": 11
        },
        "submissionType": {
          "type": "string",
          "title": "Submission Type",
          "description": "Submission type",
          "order": 12
        },
        "verdict": {
          "type": "string",
          "title": "Verdict",
          "description": "Verdict",
          "order": 13
        },
        "sampleFlags": {
          "type": "array",
          "title": "Sample Flags",
          "description": "Sample flags",
          "items": {
            "type": "string"
          },
          "order": 14
        },
        "errorMessage": {
          "type": "string",
          "title": "Error Message",
          "description": "Error message",
          "order": 15
        },
        "errorType": {
          "type": "string",
          "title": "Error Type",
          "description": "Error type",
          "order": 16
        },
        "errorOrigin": {
          "type": "string",
          "title": "Error Origin",
          "description": "Error origin",
          "order": 17
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
