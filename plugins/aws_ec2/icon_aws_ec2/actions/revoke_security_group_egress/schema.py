# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "[EC2-VPC only] Removes one or more egress rules from a security group for EC2-VPC"


class Input:
    ASSUME_ROLE_PARAMS = "assume_role_params"
    CIDR_IP = "cidr_ip"
    DRY_RUN = "dry_run"
    FROM_PORT = "from_port"
    GROUP_ID = "group_id"
    IP_PERMISSIONS = "ip_permissions"
    IP_PROTOCOL = "ip_protocol"
    SOURCE_SECURITY_GROUP_NAME = "source_security_group_name"
    SOURCE_SECURITY_GROUP_OWNER_ID = "source_security_group_owner_id"
    TO_PORT = "to_port"
    

class Output:
    RESPONSE_METADATA = "response_metadata"
    

class RevokeSecurityGroupEgressInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "assume_role_params": {
      "$ref": "#/definitions/assume_role_params",
      "title": "Assume Role Parameters",
      "description": "Parameters that allows to assume IAM role",
      "order": 10
    },
    "cidr_ip": {
      "type": "string",
      "title": "CIDR IP",
      "description": "Not supported",
      "order": 4
    },
    "dry_run": {
      "type": "boolean",
      "title": "Dry Run",
      "description": "Checks whether you have the required permissions for the action, without actually making the request, and provides an error response",
      "order": 1
    },
    "from_port": {
      "type": "integer",
      "title": "From Port",
      "description": "Not supported",
      "order": 5
    },
    "group_id": {
      "type": "string",
      "title": "Group ID",
      "description": "The ID of the security group",
      "order": 2
    },
    "ip_permissions": {
      "type": "array",
      "title": "IP Permissions",
      "description": "One or more sets of IP permissions",
      "items": {
        "$ref": "#/definitions/ip_permission"
      },
      "order": 3
    },
    "ip_protocol": {
      "type": "string",
      "title": "IP Protocol",
      "description": "Not supported",
      "order": 6
    },
    "source_security_group_name": {
      "type": "string",
      "title": "Source Security Group Name",
      "description": "Not supported",
      "order": 8
    },
    "source_security_group_owner_id": {
      "type": "string",
      "title": "Source Security Group Owner ID",
      "description": "Not supported",
      "order": 9
    },
    "to_port": {
      "type": "integer",
      "title": "To Port",
      "description": "Not supported",
      "order": 7
    }
  },
  "required": [
    "group_id"
  ],
  "definitions": {
    "assume_role_params": {
      "type": "object",
      "title": "assume_role_params",
      "properties": {
        "external_id": {
          "type": "string",
          "title": "External ID",
          "description": "External ID given during role creation",
          "order": 3
        },
        "region": {
          "type": "string",
          "title": "Region",
          "description": "Which section of the AWS cloud is being inspected",
          "order": 1
        },
        "role_arn": {
          "type": "string",
          "title": "Role ARN",
          "description": "AWS IAM role ARN to assume",
          "order": 2
        }
      }
    },
    "ip_permission": {
      "type": "object",
      "title": "ip_permission",
      "properties": {
        "from_port": {
          "type": "integer",
          "title": "From Port",
          "description": "The start of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number",
          "order": 1
        },
        "ip_protocol": {
          "type": "string",
          "title": "IP Protocol",
          "description": "The IP protocol name (tcp, udp, icmp) or number (see Protocol Numbers)",
          "order": 2
        },
        "ip_ranges": {
          "type": "array",
          "title": "IP Ranges",
          "description": "One or more IPv4 ranges",
          "items": {
            "$ref": "#/definitions/ip_range"
          },
          "order": 3
        },
        "ipv6_ranges": {
          "type": "array",
          "title": "IPv6 Ranges",
          "description": "[EC2-VPC only] One or more IPv6 ranges",
          "items": {
            "$ref": "#/definitions/ipv6_range"
          },
          "order": 4
        },
        "prefix_list_ids": {
          "type": "array",
          "title": "Prefix List IDs",
          "description": "(Valid for AuthorizeSecurityGroupEgress, RevokeSecurityGroupEgress and DescribeSecurityGroups only) One or more prefix list IDs for an AWS service",
          "items": {
            "$ref": "#/definitions/prefix_list_id"
          },
          "order": 5
        },
        "to_port": {
          "type": "integer",
          "title": "To Port",
          "description": "The end of port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code",
          "order": 6
        },
        "user_id_group_pairs": {
          "type": "array",
          "title": "User ID Group Pairs",
          "description": "One or more security group and AWS account ID pairs",
          "items": {
            "$ref": "#/definitions/user_id_group_pair"
          },
          "order": 7
        }
      },
      "definitions": {
        "ip_range": {
          "type": "object",
          "title": "ip_range",
          "properties": {
            "cidr_ip": {
              "type": "string",
              "title": "CIDR IP",
              "description": "The IPv4 CIDR range",
              "order": 1
            },
            "description": {
              "type": "string",
              "title": "Description",
              "description": "A description for the security group rule that references this IPv4 address range",
              "order": 2
            }
          }
        },
        "ipv6_range": {
          "type": "object",
          "title": "ipv6_range",
          "properties": {
            "cidr_ipv6": {
              "type": "string",
              "title": "CIDR IPv6",
              "description": "The IPv6 CIDR range",
              "order": 1
            },
            "description": {
              "type": "string",
              "title": "Description",
              "description": "A description for the security group rule that references this IPv6 address range",
              "order": 2
            }
          }
        },
        "prefix_list_id": {
          "type": "object",
          "title": "prefix_list_id",
          "properties": {
            "description": {
              "type": "string",
              "title": "Description",
              "description": "A description for the security group rule that references this prefix list ID",
              "order": 1
            },
            "prefix_list_id": {
              "type": "string",
              "title": "Prefix List ID",
              "description": "The ID of the prefix",
              "order": 2
            }
          }
        },
        "user_id_group_pair": {
          "type": "object",
          "title": "user_id_group_pair",
          "properties": {
            "description": {
              "type": "string",
              "title": "Description",
              "description": "A description for the security group rule that references this user ID group pair",
              "order": 1
            },
            "group_id": {
              "type": "string",
              "title": "Group ID",
              "description": "The ID of the security group",
              "order": 2
            },
            "group_name": {
              "type": "string",
              "title": "Group Name",
              "description": "The name of the security group",
              "order": 3
            },
            "peering_status": {
              "type": "string",
              "title": "Peering Status",
              "description": "The status of a VPC peering connection, if applicable",
              "order": 4
            },
            "user_id": {
              "type": "string",
              "title": "User ID",
              "description": "The ID of an AWS account",
              "order": 5
            },
            "vpc_id": {
              "type": "string",
              "title": "VPC ID",
              "description": "The ID of the VPC for the referenced security group, if applicable",
              "order": 6
            },
            "vpc_peering_connection_id": {
              "type": "string",
              "title": "VPC Peering Connection ID",
              "description": "The ID of the VPC peering connection, if applicable",
              "order": 7
            }
          }
        }
      }
    },
    "ip_range": {
      "type": "object",
      "title": "ip_range",
      "properties": {
        "cidr_ip": {
          "type": "string",
          "title": "CIDR IP",
          "description": "The IPv4 CIDR range",
          "order": 1
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "A description for the security group rule that references this IPv4 address range",
          "order": 2
        }
      }
    },
    "ipv6_range": {
      "type": "object",
      "title": "ipv6_range",
      "properties": {
        "cidr_ipv6": {
          "type": "string",
          "title": "CIDR IPv6",
          "description": "The IPv6 CIDR range",
          "order": 1
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "A description for the security group rule that references this IPv6 address range",
          "order": 2
        }
      }
    },
    "prefix_list_id": {
      "type": "object",
      "title": "prefix_list_id",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description",
          "description": "A description for the security group rule that references this prefix list ID",
          "order": 1
        },
        "prefix_list_id": {
          "type": "string",
          "title": "Prefix List ID",
          "description": "The ID of the prefix",
          "order": 2
        }
      }
    },
    "user_id_group_pair": {
      "type": "object",
      "title": "user_id_group_pair",
      "properties": {
        "description": {
          "type": "string",
          "title": "Description",
          "description": "A description for the security group rule that references this user ID group pair",
          "order": 1
        },
        "group_id": {
          "type": "string",
          "title": "Group ID",
          "description": "The ID of the security group",
          "order": 2
        },
        "group_name": {
          "type": "string",
          "title": "Group Name",
          "description": "The name of the security group",
          "order": 3
        },
        "peering_status": {
          "type": "string",
          "title": "Peering Status",
          "description": "The status of a VPC peering connection, if applicable",
          "order": 4
        },
        "user_id": {
          "type": "string",
          "title": "User ID",
          "description": "The ID of an AWS account",
          "order": 5
        },
        "vpc_id": {
          "type": "string",
          "title": "VPC ID",
          "description": "The ID of the VPC for the referenced security group, if applicable",
          "order": 6
        },
        "vpc_peering_connection_id": {
          "type": "string",
          "title": "VPC Peering Connection ID",
          "description": "The ID of the VPC peering connection, if applicable",
          "order": 7
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class RevokeSecurityGroupEgressOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response_metadata": {
      "$ref": "#/definitions/response_metadata",
      "title": "Response Metadata",
      "description": "Metadata about the response from AWS",
      "order": 1
    }
  },
  "required": [
    "response_metadata"
  ],
  "definitions": {
    "response_metadata": {
      "type": "object",
      "title": "response_metadata",
      "properties": {
        "http_status_code": {
          "type": "integer",
          "title": "HTTP Status Code",
          "description": "HTTP status code for the request",
          "order": 2
        },
        "request_id": {
          "type": "string",
          "title": "Request ID",
          "description": "Unique identifier for the request",
          "order": 1
        }
      },
      "required": [
        "http_status_code",
        "request_id"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
