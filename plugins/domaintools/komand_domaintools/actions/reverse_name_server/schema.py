# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Provides a list of domain names that share the same primary or secondary name server"


class Input:
    DOMAIN = "domain"
    LIMIT = "limit"


class Output:
    RESPONSE = "response"


class ReverseNameServerInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "domain": {
      "type": "string",
      "description": "Domain name you wish to query",
      "order": 1
    },
    "limit": {
      "type": "integer",
      "description": "Limits the size of the domain list than can appear in a response",
      "order": 2
    }
  },
  "required": [
    "domain"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ReverseNameServerOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "$ref": "#/definitions/reverse_name_server_response",
      "description": "Response",
      "order": 1
    }
  },
  "definitions": {
    "reverse_name_server_response": {
      "type": "object",
      "title": "reverse_name_server_response",
      "properties": {
        "name_server": {
          "$ref": "#/definitions/name_server",
          "order": 1
        },
        "primary_domains": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "order": 2
        },
        "secondary_domains": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "order": 3
        }
      }
    },
    "name_server": {
      "type": "object",
      "title": "name_server",
      "properties": {
        "hostname": {
          "type": "string",
          "order": 1
        },
        "primary": {
          "type": "integer",
          "order": 2
        },
        "secondary": {
          "type": "integer",
          "order": 3
        },
        "total": {
          "type": "integer",
          "order": 4
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
