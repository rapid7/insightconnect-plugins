# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Provides parsed information extracted from the raw WHOIS record"


class Input:
    DOMAIN = "domain"


class Output:
    RESPONSE = "response"


class ParsedWhoisInput(insightconnect_plugin_runtime.Input):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "domain": {
      "type": "string",
      "description": "Domain name you wish to query",
      "order": 1
    }
  },
  "required": [
    "domain"
  ],
  "definitions": {}
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class ParsedWhoisOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads(r"""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "response": {
      "$ref": "#/definitions/parsed_whois_response",
      "description": "Response",
      "order": 1
    }
  },
  "definitions": {
    "parsed_whois_response": {
      "type": "object",
      "title": "parsed_whois_response",
      "properties": {
        "name_servers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "order": 1
        },
        "parsed_whois": {
          "$ref": "#/definitions/parsed_whois",
          "order": 2
        },
        "record_source": {
          "type": "string",
          "order": 3
        },
        "registrant": {
          "type": "string",
          "order": 4
        },
        "registration": {
          "$ref": "#/definitions/registration",
          "order": 5
        },
        "whois": {
          "$ref": "#/definitions/whois",
          "order": 6
        }
      }
    },
    "parsed_whois": {
      "type": "object",
      "title": "parsed_whois",
      "properties": {
        "contacts": {
          "$ref": "#/definitions/contacts",
          "order": 1
        },
        "created_date": {
          "type": "string",
          "order": 2
        },
        "domain": {
          "type": "string",
          "order": 3
        },
        "expired_date": {
          "type": "string",
          "order": 4
        },
        "name_servers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "order": 5
        },
        "other_properties": {
          "$ref": "#/definitions/other_properties",
          "order": 6
        },
        "registrar": {
          "$ref": "#/definitions/registrar",
          "order": 7
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "order": 8
        },
        "updated_date": {
          "type": "string",
          "order": 9
        }
      }
    },
    "contacts": {
      "type": "object",
      "title": "contacts",
      "properties": {
        "admin": {
          "$ref": "#/definitions/admin",
          "order": 1
        },
        "billing": {
          "$ref": "#/definitions/admin",
          "order": 2
        },
        "registrant": {
          "$ref": "#/definitions/admin",
          "order": 3
        },
        "tech": {
          "$ref": "#/definitions/admin",
          "order": 4
        }
      }
    },
    "admin": {
      "type": "object",
      "title": "admin",
      "properties": {
        "city": {
          "type": "string",
          "order": 1
        },
        "country": {
          "type": "string",
          "order": 2
        },
        "email": {
          "type": "string",
          "order": 3
        },
        "fax": {
          "type": "string",
          "order": 4
        },
        "name": {
          "type": "string",
          "order": 5
        },
        "org": {
          "type": "string",
          "order": 6
        },
        "phone": {
          "type": "string",
          "order": 7
        },
        "postal": {
          "type": "string",
          "order": 8
        },
        "state": {
          "type": "string",
          "order": 9
        },
        "street": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "order": 10
        }
      }
    },
    "other_properties": {
      "type": "object",
      "title": "other_properties",
      "properties": {
        "dnssec": {
          "type": "string",
          "order": 1
        },
        "registry_id": {
          "type": "string",
          "order": 2
        }
      }
    },
    "registrar": {
      "type": "object",
      "title": "registrar",
      "properties": {
        "abuse_contact_email": {
          "type": "string",
          "order": 1
        },
        "abuse_contact_phone": {
          "type": "string",
          "order": 2
        },
        "iana_id": {
          "type": "string",
          "order": 3
        },
        "name": {
          "type": "string",
          "order": 4
        },
        "url": {
          "type": "string",
          "order": 5
        },
        "whois_server": {
          "type": "string",
          "order": 6
        }
      }
    },
    "registration": {
      "type": "object",
      "title": "registration",
      "properties": {
        "created": {
          "type": "string",
          "order": 1
        },
        "expires": {
          "type": "string",
          "order": 2
        },
        "registrar": {
          "type": "string",
          "order": 3
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "order": 4
        },
        "updated": {
          "type": "string",
          "order": 5
        }
      }
    },
    "whois": {
      "type": "object",
      "title": "whois",
      "properties": {
        "earliest_event": {
          "type": "string",
          "order": 1
        },
        "product_url": {
          "type": "string",
          "order": 2
        },
        "records": {
          "type": "integer",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
