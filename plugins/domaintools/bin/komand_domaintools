#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "DomainTools"
Vendor = "rapid7"
Version = "2.0.3"
Description = "DomainTools (https://www.domaintools.com) data and products work in harmony to enable security teams to start getting ahead of attacks, gain context and visibility into potential threats, and lower the skills barrier. The DomainTools plugin for InsightConnect allows for the automation of domain lookups and retrieval of threat information related to the domain. This plugin utilizes the [DomainTools Python API](https://github.com/domaintools/python_api)"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_domaintools import connection, actions, triggers, tasks

    class ICONDomaintools(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.BrandMonitor())
        
            self.add_action(actions.IpMonitor())
        
            self.add_action(actions.NameServerMonitor())
        
            self.add_action(actions.DomainSearch())
        
            self.add_action(actions.DomainProfile())
        
            self.add_action(actions.HostingHistory())
        
            self.add_action(actions.Reputation())
        
            self.add_action(actions.ParsedWhois())
        
            self.add_action(actions.RegistrantMonitor())
        
            self.add_action(actions.ReverseIp())
        
            self.add_action(actions.ReverseIpWhois())
        
            self.add_action(actions.ReverseWhois())
        
            self.add_action(actions.Whois())
        
            self.add_action(actions.WhoisHistory())
        
            self.add_action(actions.ReverseNameServer())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONDomaintools())
    cli.run()


if __name__ == "__main__":
    main()
