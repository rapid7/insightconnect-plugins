#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "Palo Alto Firewall"
Vendor = "rapid7"
Version = "6.1.6"
Description = "[PAN-OS](https://www.paloaltonetworks.com/documentation/80/pan-os) is the software that runs all Palo Alto Networks next-generation firewalls. This plugin utilizes the [PAN-OS API](https://www.paloaltonetworks.com/documentation/80/pan-os/xml-api) to provide programmatic management of the Palo Alto Firewall appliance(s). It supports managing firewalls individually or centralized via [Panorama](https://www.paloaltonetworks.com/network-security/panorama)"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_palo_alto_pan_os import connection, actions, triggers, tasks

    class ICONPaloAltoPanOs(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.SetSecurityPolicyRule())
        
            self.add_action(actions.Show())
        
            self.add_action(actions.Get())
        
            self.add_action(actions.Delete())
        
            self.add_action(actions.Set())
        
            self.add_action(actions.Edit())
        
            self.add_action(actions.Commit())
        
            self.add_action(actions.Op())
        
            self.add_action(actions.RetrieveLogs())
        
            self.add_action(actions.AddToPolicy())
        
            self.add_action(actions.RemoveFromPolicy())
        
            self.add_action(actions.AddExternalDynamicList())
        
            self.add_action(actions.SetAddressObject())
        
            self.add_action(actions.GetPolicy())
        
            self.add_action(actions.CheckIfAddressObjectInGroup())
        
            self.add_action(actions.RemoveAddressObjectFromGroup())
        
            self.add_action(actions.AddAddressObjectToGroup())
        
            self.add_action(actions.GetAddressesFromGroup())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONPaloAltoPanOs())
    cli.run()


if __name__ == "__main__":
    main()
