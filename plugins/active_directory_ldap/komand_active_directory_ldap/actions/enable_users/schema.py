# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Enable multiple accounts"


class Input:
    DISTINGUISHED_NAMES = "distinguished_names"
    

class Output:
    ALL_OPERATIONS_SUCCEEDED = "all_operations_succeeded"
    SUCCESSFUL_ENABLEMENTS = "successful_enablements"
    UNSUCCESSFUL_ENABLEMENTS = "unsuccessful_enablements"
    

class EnableUsersInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "distinguished_names": {
      "type": "array",
      "title": "Distinguished Name",
      "description": "The distinguished names of the users to enable",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "required": [
    "distinguished_names"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class EnableUsersOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "all_operations_succeeded": {
      "type": "boolean",
      "title": "All Operations Succeeded",
      "description": "Overall operation status",
      "order": 3
    },
    "successful_enablements": {
      "type": "array",
      "title": "Successful Enablements",
      "description": "List of successfully enabled users",
      "items": {
        "type": "string"
      },
      "order": 1
    },
    "unsuccessful_enablements": {
      "type": "array",
      "title": "Unsuccessful Enablements",
      "description": "List of unsuccessfully enabled users",
      "items": {
        "$ref": "#/definitions/modified_user_error"
      },
      "order": 2
    }
  },
  "definitions": {
    "modified_user_error": {
      "type": "object",
      "title": "modified_user_error",
      "properties": {
        "dn": {
          "type": "string",
          "title": "DN",
          "description": "DN",
          "order": 1
        },
        "error": {
          "type": "string",
          "title": "Error",
          "description": "Error",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
