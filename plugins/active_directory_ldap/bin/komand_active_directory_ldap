#!/usr/bin/env python
# GENERATED BY INSIGHT-PLUGIN - DO NOT EDIT
import os
import json
from sys import argv

Name = "Active Directory LDAP"
Vendor = "rapid7"
Version = "9.0.4"
Description = "[AD LDAP](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-adts/3c5916a9-f1a0-429d-b937-f8fe672d777c) (Active Directory Lightweight Directory Access Protocol) is an application protocol for querying and modifying items in Active Directory. This plugin queries [Microsoft's Active Directory service](https://social.technet.microsoft.com/wiki/contents/articles/5392.active-directory-ldap-syntax-filters.aspx) to programmatically manage and query an Active Directory environment"


def main():
    if 'http' in argv:
        if os.environ.get("GUNICORN_CONFIG_FILE"):
            with open(os.environ.get("GUNICORN_CONFIG_FILE")) as gf:
                gunicorn_cfg = json.load(gf)
                if gunicorn_cfg.get("worker_class", "sync") == "gevent":
                    from gevent import monkey
                    monkey.patch_all()
        elif 'gevent' in argv:
            from gevent import monkey
            monkey.patch_all()

    import insightconnect_plugin_runtime
    from komand_active_directory_ldap import connection, actions, triggers, tasks

    class ICONActiveDirectoryLdap(insightconnect_plugin_runtime.Plugin):
        def __init__(self):
            super(self.__class__, self).__init__(
                name=Name,
                vendor=Vendor,
                version=Version,
                description=Description,
                connection=connection.Connection()
            )
            self.add_action(actions.Query())
        
            self.add_action(actions.Delete())
        
            self.add_action(actions.AddUser())
        
            self.add_action(actions.EnableUser())
        
            self.add_action(actions.EnableUsers())
        
            self.add_action(actions.DisableUser())
        
            self.add_action(actions.DisableUsers())
        
            self.add_action(actions.ModifyGroups())
        
            self.add_action(actions.MoveObject())
        
            self.add_action(actions.ResetPassword())
        
            self.add_action(actions.ModifyObject())
        
            self.add_action(actions.ForcePasswordReset())
        
            self.add_action(actions.QueryGroupMembership())
        
            self.add_action(actions.UnlockUser())
        

    """Run plugin"""
    cli = insightconnect_plugin_runtime.CLI(ICONActiveDirectoryLdap())
    cli.run()


if __name__ == "__main__":
    main()
