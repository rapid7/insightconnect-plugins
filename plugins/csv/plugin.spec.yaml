plugin_spec_version: v2
extension: plugin
products: [insightconnect]
name: csv
title: CSV
description: CSV (Comma Separated Values) is a simple data format for storing data. This plugin allows one to extract fields from CSV strings and files
version: 2.0.2
connection_version: 2
supported_versions: ["2024-09-06"]
vendor: rapid7
support: community
status: []
cloud_ready: true
fedramp_ready: true
resources:
  source_url: https://github.com/rapid7/insightconnect-plugins/tree/master/plugins/csv
  license_url: https://github.com/rapid7/insightconnect-plugins/blob/master/LICENSE
tags:
  - csv
  - utilities
hub_tags:
  use_cases: [data_utility]
  keywords: [csv, cloud_enabled]
  features: []
sdk:
  type: slim
  version: 6.1.0
  user: nobody
key_features:
  - "Convert between JSON and CSV"
  - "Filter strings"
version_history:
  - "2.0.2 - Initial updates for fedramp compliance | Updated SDK to the latest version"
  - "2.0.1 - Fix bug with extra space character in JSON keys in `To JSON` action | Fix bugs with parsing cells with quotes and comma in `To JSON`, `Filter Bytes` and `Filter String` actions | Add unit tests for `To JSON`, `Filter Bytes` and `Filter String` actions"
  - "2.0.0 - Add JSON to CSV String action | Rename JSON to CSV action to JSON to CSV Bytes"
  - "1.1.6 - Update to v4 Python plugin runtime"
  - "1.1.5 - Use input and output constants | Change docker image from `komand/python-2-plugin:2` to `komand/python-3-37-slim-plugin:3` to reduce plugin image size | Changed `Exception` to `PluginException`"
  - "1.1.4 - New spec and help.md format for the Extension Library | Add missing title values for actions in plugin.spec.yaml"
  - "1.1.3 - Fix issue where connection tests were failing, output did not match spec"
  - "1.1.2 - Support webserver mode"
  - "1.1.1 - Fix JSON to CSV action to account for correct input type"
  - "1.1.0 - Add JSON to CSV action"
  - "1.0.0 - Add CSV to JSON action | Support web server mode"
  - "0.1.2 - Update to v2 Python plugin architecture"
  - "0.1.1 - SSL bug fix in SDK"
  - "0.1.0 - Initial plugin"
troubleshooting: "Ensure that the supplied file or string is valid CSV. Any CSV files containing double-quotes will need to have them triple escaped to work properly.\n\nCSV files must not have non-CSV data such as comments."
links:
  - "[CSV](https://en.wikipedia.org/wiki/Comma-separated_values)"
references:
  - "[CSV](https://en.wikipedia.org/wiki/Comma-separated_values)"
actions:
  filter_string:
    title: Filter String
    description: Keep fields from CSV string
    input:
      csv:
        type: string
        description: CSV string
        required: true
        example: column1, column2, column3\nvalue1, value2, value3
      fields:
        type: string
        description: Fields to filter
        required: true
        example: f1, f2-f3
    output:
      string:
        type: string
        description: Filtered CSV string
        required: true
        example: column1,column2,column3\nvalue1
  filter_bytes:
    title: Filter Bytes
    description: Keep fields from base64 CSV file
    input:
      csv:
        type: bytes
        description: Base64 encoded CSV file
        required: true
        example: ZmllbGQxLCBmaWVsZDIKdmFsdWUxLCB2YWx1ZTIK
      fields:
        type: string
        description: Fields to filter
        required: true
        example: f1, f2
    output:
      filtered:
        type: bytes
        description: Filtered CSV file
        required: true
        example: ZmllbGQxLGZpZWxkMgp2YWx1ZTEsdmFsdWUy
  to_json:
    title: To JSON
    description: Convert CSV to JSON
    input:
      csv:
        title: CSV
        type: bytes
        description: Base64 encoded CSV file
        required: true
        example: ZmllbGQxLCBmaWVsZDIKdmFsdWUxLCB2YWx1ZTIK
      validation:
        title: Validate
        type: boolean
        description: Validate CSV data, error if not valid
        default: false
        required: true
        example: true
    output:
      json:
        title: JSON
        type: '[]object'
        description: List of objects
        required: true
        example: '[{"field1":"value1","field2":"value2"}]'
  json_to_csv_bytes:
    title: JSON to CSV Bytes
    description: Convert a JSON array to CSV bytes
    input:
      json:
        title: JSON
        type: '[]object'
        description: JSON array to convert to CSV bytes
        required: true
        example: "[{\"column1\": \"value1\",\"column2\": \"value2\",\"column3\": \"value3\"},{\"column1\": \"value4\",\"column2\": \"value5\",\"column3\": \"value6\"}]"
    output:
      csv_bytes:
        title: CSV Bytes
        type: bytes
        required: true
        description: Resulting CSV file from the conversion
        example: Y29sdW1uMSxjb2x1bW4yLGNvbHVtbjMNCnZhbHVlMSx2YWx1ZTIsdmFsdWUzDQp2YWx1ZTQsdmFs\ndWU1LHZhbHVlNg0K\n
  json_to_csv_string:
    title: JSON to CSV String
    description: Convert a JSON array to CSV string
    input:
      json:
        title: JSON
        type: '[]object'
        description: JSON array to convert to CSV string
        required: true
        example: "[{\"column1\": \"value1\",\"column2\": \"value2\",\"column3\": \"value3\"},{\"column1\": \"value4\",\"column2\": \"value5\",\"column3\": \"value6\"}]"
    output:
      csv_string:
        title: CSV String
        type: string
        required: true
        description: Resulting CSV string from the conversion
        example: Y29sdW1uMSxjb2x1bW4yLGNvbHVtbjMNCnZhbHVlMSx2YWx1ZTIsdmFsdWUzDQp2YWx1ZTQsdmFs
