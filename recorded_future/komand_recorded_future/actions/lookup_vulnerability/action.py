import komand
from .schema import LookupVulnerabilityInput, LookupVulnerabilityOutput, Input
from komand.exceptions import PluginException


class LookupVulnerability(komand.Action):
    def __init__(self):
        super(self.__class__, self).__init__(
            name="lookup_vulnerability",
            description="This action is used to fetch information about a specific vulnerability by CVE or RF ID",
            input=LookupVulnerabilityInput(),
            output=LookupVulnerabilityOutput(),
        )

    def run(self, params={}):
        try:
            vulnerability_id = params.get(Input.ID)
            if vulnerability_id.lower().startswith("cve-"):
                vulnerability_id = vulnerability_id.upper()
            vulnerability_report = self.connection.client.lookup_vulnerability(
                vulnerability_id,
                fields=[
                    "analystNotes",
                    "commonNames",
                    "cpe",
                    "cvss",
                    "cvssv3",
                    "entity",
                    "intelCard",
                    "metrics",
                    "nvdDescription",
                    "nvdDescription",
                    "rawrisk",
                    "relatedEntities",
                    "relatedLinks",
                    "risk",
                    "timestamps",
                ],
            )
            return vulnerability_report
        except Exception as e:
            self.logger.error("Error: " + str(e))
            raise PluginException(preset=PluginException.Preset.UNKNOWN, data=e)
