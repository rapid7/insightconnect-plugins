# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Find pattern in string"


class Input:
    BEHAVIOR = "behavior"
    PATTERN = "pattern"
    TEXT = "text"
    

class Output:
    FOUND = "found"
    HITS = "hits"
    MATCHES = "matches"
    

class MatchStringInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "behavior": {
      "type": "string",
      "title": "Behavior",
      "description": "Return entire matched lines or only matched pattern",
      "default": "Default",
      "enum": [
        "Default",
        "Only matching"
      ],
      "order": 3
    },
    "pattern": {
      "type": "string",
      "title": "Pattern",
      "description": "Pattern to match",
      "order": 1
    },
    "text": {
      "type": "string",
      "title": "Text",
      "description": "String to match",
      "order": 2
    }
  },
  "required": [
    "pattern",
    "text"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MatchStringOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "found": {
      "type": "boolean",
      "title": "Found",
      "description": "Found match boolean",
      "order": 1
    },
    "hits": {
      "type": "integer",
      "title": "Hits",
      "description": "Number of matches",
      "order": 2
    },
    "matches": {
      "type": "array",
      "title": "Matches",
      "description": "Matched lines",
      "items": {
        "type": "string"
      },
      "order": 3
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
