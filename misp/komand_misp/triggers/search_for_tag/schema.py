# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "This trigger will search MISP for any events with a specified tag"


class Input:
    
    INTERVAL = "interval"
    REMOVE = "remove"
    TAG = "tag"
    

class Output:
    
    EVENTS = "events"
    

class SearchForTagInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "interval": {
      "type": "integer",
      "title": "Interval",
      "description": "How frequently (in seconds) to trigger a search",
      "default": 60,
      "order": 1
    },
    "remove": {
      "type": "boolean",
      "title": "Remove",
      "description": "If true the tag will be removed",
      "order": 3
    },
    "tag": {
      "type": "string",
      "title": "Tag",
      "description": "The tag to search for",
      "order": 2
    }
  },
  "required": [
    "interval",
    "remove",
    "tag"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchForTagOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "events": {
      "type": "array",
      "title": "Events",
      "description": "A list of event_ids with the tag",
      "items": {
        "type": "string"
      },
      "order": 1
    }
  },
  "required": [
    "events"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
