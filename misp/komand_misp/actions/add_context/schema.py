# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Add context"


class Input:
    COMMENT = "comment"
    LINK = "link"
    OTHER = "other"
    PROPOSAL = "proposal"
    TEXT = "text"
    

class Output:
    STATUS = "status"
    

class AddContextInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "comment": {
      "$ref": "#/definitions/comment_input",
      "title": "Comment",
      "description": "Comment",
      "order": 1
    },
    "link": {
      "$ref": "#/definitions/link_input",
      "title": "Link",
      "description": "Link",
      "order": 2
    },
    "other": {
      "$ref": "#/definitions/other_input",
      "title": "Other",
      "description": "Other",
      "order": 3
    },
    "proposal": {
      "type": "boolean",
      "title": "Proposal",
      "description": "Mark request as a proposal (Default: false)",
      "default": false,
      "order": 5
    },
    "text": {
      "$ref": "#/definitions/text_input",
      "title": "Text",
      "description": "Text",
      "order": 4
    }
  },
  "required": [
    "comment",
    "link",
    "other",
    "proposal",
    "text"
  ],
  "definitions": {
    "comment_input": {
      "type": "object",
      "title": "comment_input",
      "properties": {
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "Attribute comment",
          "order": 3
        },
        "comment_in": {
          "type": "string",
          "title": "Comment",
          "description": "Comment for context",
          "order": 2
        },
        "distribution": {
          "type": "string",
          "title": "Distribution",
          "description": "Distribution type",
          "enum": [
            "This Community",
            "This Organization",
            "Connected Communities",
            "All Communities"
          ],
          "order": 4
        },
        "event": {
          "type": "string",
          "title": "Event ID",
          "description": "Event ID to append to",
          "order": 1
        }
      }
    },
    "link_input": {
      "type": "object",
      "title": "link_input",
      "properties": {
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "Attribute comment",
          "order": 3
        },
        "distribution": {
          "type": "string",
          "title": "Distribution",
          "description": "Distribution type",
          "enum": [
            "This Community",
            "This Organization",
            "Connected Communities",
            "All Communities"
          ],
          "order": 4
        },
        "event": {
          "type": "string",
          "title": "Event ID",
          "description": "Event ID to append to",
          "order": 1
        },
        "link": {
          "type": "string",
          "title": "Link",
          "description": "Link",
          "order": 2
        }
      }
    },
    "other_input": {
      "type": "object",
      "title": "other_input",
      "properties": {
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "Attribute comment",
          "order": 3
        },
        "distribution": {
          "type": "string",
          "title": "Distribution",
          "description": "Distribution type",
          "enum": [
            "This Community",
            "This Organization",
            "Connected Communities",
            "All Communities"
          ],
          "order": 4
        },
        "event": {
          "type": "string",
          "title": "Event ID",
          "description": "Event ID to append to",
          "order": 1
        },
        "other": {
          "type": "string",
          "title": "Other",
          "description": "Other",
          "order": 2
        }
      }
    },
    "text_input": {
      "type": "object",
      "title": "text_input",
      "properties": {
        "comment": {
          "type": "string",
          "title": "Comment",
          "description": "Attribute comment",
          "order": 3
        },
        "distribution": {
          "type": "string",
          "title": "Distribution",
          "description": "Distribution type",
          "enum": [
            "This Community",
            "This Organization",
            "Connected Communities",
            "All Communities"
          ],
          "order": 4
        },
        "event": {
          "type": "string",
          "title": "Event ID",
          "description": "Event ID to append to",
          "order": 1
        },
        "text": {
          "type": "string",
          "title": "Text",
          "description": "Text",
          "order": 2
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class AddContextOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "status": {
      "type": "boolean",
      "title": "Status",
      "description": "Context add status",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
