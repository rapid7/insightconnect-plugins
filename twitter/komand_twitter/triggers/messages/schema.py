# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Monitor received messages"


class Input:
    
    INTERVAL = "interval"
    PATTERN = "pattern"
    

class Output:
    
    CREATED_AT = "created_at"
    ID = "id"
    MSG = "msg"
    RECIPIENT_ID = "recipient_id"
    SENDER_CREATED_AT = "sender_created_at"
    SENDER_DEFAULT_PROFILE = "sender_default_profile"
    SENDER_DEFAULT_PROFILE_IMAGE = "sender_default_profile_image"
    SENDER_DESCRIPTION = "sender_description"
    SENDER_FOLLOWERS_COUNT = "sender_followers_count"
    SENDER_FRIENDS_COUNT = "sender_friends_count"
    SENDER_ID = "sender_id"
    SENDER_LANG = "sender_lang"
    SENDER_LOCATION = "sender_location"
    SENDER_NAME = "sender_name"
    USER = "user"
    

class MessagesInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "interval": {
      "type": "integer",
      "title": "Interval",
      "description": "Poll interval in seconds",
      "default": 300,
      "order": 1
    },
    "pattern": {
      "type": "string",
      "title": "Pattern",
      "description": "Pattern to Match",
      "order": 2
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MessagesOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "created_at": {
      "type": "string",
      "title": "Creation Date",
      "description": "Creation date",
      "order": 4
    },
    "id": {
      "type": "string",
      "title": "Message ID",
      "description": "Twitter message ID",
      "order": 3
    },
    "msg": {
      "type": "string",
      "title": "Message",
      "description": "Twitter Message",
      "order": 1
    },
    "recipient_id": {
      "type": "integer",
      "title": "Recipient ID",
      "description": "Recipient ID",
      "order": 5
    },
    "sender_created_at": {
      "type": "string",
      "title": "Sender Creation",
      "description": "Sender account creation date",
      "order": 7
    },
    "sender_default_profile": {
      "type": "boolean",
      "title": "Sender Default Profile",
      "description": "Sender uses the default profile",
      "order": 8
    },
    "sender_default_profile_image": {
      "type": "boolean",
      "title": "Sender Default Profile Image",
      "description": "Sender uses the default profile image",
      "order": 9
    },
    "sender_description": {
      "type": "string",
      "title": "Sender Description",
      "description": "Sender profile description",
      "order": 10
    },
    "sender_followers_count": {
      "type": "integer",
      "title": "Sender Followers Count",
      "description": "Sender's follower count",
      "order": 11
    },
    "sender_friends_count": {
      "type": "integer",
      "title": "Sender Friends Count",
      "description": "Sender's friend count",
      "order": 12
    },
    "sender_id": {
      "type": "integer",
      "title": "Sender ID",
      "description": "Sender ID",
      "order": 6
    },
    "sender_lang": {
      "type": "string",
      "title": "Sender Language",
      "description": "Sender's language",
      "order": 13
    },
    "sender_location": {
      "type": "string",
      "title": "Sender Location",
      "description": "Sender's geographic location",
      "order": 14
    },
    "sender_name": {
      "type": "string",
      "title": "Sender Name",
      "description": "Sender's profile name",
      "order": 15
    },
    "user": {
      "type": "string",
      "title": "Posting User",
      "description": "Posting user",
      "order": 2
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
