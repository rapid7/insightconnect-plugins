# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Download a malware instance as a raw file"


class Input:
    COMPRESSOR = "compressor"
    MALWARE_SHA256 = "malware_sha256"
    PASSWORD = "password"
    PROJECT_NAME = "project_name"
    

class Output:
    RAW = "raw"
    

class DownloadMalwareFileInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "compressor": {
      "type": "string",
      "title": "Compressor Class",
      "description": "Compressor class",
      "order": 3
    },
    "malware_sha256": {
      "type": "string",
      "title": "Malware SHA256",
      "description": "Malware SHA256",
      "order": 2
    },
    "password": {
      "type": "string",
      "title": "Password",
      "displayType": "password",
      "description": "Password",
      "format": "password",
      "order": 4
    },
    "project_name": {
      "type": "string",
      "title": "Project Name",
      "description": "Project name",
      "order": 1
    }
  },
  "required": [
    "malware_sha256",
    "project_name"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class DownloadMalwareFileOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "raw": {
      "$ref": "#/definitions/file",
      "title": "Raw File",
      "description": "Raw file",
      "order": 1
    }
  },
  "required": [
    "raw"
  ],
  "definitions": {
    "file": {
      "id": "file",
      "type": "object",
      "title": "File",
      "description": "File Object",
      "properties": {
        "content": {
          "type": "string",
          "title": "Content",
          "description": "File contents",
          "format": "bytes"
        },
        "filename": {
          "type": "string",
          "title": "Filename",
          "description": "Name of file"
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
