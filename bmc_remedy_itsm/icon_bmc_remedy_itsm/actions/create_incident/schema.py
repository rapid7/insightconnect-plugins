# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Create Incident"


class Input:
    FIRST_NAME = "first_name"
    IMPACT = "impact"
    INCIDENT_DESCRIPTION = "incident_description"
    LAST_NAME = "last_name"
    LOGIN_ID = "login_id"
    OTHER_INPUTS = "other_inputs"
    REPORTED_SOURCE = "reported_source"
    SERVICE_TYPE = "service_type"
    STATUS = "status"
    URGENCY = "urgency"
    

class Output:
    SUCCESS = "success"
    

class CreateIncidentInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "first_name": {
      "type": "string",
      "title": "First Name",
      "description": "First name of customer",
      "order": 1
    },
    "impact": {
      "type": "string",
      "title": "Impact",
      "description": "Impact level of the incident",
      "order": 4
    },
    "incident_description": {
      "type": "string",
      "title": "Description",
      "description": "A description of the incident",
      "order": 3
    },
    "last_name": {
      "type": "string",
      "title": "Last Name",
      "description": "Last name of customer",
      "order": 2
    },
    "login_id": {
      "type": "string",
      "title": "Login ID",
      "description": "Incident creator login ID",
      "order": 9
    },
    "other_inputs": {
      "type": "object",
      "title": "Other Inputs",
      "description": "Arbitrary JSON-formatted values for optional inputs, e.g. {\\"Manufacturer\\":\\"Dell\\", \\"Vendor Assignee Groups\\":\\"example\\"}",
      "order": 10
    },
    "reported_source": {
      "type": "string",
      "title": "Reported Source",
      "description": "How the incident was reported",
      "order": 7
    },
    "service_type": {
      "type": "string",
      "title": "Service Type",
      "description": "The type of service requested in the incident",
      "order": 8
    },
    "status": {
      "type": "string",
      "title": "Status",
      "description": "Incident status",
      "order": 6
    },
    "urgency": {
      "type": "string",
      "title": "Urgency",
      "description": "Incident urgency",
      "order": 5
    }
  },
  "required": [
    "impact",
    "incident_description",
    "login_id",
    "reported_source",
    "service_type",
    "status",
    "urgency"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateIncidentOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Will return true if successful",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
