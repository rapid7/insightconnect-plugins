# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Add or remove items from the Watched Domains list. If an indicator is added, DarkTrace will monitor network traffic for that URL and create alerts from it"


class Input:
    DESCRIPTION = "description"
    ENTRY = "entry"
    EXPIRATION_TIME = "expiration_time"
    HOSTNAME = "hostname"
    SOURCE = "source"
    WATCHED_DOMAIN_STATUS = "watched_domain_status"
    

class Output:
    ADDED = "added"
    SUCCESS = "success"
    UPDATED = "updated"
    

class UpdateWatchedDomainsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "description": {
      "type": "string",
      "title": "Description",
      "description": "Description of the indicator",
      "default": "Watched Domains managed by InsightConnect",
      "order": 3
    },
    "entry": {
      "type": "string",
      "title": "Entry",
      "description": "An external domain, hostname or IP address",
      "order": 1
    },
    "expiration_time": {
      "type": "string",
      "title": "Expiration Time",
      "description": "Expiration time of an indicator",
      "order": 5
    },
    "hostname": {
      "type": "boolean",
      "title": "Hostname",
      "description": "Set to true to treat the added items as hostnames rather than domains",
      "order": 6
    },
    "source": {
      "type": "string",
      "title": "Source",
      "description": "Source of an indicator",
      "default": "InsightConnect",
      "order": 4
    },
    "watched_domain_status": {
      "type": "boolean",
      "title": "Watched Domain Status",
      "description": "Determine whether item should be added or remove from the list. Set True to add, set false to remove",
      "order": 2
    }
  },
  "required": [
    "entry",
    "watched_domain_status"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class UpdateWatchedDomainsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "added": {
      "type": "integer",
      "title": "Added",
      "description": "Added",
      "order": 2
    },
    "success": {
      "type": "boolean",
      "title": "Success",
      "description": "Success",
      "order": 1
    },
    "updated": {
      "type": "integer",
      "title": "Updated",
      "description": "Updated",
      "order": 3
    }
  },
  "required": [
    "success"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
