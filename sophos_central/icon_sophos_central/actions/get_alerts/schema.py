# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Get alerts for a customer based on the parameters provided"


class Input:
    FROM_DATE = "from_date"
    

class Output:
    ALERTS = "alerts"
    

class GetAlertsInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "from_date": {
      "type": "string",
      "title": "From Date",
      "description": "The starting date from which alerts will be retrieved defined as Unix timestamp in UTC. Must be within last 24 hours",
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetAlertsOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alerts": {
      "type": "array",
      "title": "Alerts",
      "description": "Alerts for specified time period",
      "items": {
        "$ref": "#/definitions/alert_entity"
      },
      "order": 1
    }
  },
  "required": [
    "alerts"
  ],
  "definitions": {
    "alert_entity": {
      "type": "object",
      "title": "alert_entity",
      "properties": {
        "created_at": {
          "type": "string",
          "title": "Created At",
          "description": "The date at which the alert was created",
          "order": 1
        },
        "customer_id": {
          "type": "string",
          "title": "Customer Id",
          "description": "The unique identifier of the customer linked with this record",
          "order": 2
        },
        "data": {
          "type": "object",
          "title": "Data",
          "order": 3
        },
        "description": {
          "type": "string",
          "title": "Description",
          "description": "The description of the alert that was generated",
          "order": 4
        },
        "event_service_event_id": {
          "type": "string",
          "title": "Event Service Event Id",
          "description": "The Event Services event id",
          "order": 5
        },
        "id": {
          "type": "string",
          "title": "Id",
          "description": "Identifier for the alert",
          "order": 6
        },
        "location": {
          "type": "string",
          "title": "Location",
          "description": "The location captured for this record",
          "order": 7
        },
        "severity": {
          "type": "string",
          "title": "Severity",
          "description": "The severity for this alert",
          "enum": [
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "order": 8
        },
        "source": {
          "type": "string",
          "title": "Source",
          "description": "Describes the source from alert was generated",
          "order": 9
        },
        "threat": {
          "type": "string",
          "title": "Threat",
          "description": "The name of the threat responsible for the generation of alert",
          "order": 10
        },
        "threat_cleanable": {
          "type": "boolean",
          "title": "Threat Cleanable",
          "order": 11
        },
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Describes the type of the device on which alert was generated",
          "order": 12
        },
        "when": {
          "type": "string",
          "title": "When",
          "description": "The date at which the alert was created",
          "order": 13
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
