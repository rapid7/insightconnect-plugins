# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Query the WiGLE network database for paginated results based on multiple criteria"


class Input:
    ENCRYPTION = "encryption"
    ENDTRANSID = "endTransID"
    FREENET = "freenet"
    LASTUPDT = "lastupdt"
    LATRANGE1 = "latrange1"
    LATRANGE2 = "latrange2"
    LONGRANGE1 = "longrange1"
    LONGRANGE2 = "longrange2"
    MINQOS = "minQoS"
    NETID = "netid"
    NOTMINE = "notmine"
    ONLYMINE = "onlymine"
    PAYNET = "paynet"
    RESULTSPERPAGE = "resultsPerPage"
    SEARCHAFTER = "searchAfter"
    SSID = "ssid"
    SSIDLIKE = "ssidlike"
    STARTTRANSID = "startTransID"
    VARIANCE = "variance"
    

class Output:
    FIRST = "first"
    LAST = "last"
    RESULTCOUNT = "resultCount"
    RESULTS = "results"
    SEARCH_AFTER = "search_after"
    TOTALRESULTS = "totalResults"
    

class SearchNetworksInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "encryption": {
      "type": "string",
      "title": "Encryption",
      "description": "Encryption detected: 'None', 'WEP', 'WPA', 'WPA2', 'WPA3', 'Unknown'. Case insensitive",
      "enum": [
        "",
        "None",
        "WEP",
        "WPA",
        "WPA2",
        "WPA3",
        "Unknown"
      ],
      "order": 10
    },
    "endTransID": {
      "type": "string",
      "title": "End Transaction ID",
      "description": "Latest transaction ID by which to bound (year-level precision only)",
      "order": 9
    },
    "freenet": {
      "type": "boolean",
      "title": "Free Networks",
      "description": "Include only networks that have been marked as free access",
      "default": false,
      "order": 11
    },
    "lastupdt": {
      "type": "string",
      "title": "Last Updated",
      "description": "Filter points by how recently they've been updated, condensed date/time numeric string format yyyyMMdd[hhmm[ss]]",
      "order": 7
    },
    "latrange1": {
      "type": "number",
      "title": "Latitude Range Min",
      "description": "Lesser of two latitudes by which to bound the search (specify both)",
      "order": 3
    },
    "latrange2": {
      "type": "number",
      "title": "Latitude Range Max",
      "description": "Greater of two latitudes by which to bound the search (specify both)",
      "order": 4
    },
    "longrange1": {
      "type": "number",
      "title": "Longitude Range Min",
      "description": "Lesser of two longitudes by which to bound the search (specify both)",
      "order": 5
    },
    "longrange2": {
      "type": "number",
      "title": "Longitude Range Max",
      "description": "Greater of two longitudes by which to bound the search (specify both)",
      "order": 6
    },
    "minQoS": {
      "type": "integer",
      "title": "Min QoS",
      "description": "Minimum Quality of Signal (0-7)",
      "order": 16
    },
    "netid": {
      "type": "string",
      "title": "Network ID",
      "description": "Include only networks matching the string network BSSID, e.g. '0A:2C:EF:3D:25:1B' or '0A:2C:EF'. The first three octets are required",
      "order": 13
    },
    "notmine": {
      "type": "string",
      "title": "Not Mine",
      "description": "Only search for networks first seen by other users",
      "order": 2
    },
    "onlymine": {
      "type": "string",
      "title": "Only Mine",
      "description": "Search only for points first discovered by the current user. Use any string to set, leave unset for general search. Can't be used with COMMAPI auth, since these are points you have locally",
      "default": "",
      "order": 1
    },
    "paynet": {
      "type": "boolean",
      "title": "Paid Networks",
      "description": "Include only networks that have been marked as for-pay access",
      "default": false,
      "order": 12
    },
    "resultsPerPage": {
      "type": "integer",
      "title": "Results Per Page",
      "description": "How many results to return per request. Defaults to 25 for COMMAPI, 100 for site. Bounded at 1000 for COMMAPI, 100 for site",
      "order": 18
    },
    "searchAfter": {
      "type": "integer",
      "title": "Search After",
      "description": "Previous page's search_after to get the next page. Use this instead of 'first'",
      "order": 19
    },
    "ssid": {
      "type": "string",
      "title": "SSID",
      "description": "Include only networks exactly matching the string network name",
      "order": 14
    },
    "ssidlike": {
      "type": "string",
      "title": "SSID Like",
      "description": "Include only networks matching the string network name, allowing wildcards '%' (any string) and '_' (any character)",
      "order": 15
    },
    "startTransID": {
      "type": "string",
      "title": "Start Transaction ID",
      "description": "Earliest transaction ID by which to bound (year-level precision only)",
      "order": 8
    },
    "variance": {
      "type": "number",
      "title": "Variance",
      "description": "How tightly to bound queries against the provided latitude/longitude box. Value must be between 0.001 and 0.2. Intended for use with non-exact decimals and geocoded bounds",
      "order": 17
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class SearchNetworksOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "first": {
      "type": "integer",
      "title": "First",
      "description": "First",
      "order": 4
    },
    "last": {
      "type": "integer",
      "title": "Last",
      "description": "Last",
      "order": 5
    },
    "resultCount": {
      "type": "integer",
      "title": "Result Count",
      "description": "Result count",
      "order": 6
    },
    "results": {
      "type": "array",
      "title": "Results",
      "description": "Matched networks",
      "items": {
        "$ref": "#/definitions/network_record"
      },
      "order": 1
    },
    "search_after": {
      "type": "integer",
      "title": "Search After",
      "description": "Search after",
      "order": 3
    },
    "totalResults": {
      "type": "integer",
      "title": "Total Results",
      "description": "Total results",
      "order": 2
    }
  },
  "required": [
    "first",
    "last",
    "resultCount",
    "results",
    "totalResults"
  ],
  "definitions": {
    "location": {
      "type": "object",
      "title": "location",
      "properties": {
        "accuracy": {
          "type": "number",
          "title": "Accuracy",
          "order": 2
        },
        "alt": {
          "type": "integer",
          "title": "Alt",
          "order": 1
        },
        "encryptionValue": {
          "type": "string",
          "title": "Encryption Value",
          "order": 15
        },
        "lastupdt": {
          "type": "string",
          "title": "Last Updated",
          "displayType": "date",
          "format": "date-time",
          "order": 3
        },
        "latitude": {
          "type": "number",
          "title": "Latitude",
          "order": 4
        },
        "longitude": {
          "type": "number",
          "title": "Longitude",
          "order": 5
        },
        "month": {
          "type": "string",
          "title": "Month",
          "order": 6
        },
        "name": {
          "type": "string",
          "title": "Name",
          "order": 10
        },
        "netId": {
          "type": "string",
          "title": "Network ID",
          "order": 11
        },
        "noise": {
          "type": "number",
          "title": "Noise",
          "order": 12
        },
        "signal": {
          "type": "number",
          "title": "Signal",
          "order": 9
        },
        "snr": {
          "type": "number",
          "title": "SNR",
          "order": 13
        },
        "ssid": {
          "type": "string",
          "title": "SSID",
          "order": 7
        },
        "time": {
          "type": "string",
          "title": "Time",
          "displayType": "date",
          "format": "date-time",
          "order": 8
        },
        "wep": {
          "type": "string",
          "title": "WEP",
          "order": 14
        }
      }
    },
    "network_record": {
      "type": "object",
      "title": "network_record",
      "properties": {
        "bcninterval": {
          "type": "integer",
          "title": "BCN Interval",
          "order": 20
        },
        "channel": {
          "type": "integer",
          "title": "Channel",
          "order": 19
        },
        "city": {
          "type": "string",
          "title": "City",
          "order": 11
        },
        "comment": {
          "type": "string",
          "title": "Comment",
          "order": 17
        },
        "country": {
          "type": "string",
          "title": "Country",
          "order": 13
        },
        "dhcp": {
          "type": "string",
          "title": "DHCP",
          "order": 22
        },
        "encryption": {
          "type": "string",
          "title": "Encryption",
          "order": 25
        },
        "firsttime": {
          "type": "string",
          "title": "First Time",
          "displayType": "date",
          "format": "date-time",
          "order": 6
        },
        "freenet": {
          "type": "string",
          "title": "Free Networks",
          "order": 21
        },
        "housenumber": {
          "type": "string",
          "title": "House Number",
          "order": 9
        },
        "lasttime": {
          "type": "string",
          "title": "Last Time",
          "displayType": "date",
          "format": "date-time",
          "order": 7
        },
        "lastupdt": {
          "type": "string",
          "title": "Last Updated",
          "displayType": "date",
          "format": "date-time",
          "order": 8
        },
        "locationData": {
          "type": "array",
          "title": "Location Data",
          "items": {
            "$ref": "#/definitions/location"
          },
          "order": 26
        },
        "name": {
          "type": "string",
          "title": "Name",
          "order": 15
        },
        "netid": {
          "type": "string",
          "title": "Network ID",
          "order": 14
        },
        "paynet": {
          "type": "string",
          "title": "Paid Networks",
          "order": 23
        },
        "qos": {
          "type": "integer",
          "title": "QoS",
          "order": 4
        },
        "region": {
          "type": "string",
          "title": "Region",
          "order": 12
        },
        "road": {
          "type": "string",
          "title": "Road",
          "order": 10
        },
        "ssid": {
          "type": "string",
          "title": "SSID",
          "order": 3
        },
        "transid": {
          "type": "string",
          "title": "Transaction ID",
          "order": 5
        },
        "trilat": {
          "type": "number",
          "title": "Tri Latitude",
          "order": 1
        },
        "trilong": {
          "type": "number",
          "title": "Tri Longitude",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "order": 16
        },
        "userfound": {
          "type": "boolean",
          "title": "User Found",
          "order": 24
        },
        "wep": {
          "type": "string",
          "title": "WEP",
          "order": 18
        }
      },
      "required": [
        "firsttime",
        "lasttime",
        "lastupdt",
        "qos",
        "transid",
        "trilat",
        "trilong"
      ],
      "definitions": {
        "location": {
          "type": "object",
          "title": "location",
          "properties": {
            "accuracy": {
              "type": "number",
              "title": "Accuracy",
              "order": 2
            },
            "alt": {
              "type": "integer",
              "title": "Alt",
              "order": 1
            },
            "encryptionValue": {
              "type": "string",
              "title": "Encryption Value",
              "order": 15
            },
            "lastupdt": {
              "type": "string",
              "title": "Last Updated",
              "displayType": "date",
              "format": "date-time",
              "order": 3
            },
            "latitude": {
              "type": "number",
              "title": "Latitude",
              "order": 4
            },
            "longitude": {
              "type": "number",
              "title": "Longitude",
              "order": 5
            },
            "month": {
              "type": "string",
              "title": "Month",
              "order": 6
            },
            "name": {
              "type": "string",
              "title": "Name",
              "order": 10
            },
            "netId": {
              "type": "string",
              "title": "Network ID",
              "order": 11
            },
            "noise": {
              "type": "number",
              "title": "Noise",
              "order": 12
            },
            "signal": {
              "type": "number",
              "title": "Signal",
              "order": 9
            },
            "snr": {
              "type": "number",
              "title": "SNR",
              "order": 13
            },
            "ssid": {
              "type": "string",
              "title": "SSID",
              "order": 7
            },
            "time": {
              "type": "string",
              "title": "Time",
              "displayType": "date",
              "format": "date-time",
              "order": 8
            },
            "wep": {
              "type": "string",
              "title": "WEP",
              "order": 14
            }
          }
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
