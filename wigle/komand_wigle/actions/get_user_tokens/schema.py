# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Get all authorization tokens for the logged-in user"


class Input:
    TYPE = "type"
    

class Output:
    TOKENS = "tokens"
    

class GetUserTokensInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "type": {
      "type": "string",
      "title": "Type",
      "description": "Token types - 'API', 'COMMAPI', or 'ANDROID'",
      "enum": [
        "",
        "API",
        "COMMAPI",
        "ANDROID"
      ],
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetUserTokensOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "tokens": {
      "type": "array",
      "title": "Tokens",
      "description": "List of matching tokens or an empty list",
      "items": {
        "$ref": "#/definitions/token"
      },
      "order": 1
    }
  },
  "required": [
    "tokens"
  ],
  "definitions": {
    "token": {
      "type": "object",
      "title": "token",
      "properties": {
        "authName": {
          "type": "string",
          "title": "Auth Name",
          "order": 1
        },
        "personId": {
          "type": "integer",
          "title": "Person ID",
          "order": 5
        },
        "status": {
          "type": "string",
          "title": "Status",
          "order": 3
        },
        "token": {
          "type": "string",
          "title": "Token",
          "order": 2
        },
        "type": {
          "type": "string",
          "title": "Type",
          "order": 4
        }
      },
      "required": [
        "authName",
        "personId",
        "status",
        "token",
        "type"
      ]
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
