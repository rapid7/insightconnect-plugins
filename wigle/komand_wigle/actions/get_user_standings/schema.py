# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Get user standings"


class Input:
    PAGEEND = "pageend"
    PAGESTART = "pagestart"
    SORT = "sort"
    

class Output:
    EVENTVIEW = "eventView"
    MYUSERNAME = "myUsername"
    PAGEEND = "pageEnd"
    PAGESTART = "pageStart"
    RESULTS = "results"
    SORTBY = "sortBy"
    TOTALUSERS = "totalUsers"
    

class GetUserStandingsInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "pageend": {
      "type": "integer",
      "title": "Page End",
      "description": "The last record to request according to the 'sort' parameter",
      "order": 3
    },
    "pagestart": {
      "type": "integer",
      "title": "Page Start",
      "description": "The first record to request according to the 'sort' parameter",
      "order": 2
    },
    "sort": {
      "type": "string",
      "title": "Sort",
      "description": "The criteria by which to sort the results. Values are ['discovered', 'total', 'monthcount', 'prevmonthcount', 'gendisc', 'gentotal', 'firsttransid', 'lasttransid']",
      "enum": [
        "",
        "discovered",
        "total",
        "monthcount",
        "prevmonthcount",
        "gendisc",
        "gentotal",
        "firsttransid",
        "lasttransid"
      ],
      "order": 1
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class GetUserStandingsOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "eventView": {
      "type": "boolean",
      "title": "Event View",
      "description": "Event view",
      "order": 2
    },
    "myUsername": {
      "type": "string",
      "title": "My Username",
      "description": "My username",
      "order": 3
    },
    "pageEnd": {
      "type": "integer",
      "title": "Page End",
      "description": "Page end",
      "order": 5
    },
    "pageStart": {
      "type": "integer",
      "title": "Page Start",
      "description": "Page start",
      "order": 4
    },
    "results": {
      "type": "array",
      "title": "Results",
      "description": "Results",
      "items": {
        "$ref": "#/definitions/standing"
      },
      "order": 7
    },
    "sortBy": {
      "type": "string",
      "title": "Sort By",
      "description": "Sort by",
      "order": 1
    },
    "totalUsers": {
      "type": "integer",
      "title": "Total Users",
      "description": "Total users",
      "order": 6
    }
  },
  "required": [
    "eventView",
    "myUsername",
    "pageEnd",
    "pageStart",
    "results",
    "sortBy",
    "totalUsers"
  ],
  "definitions": {
    "standing": {
      "type": "object",
      "title": "standing",
      "properties": {
        "discoveredCell": {
          "type": "integer",
          "title": "Discovered Cell",
          "order": 8
        },
        "discoveredCellGPS": {
          "type": "integer",
          "title": "Discovered Cell GPS",
          "order": 7
        },
        "discoveredWiFI": {
          "type": "integer",
          "title": "Discovered Wifi",
          "order": 6
        },
        "discoveredWiFiGPS": {
          "type": "integer",
          "title": "Discovered Wifi GPS",
          "order": 4
        },
        "discoveredWiFiGPSPercent": {
          "type": "number",
          "title": "Discovered Wifi GPS Percent",
          "order": 5
        },
        "eventMonthCount": {
          "type": "integer",
          "title": "Event Month Count",
          "order": 9
        },
        "eventPrevMonthCount": {
          "type": "integer",
          "title": "Event Previous Month Count",
          "order": 10
        },
        "first": {
          "type": "string",
          "title": "First",
          "order": 14
        },
        "last": {
          "type": "string",
          "title": "Last",
          "order": 15
        },
        "monthRank": {
          "type": "integer",
          "title": "Month Rank",
          "order": 2
        },
        "prevMonthRank": {
          "type": "integer",
          "title": "Previous Month Rank",
          "order": 12
        },
        "prevRank": {
          "type": "integer",
          "title": "Previous Rank",
          "order": 11
        },
        "rank": {
          "type": "integer",
          "title": "Rank",
          "order": 1
        },
        "self": {
          "type": "boolean",
          "title": "Self",
          "order": 16
        },
        "totalWiFiLocations": {
          "type": "integer",
          "title": "Total WiFi Locations",
          "order": 13
        },
        "userName": {
          "type": "string",
          "title": "Username",
          "order": 3
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
