# GENERATED BY KOMAND SDK - DO NOT EDIT
import komand
import json


class Component:
    DESCRIPTION = "Poll for files or directory changes"


class Input:
    
    INTERVAL = "interval"
    MONITOR_MODE = "monitor_mode"
    MONITOR_SIZE = "monitor_size"
    MONITOR_TIME = "monitor_time"
    PATH = "path"
    

class Output:
    
    CHANGED = "changed"
    MODE = "mode"
    SIZE = "size"
    TIME = "time"
    

class MonitorInput(komand.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "interval": {
      "type": "integer",
      "title": "Interval",
      "description": "Poll interval in seconds",
      "default": 300,
      "order": 5
    },
    "monitor_mode": {
      "type": "boolean",
      "title": "Monitor Mode",
      "description": "Monitor file mode",
      "default": false,
      "order": 4
    },
    "monitor_size": {
      "type": "boolean",
      "title": "Monitor Size",
      "description": "Monitor file size",
      "default": false,
      "order": 3
    },
    "monitor_time": {
      "type": "boolean",
      "title": "Monitor Time",
      "description": "Monitor file timestamp",
      "default": true,
      "order": 2
    },
    "path": {
      "type": "string",
      "title": "Path",
      "description": "Path to file or directory",
      "order": 1
    }
  },
  "required": [
    "path"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class MonitorOutput(komand.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "changed": {
      "type": "string",
      "title": "Changed File",
      "displayType": "bytes",
      "description": "Changed file",
      "format": "bytes",
      "order": 1
    },
    "mode": {
      "type": "integer",
      "title": "Mode",
      "description": "Mode",
      "order": 4
    },
    "size": {
      "type": "integer",
      "title": "Size",
      "description": "Size",
      "order": 3
    },
    "time": {
      "type": "string",
      "title": "Time",
      "description": "Time",
      "order": 2
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
